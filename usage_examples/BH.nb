(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    295089,       5345]
NotebookOptionsPosition[    286201,       5172]
NotebookOutlinePosition[    291996,       5292]
CellTagsIndexPosition[    291953,       5289]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Importar QMB y definiciones", "Section",
 CellChangeTimes->{{3.959900694547695*^9, 
  3.9599007181206293`*^9}},ExpressionUUID->"61811e2f-8f88-48b3-827f-\
bc37ccfe3b87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Importar", " ", 
    RowBox[{"QMB", ".", "wl"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Get", "[", "\"\<../QMB.wl\>\"", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.959802292795195*^9, 3.9598023248719397`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7fed30bc-fa40-4ceb-ad43-1c7ce2b0ceb2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hamiltoniano completo", "Section",
 CellChangeTimes->{{3.9599006860802317`*^9, 
  3.959900688428067*^9}},ExpressionUUID->"688bcaf6-9ec4-4d81-8887-\
da0c6fba9cff"],

Cell[TextData[{
 "Hamiltoniano para 3 bosones y 3 sitios con ",
 Cell[BoxData[
  FormBox[
   RowBox[{"J", "=", 
    RowBox[{"U", "=", "1"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c146673d-0d1c-4621-9065-f721cb15f29e"],
 ":"
}], "Text",
 CellChangeTimes->{{3.959802334591762*^9, 
  3.9598023510864897`*^9}},ExpressionUUID->"62f97d22-943c-42aa-8f28-\
57cabdf1ff71"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"L", "=", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"U", "=", "1."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BoseHubbardHamiltonian", "[", 
   RowBox[{"n", ",", "L", ",", "J", ",", "U"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.959802352663494*^9, 3.959802375390912*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"3cb04c4c-0e40-49cf-afaa-f4bf02583117"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.`", 
      RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", "0.`", "0.`",
       "0.`", "0.`", "0.`"},
     {
      RowBox[{"-", "1.7320508075688772`"}], "1.`", 
      RowBox[{"-", "1.`"}], 
      RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "1.`"}], "1.`", "0.`", 
      RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "2.`"}], "0.`", "1.`", 
      RowBox[{"-", "1.4142135623730951`"}], "0.`", 
      RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "1.4142135623730951`"}], 
      RowBox[{"-", "1.4142135623730951`"}], "0.`", 
      RowBox[{"-", "1.4142135623730951`"}], "0.`", 
      RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "1.4142135623730951`"}], "1.`", "0.`", "0.`", 
      RowBox[{"-", "1.`"}], "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "3.`", 
      RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "1.4142135623730951`"}], "0.`", 
      RowBox[{"-", "1.7320508075688772`"}], "1.`", 
      RowBox[{"-", "2.`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "1.`"}], "0.`", 
      RowBox[{"-", "2.`"}], "1.`", 
      RowBox[{"-", "1.7320508075688772`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "1.7320508075688772`"}], "3.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {10, 10}, 0., {
     1, {{0, 2, 6, 9, 13, 18, 21, 24, 28, 32, 34}, {{1}, {2}, {2}, {1}, {3}, {
       4}, {3}, {2}, {5}, {4}, {2}, {5}, {7}, {5}, {4}, {3}, {6}, {8}, {6}, {
       5}, {9}, {7}, {4}, {8}, {8}, {7}, {5}, {9}, {9}, {8}, {6}, {10}, {
       10}, {9}}}, {3., -1.7320508075688772`, 
      1., -1.7320508075688772`, -1., -2., 1., -1., -1.4142135623730951`, 
      1., -2., -1.4142135623730951`, -1.7320508075688772`, 
      0., -1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`, 1., -1.4142135623730951`, -1., 
      3., -1.7320508075688772`, -1.7320508075688772`, 
      1., -1.7320508075688772`, -1.4142135623730951`, -2., 
      1., -2., -1., -1.7320508075688772`, 
      3., -1.7320508075688772`}}]]]]], "Output",
 CellChangeTimes->{{3.9598023716313763`*^9, 3.9598023756247797`*^9}},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"7736ef1d-8930-46c4-a082-\
832b918e5c19"]
}, Open  ]],

Cell["\<\
Mismo Hamiltoniano, pero en los sectores de simetr\[IAcute]a de paridad par e \
impar:\
\>", "Text",
 CellChangeTimes->{{3.959802390880183*^9, 
  3.959802418587595*^9}},ExpressionUUID->"3b65b3d4-a6d7-4b80-8a31-\
0ba03435a844"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"BoseHubbardHamiltonian", "[", 
     RowBox[{"n", ",", "L", ",", "J", ",", "U", ",", 
      RowBox[{"SymmetricSubspace", "->", "\"\<EvenParity\>\""}]}], "]"}], ",", 
    RowBox[{"BoseHubbardHamiltonian", "[", 
     RowBox[{"n", ",", "L", ",", "J", ",", "U", ",", 
      RowBox[{"SymmetricSubspace", "->", "\"\<OddParity\>\""}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.959802424755522*^9, 3.9598024542559853`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"a8751f11-4ac9-4f3d-a9ea-7ed91161589f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3.`", 
        RowBox[{"-", "1.732050807568877`"}], "0.`", "0.`", "0.`", "0.`"},
       {
        RowBox[{"-", "1.732050807568877`"}], "1.`", 
        RowBox[{"-", "0.9999999999999998`"}], 
        RowBox[{"-", "1.9999999999999996`"}], "0.`", "0.`"},
       {"0.`", 
        RowBox[{"-", "0.9999999999999998`"}], "1.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`"},
       {"0.`", 
        RowBox[{"-", "1.9999999999999996`"}], "0.`", "1.`", 
        RowBox[{"-", "2.`"}], 
        RowBox[{"-", "2.449489742783178`"}]},
       {"0.`", "0.`", 
        RowBox[{"-", "2.`"}], 
        RowBox[{"-", "2.`"}], "0.`", "0.`"},
       {"0.`", "0.`", "0.`", 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "3.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {6, 6}, 0., {
       1, {{0, 2, 6, 9, 13, 16, 18}, {{1}, {2}, {2}, {1}, {3}, {4}, {3}, {
         2}, {5}, {4}, {2}, {5}, {6}, {5}, {3}, {4}, {6}, {4}}}, {
        3., -1.732050807568877, 
        1., -1.732050807568877, -0.9999999999999998, -1.9999999999999996`, 
        1., -0.9999999999999998, -2., 
        1., -1.9999999999999996`, -2., -2.449489742783178, 0., -2., -2., 
        3., -2.449489742783178}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`"},
       {
        RowBox[{"-", "1.7320508075688772`"}], "1.`", 
        RowBox[{"-", "1.`"}], 
        RowBox[{"-", "2.`"}]},
       {"0.`", 
        RowBox[{"-", "1.`"}], "1.`", "0.`"},
       {"0.`", 
        RowBox[{"-", "2.`"}], "0.`", "1.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0., {
       1, {{0, 2, 6, 8, 10}, {{1}, {2}, {2}, {1}, {3}, {4}, {3}, {2}, {4}, {
         2}}}, {3., -1.7320508075688772`, 1., -1.7320508075688772`, -1., -2., 
        1., -1., 1., -2.}}]]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.959802449860858*^9, 3.959802454509892*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"e71e5b77-2523-4a50-ae8b-3a7984529bd0"]
}, Open  ]],

Cell["Definici\[OAcute]n de la rutina:", "Text",
 CellChangeTimes->{{3.959802463387308*^9, 3.959802468971368*^9}, 
   3.959802524627276*^9},ExpressionUUID->"76368416-6c93-46bd-9850-\
17df9412398e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "BoseHubbardHamiltonian"}]], "Input",
 CellChangeTimes->{{3.959802470054763*^9, 3.9598024716539183`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"7ca2f5a5-b298-4a93-a641-5ef782f004bc"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*StyleBox[RowBox[{\\\"\
BoseHubbardHamiltonian\\\", \\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\
\\\", StyleBox[\\\"L\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"J\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"U\\\", \\\"TI\\\"], \\\"]\\\"}], \
\\\"MR\\\"]\\) returns the BH Hamiltonian for \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) bosons and \\!\\(\\*StyleBox[\\\"L\\\", \\\"TI\\\"]\\) sites \
with hopping parameter \\!\\(\\*StyleBox[\\\"J\\\", \\\"TI\\\"]\\), and \
interaction parameter \\!\\(\\*StyleBox[\\\"U\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*StyleBox[RowBox[{\\\"BoseHubbardHamiltonian\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"L\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"J\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"U\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"SymmetricSubspace\\\", \\\"TI\\\
\"], \\\"]\\\"}], \\\"MR\\\"]\\) returns the Hamiltonian in a symmetric \
subspace; option SymmetricSubspace takes the options \\\"All\\\" | \
\\\"EvenParity\\\" | \\\"OddParity\\\". \\n\\!\\(\\)\\n\\!\\(\\)Notes: \\n\\!\
\\(\\)- BoseHubbardHamiltonian[n,L,J,U] is equivalent to \
BoseHubbardHamiltonian[n,L,J,U, SymmetricSubspace->\\\"All\\\"].\\n\\!\\(\\)- \
Open boundary conditions are used.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"BoseHubbardHamiltonian", "[", 
                    
                    RowBox[{
                    "QMB`Private`n_Integer", ",", "QMB`Private`L_Integer", 
                    ",", "QMB`Private`J_Real", ",", "QMB`Private`U_Real", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"QMB`Private`tags", ",", "QMB`Private`basis", ",",
                     "QMB`Private`T", ",", "QMB`Private`V"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "SymmetricSubspace", "]"}], 
                    ",", "\"All\"", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"QMB`Private`tags", ",", "QMB`Private`basis"}], 
                    "}"}], "=", 
                    RowBox[{"SortFockBasis", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"FockBasis", "[", 
                    RowBox[{"QMB`Private`n", ",", "QMB`Private`L"}], "]"}], 
                    "]"}], "]"}]}], ";", 
                    RowBox[{"QMB`Private`T", "=", 
                    RowBox[{"KineticTermBoseHubbardHamiltonian", "[", 
                    
                    RowBox[{"QMB`Private`n", ",", "QMB`Private`L", ",", 
                    "QMB`Private`tags", ",", "QMB`Private`basis"}], "]"}]}], 
                    ";"}], ",", "\"EvenParity\"", ",", 
                    RowBox[{
                    RowBox[{"QMB`Private`basis", "=", 
                    RowBox[{"GatherBy", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"FockBasis", "[", 
                    RowBox[{"QMB`Private`n", ",", "QMB`Private`L"}], "]"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"Sort", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{"Reverse", "[", "#1", "]"}]}], "}"}], "]"}], 
                    "&"}]}], "]"}]}], ";", 
                    RowBox[{"QMB`Private`tags", "=", 
                    RowBox[{"QMB`Private`tags", "=", 
                    RowBox[{"Tag", "/@", 
                    RowBox[{"QMB`Private`basis", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}]}]}], ";", 
                    RowBox[{"QMB`Private`T", "=", 
                    RowBox[{"KineticTermBoseHubbardHamiltonian", "[", 
                    
                    RowBox[{"QMB`Private`n", ",", "QMB`Private`L", ",", 
                    "QMB`Private`tags", ",", "QMB`Private`basis", ",", 
                    
                    RowBox[{"SymmetricSubspace", "\[Rule]", 
                    "\"EvenParity\""}]}], "]"}]}], ";", 
                    RowBox[{"QMB`Private`basis", "=", 
                    RowBox[{"QMB`Private`basis", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ";"}], ",", "\"OddParity\"", ",", 
                    RowBox[{
                    RowBox[{"QMB`Private`basis", "=", 
                    RowBox[{"GatherBy", "[", 
                    RowBox[{
                    RowBox[{"Discard", "[", 
                    RowBox[{
                    RowBox[{"FockBasis", "[", 
                    RowBox[{"QMB`Private`n", ",", "QMB`Private`L"}], "]"}], 
                    ",", "PalindromeQ"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Sort", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{"Reverse", "[", "#1", "]"}]}], "}"}], "]"}], 
                    "&"}]}], "]"}]}], ";", 
                    RowBox[{"QMB`Private`tags", "=", 
                    RowBox[{"Tag", "/@", 
                    RowBox[{"QMB`Private`basis", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
                    ";", 
                    RowBox[{"QMB`Private`T", "=", 
                    RowBox[{"KineticTermBoseHubbardHamiltonian", "[", 
                    
                    RowBox[{"QMB`Private`n", ",", "QMB`Private`L", ",", 
                    "QMB`Private`tags", ",", "QMB`Private`basis", ",", 
                    
                    RowBox[{"SymmetricSubspace", "\[Rule]", 
                    "\"OddParity\""}]}], "]"}]}], ";", 
                    RowBox[{"QMB`Private`basis", "=", 
                    RowBox[{"QMB`Private`basis", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ";"}], ",", "_", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{"KineticTermBoseHubbardHamiltonian", "::", 
                    "badSymmetricSubspace"}], "MessageName"], ",", 
                    RowBox[{"OptionValue", "[", "SymmetricSubspace", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "]"}], 
                    ";", 
                    RowBox[{"QMB`Private`V", "=", 
                    
                    RowBox[{"PotentialTermBoseHubbardHamiltonian", "[", 
                    "QMB`Private`basis", "]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "QMB`Private`J"}], " ", "QMB`Private`T"}], 
                    "+", 
                    FractionBox[
                    RowBox[{"QMB`Private`U", " ", "QMB`Private`V"}], 
                    "2"]}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"BoseHubbardHamiltonian", "[", 
                    
                    RowBox[{
                    "N_", ",", "QMB`Private`L_", ",", "QMB`Private`J_", ",", 
                    "QMB`Private`U_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"IntegerQ", "[", "N", "]"}]}], "||", 
                    RowBox[{"!", 
                    RowBox[{"IntegerQ", "[", "QMB`Private`L", "]"}]}]}], ",", 
                    
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"BoseHubbardHamiltonian", "::", "int"}], 
                    "MessageName"], ",", "N", ",", "QMB`Private`L"}], "]"}], 
                    ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "QMB`Private`J", "]"}], "=!=", 
                    "Real"}], "||", 
                    RowBox[{
                    RowBox[{"Head", "[", "QMB`Private`U", "]"}], "=!=", 
                    "Real"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"BoseHubbardHamiltonian", "::", "real"}], 
                    "MessageName"], ",", "QMB`Private`J", ",", 
                    "QMB`Private`U"}], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "]"}], 
                    ";"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"SymmetricSubspace", "\[Rule]", "\<\"All\"\>"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"QMB`BoseHubbardHamiltonian\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*StyleBox[RowBox[{\\\"\
BoseHubbardHamiltonian\\\", \\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\
\\\", StyleBox[\\\"L\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"J\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"U\\\", \\\"TI\\\"], \\\"]\\\"}], \
\\\"MR\\\"]\\) returns the BH Hamiltonian for \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) bosons and \\!\\(\\*StyleBox[\\\"L\\\", \\\"TI\\\"]\\) sites \
with hopping parameter \\!\\(\\*StyleBox[\\\"J\\\", \\\"TI\\\"]\\), and \
interaction parameter \\!\\(\\*StyleBox[\\\"U\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*StyleBox[RowBox[{\\\"BoseHubbardHamiltonian\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"L\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"J\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"U\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"SymmetricSubspace\\\", \\\"TI\\\
\"], \\\"]\\\"}], \\\"MR\\\"]\\) returns the Hamiltonian in a symmetric \
subspace; option SymmetricSubspace takes the options \\\"All\\\" | \
\\\"EvenParity\\\" | \\\"OddParity\\\". \\n\\!\\(\\)\\n\\!\\(\\)Notes: \\n\\!\
\\(\\)- BoseHubbardHamiltonian[n,L,J,U] is equivalent to \
BoseHubbardHamiltonian[n,L,J,U, SymmetricSubspace->\\\"All\\\"].\\n\\!\\(\\)- \
Open boundary conditions are used.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{7.5, {2.009765625, 5.490234375}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{7.5, {2.009765625, 5.490234375}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*StyleBox[RowBox[{\"BoseHubbardHamiltonian\", \"[\", \
StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"L\", \"TI\"], \",\", \
StyleBox[\"J\", \"TI\"], \",\", StyleBox[\"U\", \"TI\"], \"]\"}], \"MR\"]\) \
returns the BH Hamiltonian for \!\(\*StyleBox[\"n\", \"TI\"]\) bosons and \
\!\(\*StyleBox[\"L\", \"TI\"]\) sites with hopping parameter \
\!\(\*StyleBox[\"J\", \"TI\"]\), and interaction parameter \!\(\*StyleBox[\"U\
\", \"TI\"]\).\n\!\(\*StyleBox[RowBox[{\"BoseHubbardHamiltonian\", \"[\", \
StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"L\", \"TI\"], \",\", \
StyleBox[\"J\", \"TI\"], \",\", StyleBox[\"U\", \"TI\"], \",\", \
StyleBox[\"SymmetricSubspace\", \"TI\"], \"]\"}], \"MR\"]\) returns the \
Hamiltonian in a symmetric subspace; option SymmetricSubspace takes the \
options \"All\" | \"EvenParity\" | \"OddParity\". \n\!\(\)\n\!\(\)Notes: \n\!\
\(\)- BoseHubbardHamiltonian[n,L,J,U] is equivalent to \
BoseHubbardHamiltonian[n,L,J,U, SymmetricSubspace->\"All\"].\n\!\(\)- Open \
boundary conditions are used.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, QMB`BoseHubbardHamiltonian, {QMB`BoseHubbardHamiltonian[
         Pattern[QMB`Private`n, 
          Blank[Integer]], 
         Pattern[QMB`Private`L, 
          Blank[Integer]], 
         Pattern[QMB`Private`J, 
          Blank[Real]], 
         Pattern[QMB`Private`U, 
          Blank[Real]], 
         OptionsPattern[]] :> 
       Module[{QMB`Private`tags, QMB`Private`basis, QMB`Private`T, 
          QMB`Private`V}, Switch[
           OptionValue[QMB`SymmetricSubspace], 
           "All", {QMB`Private`tags, QMB`Private`basis} = QMB`SortFockBasis[
              N[
               QMB`FockBasis[QMB`Private`n, QMB`Private`L]]]; 
           QMB`Private`T = 
            QMB`KineticTermBoseHubbardHamiltonian[
             QMB`Private`n, QMB`Private`L, QMB`Private`tags, 
              QMB`Private`basis]; Null, "EvenParity", 
           QMB`Private`basis = GatherBy[
              N[
               QMB`FockBasis[QMB`Private`n, QMB`Private`L]], Sort[{#, 
                Reverse[#]}]& ]; 
           QMB`Private`tags = (QMB`Private`tags = Map[QMB`Tag, 
               Part[QMB`Private`basis, All, 1]]); 
           QMB`Private`T = 
            QMB`KineticTermBoseHubbardHamiltonian[
             QMB`Private`n, QMB`Private`L, QMB`Private`tags, 
              QMB`Private`basis, QMB`SymmetricSubspace -> "EvenParity"]; 
           QMB`Private`basis = Part[QMB`Private`basis, All, 1]; Null, 
           "OddParity", QMB`Private`basis = GatherBy[
              Discard[
               QMB`FockBasis[QMB`Private`n, QMB`Private`L], PalindromeQ], 
              Sort[{#, 
                Reverse[#]}]& ]; QMB`Private`tags = Map[QMB`Tag, 
              Part[QMB`Private`basis, All, 1]]; 
           QMB`Private`T = 
            QMB`KineticTermBoseHubbardHamiltonian[
             QMB`Private`n, QMB`Private`L, QMB`Private`tags, 
              QMB`Private`basis, QMB`SymmetricSubspace -> "OddParity"]; 
           QMB`Private`basis = Part[QMB`Private`basis, All, 1]; Null, 
           Blank[], Message[
             MessageName[
             QMB`KineticTermBoseHubbardHamiltonian, "badSymmetricSubspace"], 
             OptionValue[QMB`SymmetricSubspace]]; Return[$Failed]; Null]; 
         QMB`Private`V = 
          QMB`PotentialTermBoseHubbardHamiltonian[
           QMB`Private`basis]; (-QMB`Private`J) 
           QMB`Private`T + (QMB`Private`U/2) QMB`Private`V], 
       QMB`BoseHubbardHamiltonian[
         Pattern[N, 
          Blank[]], 
         Pattern[QMB`Private`L, 
          Blank[]], 
         Pattern[QMB`Private`J, 
          Blank[]], 
         Pattern[QMB`Private`U, 
          Blank[]]] :> Module[{}, If[
           Or[
            Not[
             IntegerQ[N]], 
            Not[
             IntegerQ[QMB`Private`L]]], Message[
             MessageName[QMB`BoseHubbardHamiltonian, "int"], N, 
             QMB`Private`L]; Return[$Failed]; Null]; If[
           Or[Head[QMB`Private`J] =!= Real, Head[QMB`Private`U] =!= Real], 
           Message[
             MessageName[QMB`BoseHubbardHamiltonian, "real"], QMB`Private`J, 
             QMB`Private`U]; Return[$Failed]; Null]; Null]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {QMB`SymmetricSubspace -> "All"}, "Attributes" -> {}, 
    "FullName" -> "QMB`BoseHubbardHamiltonian"|>, False]]], "Output",
 CellChangeTimes->{3.9598024721618032`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"19280415-8097-412b-bf99-895ea1363799"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Sectores de simetr\[IAcute]a", "Section",
 CellChangeTimes->{{3.959712107609941*^9, 3.959712124900888*^9}, {
  3.9599006735239363`*^9, 
  3.959900673666614*^9}},ExpressionUUID->"d48b9be8-1bb0-4306-8efa-\
e242635be8a5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"L", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"BoseHubbardHilbertSpaceDimension", "[", 
    RowBox[{"n", ",", "L"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"tags", ",", "basis"}], "}"}], "=", 
  RowBox[{"SortFockBasis", "[", 
   RowBox[{"FockBasis", "[", 
    RowBox[{"n", ",", "L"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.95971213942106*^9, 3.959712153403433*^9}, {
  3.9597122657373257`*^9, 3.959712271821795*^9}, {3.959883751285591*^9, 
  3.959883757921876*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"bc69cdcd-509f-4c69-8542-7ce9a03d6031"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "6.92820323`", ",", "15.34504399`", ",", "19.44395927`", ",", 
     "22.60304761`", ",", "23.76188475`", ",", "27.86080003`", ",", 
     "31.01988837`", ",", "31.95971531`", ",", "32.1787255`", ",", 
     "35.11880365`", ",", "36.27764079`", ",", "38.27789199`", ",", 
     "39.43672912`", ",", "40.37655607`", ",", "40.59556626`", ",", 
     "43.53564441`", ",", "44.47547135`", ",", "44.69448154`", ",", 
     "46.69473274`", ",", "47.63455969`", ",", "47.85356988`", ",", 
     "48.79339683`", ",", "50.79364803`", ",", "51.95248516`", ",", 
     "52.89231211`", ",", "53.95273636`", ",", "55.1115735`", ",", 
     "56.05140045`", ",", "56.9912274`", ",", "59.21048878`", ",", 
     "60.15031573`", ",", "62.36957712`", ",", "63.30940407`", ",", 
     "66.46849241`", ",", "69.62758074`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "4", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "4", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "4"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9597121537400312`*^9, 3.959712272098446*^9, 3.959790997092371*^9, {
   3.9598837517539873`*^9, 3.9598837585534363`*^9}, 3.959890532582955*^9, 
   3.959900304934465*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"cfecf1da-169d-453a-ae78-f65969c2d1c8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Tag", "[", 
               RowBox[{"Reverse", "[", "#", "]"}], "]"}], "&"}], "/@", 
             "basis"}], "/.", 
            RowBox[{"Thread", "[", 
             RowBox[{"tags", "->", "#"}], "]"}]}], ",", "#"}], "}"}], "&"}], "[", 
        RowBox[{"Range", "[", "d", "]"}], "]"}], "]"}], "->", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1.", ",", "d"}], "]"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"egvalsR", ",", "eigvecsR"}], "}"}], "=", 
   RowBox[{"Chop", "[", 
    RowBox[{"Eigensystem", "[", "R", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.959712159540615*^9, 3.9597123184028788`*^9}, {
  3.9597123584617453`*^9, 3.959712393333989*^9}, {3.9597125339013357`*^9, 
  3.959712562821933*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"3b9c2598-367d-426f-8b7a-15188f04d1de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", ":", " ", 
    RowBox[{"R", " ", "es", " ", "una", " ", "matriz", " ", "unitaria"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"R", "//", "UnitaryMatrixQ"}]}]], "Input",
 CellChangeTimes->{{3.9597124548848886`*^9, 3.95971247052271*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"8aed08fe-ef2d-4717-9238-d88ea4ac5328"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.9597124708055*^9, {3.959712543327442*^9, 3.9597125640493107`*^9}, 
   3.959790998480956*^9, 3.959883777942914*^9, 3.9599003064832172`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"5ab8f007-519b-4db0-812e-b9ef83d18fc2"]
}, Open  ]],

Cell[TextData[{
 "Comparaci\[OAcute]n de H y H por bloques ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"H", "=", 
     RowBox[{
      SubscriptBox["H", "+"], "\[CirclePlus]", 
      SubscriptBox["H", "-"]}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "1722d62a-b1c4-47e6-a0d0-d6a37c9b7a94"],
 ":"
}], "Text",
 CellChangeTimes->{{3.9597125940181637`*^9, 3.9597126319789743`*^9}, {
  3.959790998938595*^9, 
  3.959791000144909*^9}},ExpressionUUID->"a8585cbc-b513-4a49-b96c-\
8f4f4ff2a0d2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"U", "=", "1."}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"BoseHubbardHamiltonian", "[", 
    RowBox[{"n", ",", "L", ",", "J", ",", "U", ",", 
     RowBox[{"Version", "->", "\"\<Old\>\""}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"H", ",", 
    RowBox[{"Chop", "[", 
     RowBox[{"eigvecsR", ".", "H", ".", 
      RowBox[{"Transpose", "[", "eigvecsR", "]"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Heven", ",", "Hodd"}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{";;", 
            RowBox[{"#2", "-", "1"}]}], ",", 
           RowBox[{";;", 
            RowBox[{"#2", "-", "1"}]}]}], "]"}], "]"}], ",", 
        RowBox[{"#1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"#2", ";;"}], ",", 
           RowBox[{"#2", ";;"}]}], "]"}], "]"}]}], "}"}], "&"}], "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eigvecsR", ".", "H", ".", 
        RowBox[{"Transpose", "[", "eigvecsR", "]"}]}], ",", 
       RowBox[{
        RowBox[{"FirstPosition", "[", 
         RowBox[{
          RowBox[{"Round", "[", "egvalsR", "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.9597123223739777`*^9, 3.959712356651211*^9}, {
  3.9597123986726913`*^9, 3.959712436275144*^9}, {3.959712550928459*^9, 
  3.9597125705832243`*^9}, {3.9597127171660137`*^9, 3.9597127230621653`*^9}, {
  3.9598837879792747`*^9, 3.9598837970882053`*^9}, {3.9598840146840878`*^9, 
  3.959884080753015*^9}, {3.959884110850322*^9, 3.959884150990631*^9}, {
  3.959884242109128*^9, 3.959884261300411*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"cbd3b98c-6309-4728-841b-8bb91ce7031d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {
        RowBox[{"-", "2.`"}], "3.`", 
        RowBox[{"-", "1.`"}], "0.`", 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", 
        RowBox[{"-", "1.`"}], "3.`", 
        RowBox[{"-", "1.`"}], "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", 
        RowBox[{"-", "1.`"}], "3.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`"},
       {"0.`", 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "0.`", "2.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`"},
       {"0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "1.`", 
        RowBox[{"-", "1.`"}], 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", 
        RowBox[{"-", "1.`"}], "1.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "2.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "0.`", "0.`", "3.`", 
        "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "1.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "1.`", "0.`", 
        RowBox[{"-", "1.`"}], 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "2.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "1.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "1.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "6.`", "0.`",
         "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "3.`", "0.`", 
        "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "3.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "1.`", "0.`", 
        "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "1.`", "0.`", 
        "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", "3.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "0.`", "0.`", "2.`", 
        "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "1.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "1.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "0.`", "3.`", "0.`", 
        "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "3.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "2.`", "0.`", 
        "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.`"}], 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "1.`", "0.`", 
        RowBox[{"-", "2.`"}], 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "6.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], 
        RowBox[{"-", "2.`"}], "0.`", "1.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], 
        RowBox[{"-", "1.4142135623730951`"}], "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], 
        RowBox[{"-", "2.`"}], "0.`", "3.`", "0.`", 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688772`"}], "0.`", "3.`", "0.`", 
        RowBox[{"-", "1.`"}], "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730951`"}], 
        RowBox[{"-", "2.449489742783178`"}], "0.`", "2.`", 
        RowBox[{"-", "2.449489742783178`"}], "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", 
        RowBox[{"-", "1.`"}], 
        RowBox[{"-", "2.449489742783178`"}], "3.`", 
        RowBox[{"-", "2.`"}]},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "6.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {35, 35}, 0., {
       1, {{0, 2, 6, 10, 13, 17, 23, 28, 32, 36, 41, 47, 50, 55, 61, 64, 71, 
         75, 80, 85, 90, 94, 99, 104, 110, 115, 118, 122, 128, 131, 137, 141, 
         145, 149, 153, 155}, {{1}, {2}, {2}, {1}, {3}, {5}, {3}, {2}, {4}, {
         6}, {4}, {3}, {7}, {5}, {2}, {6}, {9}, {6}, {5}, {3}, {7}, {8}, {
         11}, {7}, {6}, {4}, {10}, {13}, {8}, {6}, {10}, {14}, {9}, {5}, {
         11}, {15}, {10}, {8}, {7}, {12}, {16}, {11}, {9}, {6}, {13}, {14}, {
         18}, {12}, {10}, {19}, {13}, {11}, {7}, {16}, {21}, {14}, {11}, {
         8}, {16}, {17}, {22}, {15}, {9}, {18}, {16}, {14}, {13}, {10}, {
         19}, {20}, {24}, {17}, {14}, {20}, {25}, {18}, {15}, {11}, {21}, {
         22}, {19}, {16}, {12}, {23}, {27}, {20}, {17}, {16}, {23}, {28}, {
         21}, {18}, {13}, {24}, {22}, {18}, {14}, {24}, {25}, {23}, {20}, {
         19}, {26}, {30}, {24}, {22}, {21}, {16}, {27}, {28}, {25}, {22}, {
         17}, {28}, {29}, {26}, {23}, {32}, {27}, {24}, {19}, {30}, {28}, {
         25}, {24}, {20}, {30}, {31}, {29}, {25}, {31}, {30}, {28}, {27}, {
         23}, {32}, {33}, {31}, {29}, {28}, {33}, {32}, {30}, {26}, {34}, {
         33}, {31}, {30}, {34}, {34}, {33}, {32}, {35}, {35}, {
         34}}}, CompressedData["
1:eJxTTMoPSmVkYGCYzQADEg5QxgEIxYHG/7BfT5FTpG8GM5r8h/0wepVPxIuq
bb/3o8ujijM4wMw5a12fNm/BNzRzP9jDxFH1fdgPE0dzlz12ez6gqWNwgOlH
p2HuhbkDzb0Y7kJ3D5q4PQ79cD56eOAyB10fjnCxR5dHV4dqLno8w2kGXOFD
KNxg9mAPf0Q6QpfHFe+4whk9fHGkB5zpj1A6xJUe0c3H7k/MdIvdP4j8hWYP
uvvg6nCkawLpmdR0iCtdYKYvdPeipwd089HLDRzhR2T5gBluqO5F+AMA5EmX
rQ==
        "]}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.0000000000000002`", "0", "0", "0", "1.7320508075688774`", "0", 
        "2.0000000000000004`", "0", "0", "0", "0", "2.0000000000000004`", "0",
         "0", "0", 
        RowBox[{"-", "1.0000000000000002`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "3.0000000000000004`", "0", 
        RowBox[{"-", "1.7320508075688774`"}], "0", "1.0000000000000002`", "0",
         "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1.0000000000000002`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0"},
       {"0", "0", "1.0000000000000002`", "0", "0", "0", 
        RowBox[{"-", "1.0000000000000002`"}], "0", "0", 
        RowBox[{"-", "2.0000000000000004`"}], 
        RowBox[{"-", "1.4142135623730954`"}], 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0"},
       {"0", 
        RowBox[{"-", "1.7320508075688774`"}], "0", "1.0000000000000002`", "0",
         "0", "1.0000000000000002`", "0", "0", "0", "1.4142135623730954`", 
        "0", "0", "0", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "1.4142135623730954`", "0", "0",
         "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
         "0", "0"},
       {"1.7320508075688774`", "0", "0", "0", "3.0000000000000004`", "0", "0", 
        RowBox[{"-", "1.7320508075688774`"}], 
        RowBox[{"-", "1.0000000000000002`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0"},
       {"0", "1.0000000000000002`", "0", "0", "0", "3.`", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "2.4494897427831783`"}], "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"2.0000000000000004`", "0", 
        RowBox[{"-", "1.0000000000000002`"}], "1.0000000000000002`", "0", "0",
         "1.0000000000000002`", "0", "0", "0", "0", "0", "0", 
        "1.7320508075688774`", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", 
        RowBox[{"-", "1.7320508075688774`"}], "0", "0", "1.0000000000000002`",
         "0", "0", 
        RowBox[{"-", "1.4142135623730954`"}], 
        RowBox[{"-", "2.`"}], "0", "0", "0", "2.0000000000000004`", "0", 
        "2.`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", 
        RowBox[{"-", "1.0000000000000002`"}], "0", "0", "0", 
        "3.0000000000000004`", "0", "0", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "1.7320508075688774`",
         "0", "3.4641016151377544`", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "0", "0", "0", "0", 
        "2.`", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", 
        RowBox[{"-", "1.4142135623730954`"}], "1.4142135623730954`", "0", "0",
         "0", 
        RowBox[{"-", "1.4142135623730954`"}], "0", "0", "2.0000000000000004`",
         "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
         "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"2.0000000000000004`", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "0", "0", 
        RowBox[{"-", "2.`"}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "0", 
        "6.000000000000001`", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0"},
       {"0", 
        RowBox[{"-", "1.0000000000000002`"}], "0", "0", "0", "0", 
        "1.7320508075688774`", "0", "0", "0", "0", "0", "0", 
        "3.0000000000000004`", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "3.0000000000000004`", 
        "1.7320508075688774`", 
        RowBox[{"-", "2.4494897427831783`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {
        RowBox[{"-", "1.0000000000000002`"}], "0", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "0", 
        "2.0000000000000004`", "1.7320508075688774`", "0", "0", "0", "0", "0",
         "1.7320508075688774`", "1.0000000000000002`", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0"},
       {"0", "0", "0", "1.4142135623730954`", "0", 
        RowBox[{"-", "2.4494897427831783`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", 
        RowBox[{"-", "2.4494897427831783`"}], "0", "2.0000000000000004`", "0",
         "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
         "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "2.`", "3.4641016151377544`", "0", 
        "0", "0", "0", "0", "0", "0", "0", "2.`", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "6.000000000000001`", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "3.0000000000000004`", 
        RowBox[{"-", "1.0000000000000002`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "2.4494897427831783`", 
        "2.0000000000000004`"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", 
        RowBox[{"-", "1.0000000000000002`"}], "3.`", 
        RowBox[{"-", "1.0000000000000002`"}], 
        RowBox[{"-", "1.7320508075688774`"}], "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1.0000000000000002`"}], "3.`", "0", "0", "0", "0", "0", 
        "0", "1.7320508075688774`", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1.7320508075688774`"}], "0", "1.0000000000000002`", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "0", 
        "1.0000000000000002`", "0", "1.4142135623730954`", "0", "0", 
        "1.4142135623730954`", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "1.0000000000000002`", 
        "2.0000000000000004`", "0", "0", 
        RowBox[{"-", "1.7320508075688774`"}], "0", "0", 
        RowBox[{"-", "1.4142135623730954`"}], "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "2.0000000000000004`", 
        "1.0000000000000002`", 
        RowBox[{"-", "1.0000000000000002`"}], "0", "0", "0", 
        "1.7320508075688774`", "0", "0", "1.7320508075688774`", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1.0000000000000002`"}], "1.0000000000000002`", "0", 
        RowBox[{"-", "1.7320508075688774`"}], "2.0000000000000004`", "0", "0",
         "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "1.0000000000000002`", "0", 
        RowBox[{"-", "1.0000000000000002`"}], "0", 
        RowBox[{"-", "1.4142135623730954`"}], "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1.7320508075688774`"}], "0", 
        RowBox[{"-", "1.7320508075688774`"}], "0", "3.`", "0", 
        "1.0000000000000002`", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "1.7320508075688774`", 
        "1.0000000000000002`", "0", "0", "2.0000000000000004`", 
        RowBox[{"-", "1.0000000000000002`"}], "0", "1.0000000000000002`", "0",
         "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "1.7320508075688774`", "0", "0", "1.0000000000000002`", "0", "3.`", 
        "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "1.4142135623730954`", 
        RowBox[{"-", "1.4142135623730954`"}], "0", "0", 
        RowBox[{"-", "1.4142135623730954`"}], "0", "0", "0", 
        "2.0000000000000004`", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "6.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "1.7320508075688774`", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "2.0000000000000004`"}], "3.`", 
        RowBox[{"-", "2.4494897427831783`"}], "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "2.4494897427831783`", "0", "0", 
        "1.4142135623730954`", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "2.4494897427831783`"}], "2.0000000000000004`", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "2.0000000000000004`", "0", "0", "0", "0", 
        "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.959712335752823*^9, {3.959712421998275*^9, 3.9597124368454857`*^9}, {
   3.959712546627042*^9, 3.95971257434478*^9}, 3.959791002503525*^9, {
   3.959883782141725*^9, 3.959883797498855*^9}, 3.9598841521845703`*^9, {
   3.9598842460902023`*^9, 3.959884261579341*^9}, 3.959900309252617*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"abbcf4f1-8a35-4753-b3f0-e200cb7dbdc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1.0000000000000002`", "0.`", "0.`", "0.`", "1.7320508075688774`", 
        "0.`", "2.0000000000000004`", "0.`", "0.`", "0.`", "0.`", 
        "2.0000000000000004`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.0000000000000002`"}], "0.`", "0.`", "0.`"},
       {"0.`", "3.0000000000000004`", "0.`", 
        RowBox[{"-", "1.7320508075688774`"}], "0.`", "1.0000000000000002`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.0000000000000002`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`"},
       {"0.`", "0.`", "1.0000000000000002`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.0000000000000002`"}], "0.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], 
        RowBox[{"-", "1.4142135623730954`"}], 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`"},
       {"0.`", 
        RowBox[{"-", "1.7320508075688774`"}], "0.`", "1.0000000000000002`", 
        "0.`", "0.`", "1.0000000000000002`", "0.`", "0.`", "0.`", 
        "1.4142135623730954`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "1.4142135623730954`", "0.`", 
        "0.`"},
       {"1.7320508075688774`", "0.`", "0.`", "0.`", "3.0000000000000004`", 
        "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688774`"}], 
        RowBox[{"-", "1.0000000000000002`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "1.0000000000000002`", "0.`", "0.`", "0.`", "3.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.4494897427831783`"}], "0.`", 
        RowBox[{"-", "2.0000000000000004`"}]},
       {"2.0000000000000004`", "0.`", 
        RowBox[{"-", "1.0000000000000002`"}], "1.0000000000000002`", "0.`", 
        "0.`", "1.0000000000000002`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "1.7320508075688774`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688774`"}], "0.`", "0.`", 
        "1.0000000000000002`", "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730954`"}], 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "2.0000000000000004`", 
        "0.`", "2.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.0000000000000002`"}], "0.`", "0.`", "0.`", 
        "3.0000000000000004`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`", 
        "1.7320508075688774`", "0.`", "3.4641016151377544`", "0.`"},
       {"0.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "2.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`"},
       {"0.`", "0.`", 
        RowBox[{"-", "1.4142135623730954`"}], "1.4142135623730954`", "0.`", 
        "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730954`"}], "0.`", "0.`", 
        "2.0000000000000004`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`"},
       {"2.0000000000000004`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
         "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`", "0.`", 
        "6.000000000000001`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`", "0.`", "0.`"},
       {"0.`", 
        RowBox[{"-", "1.0000000000000002`"}], "0.`", "0.`", "0.`", "0.`", 
        "1.7320508075688774`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "3.0000000000000004`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "3.0000000000000004`", 
        "1.7320508075688774`", 
        RowBox[{"-", "2.4494897427831783`"}], "0.`", "0.`"},
       {
        RowBox[{"-", "1.0000000000000002`"}], "0.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`", "0.`", 
        "2.0000000000000004`", "1.7320508075688774`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "1.7320508075688774`", "1.0000000000000002`", "0.`", 
        "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "1.4142135623730954`", "0.`", 
        RowBox[{"-", "2.4494897427831783`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.4494897427831783`"}], "0.`", "2.0000000000000004`", 
        "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "2.`", 
        "3.4641016151377544`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "2.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "6.000000000000001`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3.0000000000000004`", 
        RowBox[{"-", "1.0000000000000002`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "2.4494897427831783`", "2.0000000000000004`"},
       {
        RowBox[{"-", "1.0000000000000002`"}], "3.`", 
        RowBox[{"-", "1.0000000000000002`"}], 
        RowBox[{"-", "1.7320508075688774`"}], "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", 
        RowBox[{"-", "1.0000000000000002`"}], "3.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "1.7320508075688774`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`"},
       {"0.`", 
        RowBox[{"-", "1.7320508075688774`"}], "0.`", "1.0000000000000002`", 
        "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`", "0.`", 
        "1.0000000000000002`", "0.`", "1.4142135623730954`", "0.`", "0.`", 
        "1.4142135623730954`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "1.0000000000000002`", 
        "2.0000000000000004`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688774`"}], "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730954`"}], "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "2.0000000000000004`", 
        "1.0000000000000002`", 
        RowBox[{"-", "1.0000000000000002`"}], "0.`", "0.`", "0.`", 
        "1.7320508075688774`", "0.`", "0.`", "1.7320508075688774`", "0.`", 
        "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.0000000000000002`"}], "1.0000000000000002`", "0.`", 
        RowBox[{"-", "1.7320508075688774`"}], "2.0000000000000004`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "1.0000000000000002`", "0.`", 
        RowBox[{"-", "1.0000000000000002`"}], "0.`", 
        RowBox[{"-", "1.4142135623730954`"}], "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "1.7320508075688774`"}], "0.`", 
        RowBox[{"-", "1.7320508075688774`"}], "0.`", "3.`", "0.`", 
        "1.0000000000000002`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "1.7320508075688774`", "1.0000000000000002`", "0.`", 
        "0.`", "2.0000000000000004`", 
        RowBox[{"-", "1.0000000000000002`"}], "0.`", "1.0000000000000002`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "1.7320508075688774`", "0.`", 
        "0.`", "1.0000000000000002`", "0.`", "3.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "1.4142135623730954`", 
        RowBox[{"-", "1.4142135623730954`"}], "0.`", "0.`", 
        RowBox[{"-", "1.4142135623730954`"}], "0.`", "0.`", "0.`", 
        "2.0000000000000004`", "0.`", "0.`", "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "6.`", 
        RowBox[{"-", "2.0000000000000004`"}], "0.`", "0.`"},
       {"0.`", "0.`", "0.`", "0.`", "0.`", "1.7320508075688774`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.0000000000000004`"}], "3.`", 
        RowBox[{"-", "2.4494897427831783`"}], "0.`"},
       {"2.4494897427831783`", "0.`", "0.`", "1.4142135623730954`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        RowBox[{"-", "2.4494897427831783`"}], "2.0000000000000004`", "0.`"},
       {"2.0000000000000004`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
        "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "6.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.959712335752823*^9, {3.959712421998275*^9, 3.9597124368454857`*^9}, {
   3.959712546627042*^9, 3.95971257434478*^9}, 3.959791002503525*^9, {
   3.959883782141725*^9, 3.959883797498855*^9}, 3.9598841521845703`*^9, {
   3.9598842460902023`*^9, 3.959884261579341*^9}, 3.959900309267473*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"9fcdb901-70dc-4774-883e-3585f3cc4382"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"eigvalseven", ",", "eigvalsodd"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"Eigenvalues", "[", "#", "]"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"Heven", ",", "Hodd"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.959900293516562*^9, 3.959900402845694*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6684df9c-5741-47ec-a3e3-69ab9dbb3bc1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.006629642905041`"}], ",", 
     RowBox[{"-", "2.7643133531945443`"}], ",", 
     RowBox[{"-", "2.2047076198623246`"}], ",", 
     RowBox[{"-", "0.9586209516206072`"}], ",", 
     RowBox[{"-", "0.40080609938182055`"}], ",", 
     RowBox[{"-", "0.03779669256391539`"}], ",", "0.6715743625781534`", ",", 
     "1.6939953982675493`", ",", "1.9400162699045755`", ",", 
     "2.2193060695410547`", ",", "3.0126098053572536`", ",", 
     "3.2626188082891447`", ",", "4.055195417575832`", ",", 
     "4.586951753588807`", ",", "4.785074272619892`", ",", 
     "5.960120876365213`", ",", "6.74527240746203`", ",", 
     "7.4859521809603145`", ",", "8.954186737018441`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.747504732751181`"}], ",", 
     RowBox[{"-", "1.8162979975358406`"}], ",", 
     RowBox[{"-", "1.2186416402790048`"}], ",", 
     RowBox[{"-", "0.6570809818995533`"}], ",", "0.5828536314233222`", ",", 
     "0.8086133288629541`", ",", "1.586943656676509`", ",", 
     "2.209565088341702`", ",", "2.9443730080017243`", ",", 
     "3.4278184603575688`", ",", "4.166206259408857`", ",", 
     "4.651415203030756`", ",", "5.300014944323861`", ",", 
     "5.979508685034204`", ",", "7.366574467743864`", ",", 
     "8.41563861926025`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.959900389538535*^9, 3.959900403475691*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"44981c81-7907-41ce-900c-370380000d2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sort", "[", 
    RowBox[{"Eigenvalues", "[", "#", "]"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"BoseHubbardHamiltonian", "[", 
     RowBox[{"n", ",", "L", ",", "J", ",", "U", ",", 
      RowBox[{"SymmetricSubspace", "->", "\"\<EvenParity\>\""}]}], "]"}], ",", 
    RowBox[{"BoseHubbardHamiltonian", "[", 
     RowBox[{"n", ",", "L", ",", "J", ",", "U", ",", 
      RowBox[{"SymmetricSubspace", "->", "\"\<OddParity\>\""}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.95990049731984*^9, 3.959900542359405*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"614b908b-e9e3-4257-91bd-bd63f568e395"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.006629642905033`"}], ",", 
     RowBox[{"-", "2.764313353194546`"}], ",", 
     RowBox[{"-", "2.2047076198623285`"}], ",", 
     RowBox[{"-", "0.958620951620606`"}], ",", 
     RowBox[{"-", "0.40080609938182027`"}], ",", 
     RowBox[{"-", "0.037796692563919154`"}], ",", "0.6715743625781538`", ",", 
     "1.693995398267549`", ",", "1.9400162699045738`", ",", 
     "2.2193060695410534`", ",", "3.0126098053572528`", ",", 
     "3.262618808289144`", ",", "4.055195417575831`", ",", 
     "4.586951753588808`", ",", "4.78507427261989`", ",", 
     "5.960120876365211`", ",", "6.745272407462029`", ",", 
     "7.485952180960306`", ",", "8.954186737018437`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.7475047327511795`"}], ",", 
     RowBox[{"-", "1.8162979975358389`"}], ",", 
     RowBox[{"-", "1.2186416402789992`"}], ",", 
     RowBox[{"-", "0.6570809818995479`"}], ",", "0.5828536314233207`", ",", 
     "0.8086133288629554`", ",", "1.5869436566765098`", ",", 
     "2.2095650883417024`", ",", "2.9443730080017247`", ",", 
     "3.427818460357568`", ",", "4.166206259408856`", ",", 
     "4.651415203030758`", ",", "5.30001494432386`", ",", 
     "5.979508685034205`", ",", "7.366574467743859`", ",", 
     "8.415638619260253`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.959900516871869*^9, 3.959900543199522*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"d3c36456-c14c-4e4a-87bf-ea072ddda907"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SDf", "Section",
 CellChangeTimes->{{3.9599591672881804`*^9, 
  3.959959167617964*^9}},ExpressionUUID->"c95357f3-31c0-4a97-b88b-\
6bb122a0c28d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoseHubbardHamiltonian", "[", 
  RowBox[{"8", ",", "8", ",", "1.", ",", "1."}], "]"}]], "Input",
 CellChangeTimes->{{3.959959169986948*^9, 3.959959212273755*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c4223bd9-afac-4158-af69-bc7621596316"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["54483", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"6435", ",", "6435"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["54483", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"6435", ",", "6435"}], "}"}], "SummaryItem"]}]}, {
              
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.0013157213157213158`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "28.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2.8284271247461903`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "21.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2.8284271247461903`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {6435, 6435}, 0., {1, {CompressedData["
1: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
     "], CompressedData["
1:eJxMnWW4ZcXVhO/2vQ9ugzsMg7sM7hp8kDC4u7u7OwTX4A5BgwX9cNfg7q5B
Al+/U6ty7o/1kMzcOXfv7iW1alX3mXrTndbYMR8YGHjhxYGBbECWh/G/i2RV
/Jc/K5O18V/+rE7Wi5/J4+/GiD/nZ5pkY8Z/+bMu2djxc/5s/v3oycaJv+dn
R0s2XvydfyefM1ayCeLv+dkh8W/b+LuJ4vdX8XkTx7/zc/K7x002afy8fzd/
Nn6yKeJn/Nw8w4TJpo7P8/tNEL9r2vi3fjZ+dpJkQ+Pf+n15zsmSzRC/Z6z4
uWHxWb34/EnjGWaOf+N1mCrZbPH5fgc+b/Jks8ezeA3599MkmyPef4x4zjnj
d/pd+bdTJpsrfu+Y8SxTx/PPF7/Da8AzTJds/vi3flf+bPpkw+N3e48mis/h
HWdKtmD8vkni5xeKz/TazJhs0fj9Y8czzRDvt3i800TxWUvEO3mPZ473XTKe
x2vDZ86SbOn4nX5n/mzWZMvGM9onpojfx5rMk2z5eIbx4rlmi/dfMd7LPsPP
L5BspfidXqu5k/0lntn7Mk/87Crx3BPEu8wXa7RaPJ/Xlc+YN9ka8czTx/8f
Ec8zJJ6RtVs7nt8+OzSel71ZLNk6sU723QVjLf86IP+YONZwvXgn+/Kw+Az2
bKlkI+O5vL4LJ9sg3m1ovO9i8bMbxfN6zfnZRZJtHO88aazD4rHem8QzO15m
j3djD1dItlmsn/2K37FMss3jGR0Tc8W/YY9XTrZVvK/ja474fSvFXmwT7+eY
4N+tmmzbeGbvw3LJto938P/fMZ5xqoG+j7DvayXbKdZi9lifFeJ5do53njrW
YcXYn11jTxzDPNu6yXaLvXEsrxb7tnusgX12gfh8nn3NZHvGOjh2h8ez4U/r
J9s71m+B+Pl94t0d0wvFz+JvGybbL97Z+7h6sgNiLZ03Fox3wU/Y/4PiveeP
tVgrfvch8d4zxFqsHft7WOzLsPiskbG/h8ezO1fwXvjdlsmOive2ry8Vv4Nn
3jTZ0bGWzkVLxLPxuVsnOzbWzD7Ov9si2XGx1jPH+uOf+Mrx8e6sxQmxRs41
y8ZzbZxsu2QnxdraVzeNzz451tW5iJ/fIdmpsUaLxrrxfqfF+swWa4Zf/S3W
2Tly+Vg/fB3/OmNAvrNEvOOZA/IZ50reA786a0Axj1/hT+fEms810I8RPpNY
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
Z8Hj34W/MseCp12wEp71+Rpz4+RA5qAbEEeVsKo1NZ7FrBz+S04Db8yYbJFK
2Bzu13NW8PtPsQfMTuF9F63Ec/gM2ZTh48y64H8Xr9QX+tzNfLGu+OdmyZas
hJ2thVlw0POQT8AFcydbplKfsHven4suF89CDmB2CTe7bCWM6vNlno+OiDxA
bSc3bkV8VOotrI3xrAWfId4nj7y4QiU8ay0DWJd1Gp5spUo41eduzCuvE2tP
3mSmuR3+XwlnWxdjbpl1512pz0skW6USFt0r789P14vYZDYJ97tapV7CZ9g8
G10l/IJYpB4zU4L7Xb1SP+azbJ6VEnfDIiftnGzNSvgU3zA/PGb4xIhKPQg8
sOca48TawwGvXQmv+6wOa8D7M9/cPdk6lfq4MWOdJ48ctW4lLOqzcp4rgVnJ
/9Rh5jtww3+thL99Ts6zt5Gxv+NFrSVH7E1MVcLaCw56F/xp/UrY1hz9lMRI
JTzqsyLmTceKPdwXn67UE/r8neemxO88kUvgnMHn1mOYKx87/Jl9XiPZJpWw
qc/j4afgV/yTWdMByTat1CtZg0MfNUn4Jblps0r9pM/msf/sO7MmOOwtKuFR
z1zBqjOG725ZCcMfmvdndJuFn5HbmIXCWW9dCYP7XJ9nS+T0xSP/wF1vWwlv
+mwL6wcmZe2YXR9GHFTCmuQo8/6zR37avlJPY50Ia8ZagdU2xO8r4W+fAWTf
weiTxZ6Tj45ItlOl/gf+mpigN5o+YgHeeudKvITPChIHS0W+OjrZLpV6U2t9
WPP5wlfJWbtWwqTm5vcM/5mZOKiEy32O0PMrcj91k5kU/DWY3Od0zM1PHbHC
/PvEZHtUwqJw3J47MP+G2967Esb0WUTPh8CjxAt4ipkWHPY+lTA6HDZ7DH4f
GvsLd71vpZ7G5xU9O2JNF428ehp+XQmvklM9t1gscun+lXgSn18kJogF5mLw
388V/Rms5wEzRiwuEfFwUCVsa46X9Ty4Uh8Lb+757JLh3/Dlh1bCpz4baX6X
3oC521n4XSXM73Mt9AKzxTqfjc9UwrCzFH3+/7DwSzAvufvISnje5yc922Gt
wWvM7uDZj6rUC8GVe17FOjNDhyM/thLe9BlLzzbAXOR1OPLjKvVMPl/pmRax
Br4in8OVH18Je1p3BTYljnbCxyr1VGvGWi8RMXRipX6Z/E8PDeYi759UqSfw
+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
2Ym/8/l366Qvirz0UMQC/e1o6eev6sQj+TsyyL1wTeRcNPYbJLu6Ewfsc/Dw
w2BRci0Y75pOfB/6NusH2WPOvaFrG6VbCuzn/QLzoWkbpVuq+mfliSfiiH4W
bT56NngmnwOCgyJGyK3Xd+Lo0IltVPf1fMTsE5Gj0Icxr0Afhn/j12jDburE
u/l7Mcg/cHMPRu4Ba6ERg0vy/e7WNcM7sebUes7TbJV+7h+deCSfe7f+kHpO
LwiuurkTr+oz79Y/sx/UbXrCydLP3dKJg/P3Z/hsD3zdY+FP9HyjsFOy2zrx
sejKyElwtc9GLkJPxnzU37VBHiL/gKu2b8W3+RwpXNyT4RvTpL/7Zyfe/3/n
3mvtOXENhrmzE1flcxDWNuG34LP/JrurExfn+9utE/YakkeotZyP2TnZPZ34
JLRlPtcD70Rd5FwKmrL7OvFD/q4On9mx/ouYpdbRC6E/RzN2fyf+Ds2Yz+zA
8T0XfsI5FbRi8J7+Tg+fy2HdWXPqGn0TuGWPZA904p18bt36QuobvROY5cFO
nJ/P3ViT92LE/bcRh//XiX/63x3RtTiq98LH9k4/80gnDsr6drgp1nnM9HeP
duJNfZaUvXw/fGre9PePdeLr0az5XM1PEWNo1eCY/L0i1rHDR4F56Y3Qhu+f
7MlOvKDvg7eW7/XYR86xHJDs6U7ck8+fW8f3eMQE+In+idr9TCeuz99B4vM7
3ktqGb0UunK0cM924ojwOeuh3g1/e7ETR4vGzWdv2Gf2mBrC+RS0bXBC/h4T
n7GBP6KO0EdR79G1wQf6HmrvB756WLKXO/G9/n4Tn6+BFyaHUHfot8ADaN/g
j3xOHX6JnLBsslc6ccLHhm98G3ng1U78v8+mMxeg3tCDgR/gEf39Jz6jA+dI
7qbekB/QvR+Z7LVOnJG/E4VYgVciRtCko697vRO37O9Dsbb4x/B78MCxyd7o
xCn6DDt7yn7SU4EJ3uzEKfp8Dnzjp+Hn5JV3OnFOaPB8zsG6KuIcjMNZGbR3
73aaJfh8OjMGag75Z61k73XiFP0dKz7rAPf4efgOvRI6cbR373fisfw9K9ar
w3eBgWeOWn9Ssg868YI+p249I/ENhpolavpHnbgo64bhqvDFcdPffdKJ8/P9
2tY7fhd+RLycluyLTlzTOhEr/9NRRZxQ27/sxCOhwSPfWVdXRJ5Df/d1J27Z
38lybvhEFXkLrfqZyb7pxCv5bDuc0xxR77/txCmjv7O+mPxI7KC7gytEc2f9
OvvFWRq0dt93mn/4e12IhUmijqO5g2f2mR/8Ap/A18lRP3Tihfx9L9ahwx+B
Delt0I6jo4Mfsm75f/qqyIVTJvu5E/fn74LxeYO3I8bBH/Qv4AP0dHB4/j4Y
a9HBh4sHDrikFX+H5u7yQetOTkJv90snLgnNnTWnnCNDb/drJ+7I3yVjnTRc
E7kVvgGt+RXJfuvED/vOcnwFH+Gc2ZXJfu/EL6HPI26s06I2EjPo8v7biV/a
rO5rp+Gg8CO4CfDKH534QH8njXXTH0dOIN8SN2ja0fAN9MT7bRVxACdIjSMG
wCB5T1yVv6eGfAqfRR5F+46GDy7a309DnoSvnjDyIzgFHR+zTp/tJ8eBUeAT
fYc/XOPokdduSFb2xBNaB8z+z5qs7olnQvfnc0VwUbNFvkPz1/TEVfv7bXye
CE57iogXch7a+ZuStT1xTz4nCC8FF7ljsl5P/JO1lPBS44YvjtYT9+Tvw7HG
+I/Yf/gItPe3JBuzJ15wl7qvAffekV/hJMBJY/U0XyUfkgfH7olD9vkhuOVp
Iq7+mmycnvgjtILWhZeRZznPhkZwvJ74IX+PjvWr8BHgLrSC4/fEIfu7dKwb
x1fgJ9DyowWcoCf+yN+jY814EzkWHgJcdhe+1hNH6e/SIU7hMSeOGAWXoRuE
c96r7mvK8T14BrDYRD1xUL7DwLrkUVqvVjiDHLpnskl74gmtyZwyfGbynmYl
/i4dn/tZJvIXOAl9IDwSGkDrMeGaiHXOJKL/m6onHsnft2M9JnzTdLHfaP8f
TjZNT3wSmMsaLThGsNa0PfF9aAGtNfeekW85s4YGcLqeuL+D674mc1j4Clhs
+p54PH83z2uD9gGOAEz1CPmjp7mNv6PH54qIAXomzhs8mmzGnvgmNIfWyHIm
Da0hHJG/v8d69iGRu+n5OYeAjhA+2t/fY506e02PDz5DCwgX5O/vsT6WHh9c
hh4QDsjf+WAN4GKRS58lf/XEW/u7faxnJ6fDB4DJXmjFEfleB3wGHmmJyJNH
JJu5J94SPaHPHllXSj6hBqwTuRIt4aw9zXKIQWJv9p44St/PYO0y9Xa9yJ9g
tDl64qPQIVobhk+hQZyzJ17S3yFkLSi+BH/F+YeX8a2eeCJ/n5D1XfCOnH9A
RzhfT1y0vyPCundy6vqR714nL/TEO6I3tGZ0/vA7dIYL9MQ3+fuIrBedJnIG
PBUYDr3h8J64Q3830eeD/AKOgPMT6A3hD/29RNaHLhR+Cn57m9zRE48FdrMm
DO4SzLZwT/yUv9vCejD8ghz7DjmlJ07Q90pYD8qerxL59eRki/XEAfm7iMiH
cEXkQs5MoBtcvCc+G+3g0+ET60QeRDe4RE88kL+HiDxofeC6kQPBbR/iRz1x
if4uIp+5gnekjm4WuZDzE+gJ4bx9bwT+tF7kQvDd0j1xS+RB68eWjfy3bE8c
ob+ziP0axSm20hsu3xOv5O/JILbgn4grzkd9ig/0xCf5Hgjr6eGeRkbs0LOe
hx/0xCuiYfTZLLjHv0TMcKYK/eJKPfFGaBStIZ0vcgvnKNEmMhfy9yT5HBfY
gdzMmQ30ifCF/q4ka01XCz/jvAb6Qzgof1eS9WZwj2BLtIfwhv6OJGtNyT1w
VuBF9Ifwf2BFOEF4RDAifJ+/G4k8630mx4ITf0i2ak9zIH9vB7FHzJFffyRP
9sRhoUkkh1pjuGnkT7SI8M3+jqW3w0c2i9zJmQo0hnBZ/o4l8id8F7kTLIbO
EC7Q90a0g/YO/6e/vS7Zmj3x1v6OJXIo3PYWkT/BbL+24gN9RwRc4QaR08Bo
I3riAtErsp/sJTpFeGa0hz53hk9sHbHDWTB0h2v1xHn5e5l87gx+jNihbwXL
/Zls7Z64Z98fYV3/NhEX9K7guHV74gfRDJKHvLbkILSCcGA+rw0/hh/fmmxk
T9yWz9KM4r7Sn5+SbIOe+Cx/X4b16NaibRn5h7rPua2KHron7s/3PViTDke4
VewD9Zv+8J5km/TE66EBJC/A+W0b+QDtH1wWuj+fIYPvwl84U4XeD17V39Hk
c2Hwr7uH39DbcT4CrR9zCn9Pk8+Asd/0cGCg0TpxWD77ZS0g+eWIiPvNe5rh
ogkkTolP9IBwVj4vsUqs4QXJtuyJn0UPaJ35PuELaAG37okv9HdkWOfLulL/
OEc1Nn10T/MH8Av7z76DW7btic/yd0lZX0+PxhmFcemde+Ky/N0Z7B98F/vG
+ajx6Jt74rB814P1g2A2ejiwxw49cbq+74E9ZS/p4Z5LtmNP3Ja/b8rnxKx7
o8ZQO+nnOM+AJnGnnnhIf9eUz4RZr7lb5BnqJD0bWGRCeuqeuEafD/M+nRwx
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
7tuDI5ql7c3iLnLPnpgWy+Zke7Cww9yv998d1601H9uFxUfk7jyxKk7Nu6/b
KH4vekqzllr/50lhjmZgOKTZF+5s//X/bVnvWf+sY1TNt/v6l0nhkblnT83P
nuLPu96bk18/PudMir+INuXsrlF/nRTWHD+a7F+rt3/qPmA+/vuk8MR4xsix
7CD+qvMLjnDb8fn3pLiH3K0kJv/RNf6g8TnPUJhiPGHgjeq62XS7oTBFu7LZ
O/Qu7cjCfHNP3393l7cW/kjnZD8Wppu7+vJezKN2ZPF+uZ8vuk65Bxcwl9pv
hR3aHVUvs3v4l66Vdkbhsrk776lb1vvCct7sq97RA9kNxbPlDj2xLaZpgt4x
PhccCnfN3XnqGmz2b13TzIzv3CisMfcsRdcBm1QfzS/0j4eNz5ahcMb4xES7
AZP0bswczuL3Hp+tQ2Gz9kqjx8yu8L+6Booxmkk7pZOhcNf4vogR2Ox/Oj6c
v81/06EwTLunaiF8Uw20cwrXz9196h/sf0vXPboie6f2A+L/oraZC2HpuS8p
mgt1bfuuD+8fn8VQuGM0QzBJ54ob+I6GwhRzV1L2zL/b36FZgDbxaLk4FE4b
T5ZoIPIdqjf6vjPubr6jobC93PcXzSQsUJ92dqS/sSt60aGwcPui0Uz6vn3P
ejb9oF3Riw2F/eU+wOgisysqp/VlZ03z1Yfl3VC4b+4GjDYSRry1Y9LZkzbH
fin8PD4t0Vp4j3qy86c57JJD44pb1rvscEc96Sqd55caCkPM/SYwRvF47Phc
ZijsMP4E2UW9eMfhk/29h8KE7ayKP3jxvOPOvurlh+KCcudgtI/X7nylu7G3
CifMHUzZ5YUnrvr90hN+0t9vKKwwPizZXTTvO0eaN648FLYbD5bs816o371z
5HN8B0Phs7mbMFrKvCP90PnQLPFpf+ehOKHc4SSOr9/14Dh/56EwPzuw0Upm
n1Xt0a9oAe2+wvdz12H0kN6196xHOVPS4thpheflrsNoI2F/epWzpfnEXiuM
N94GeU/i/EXjc62h+ILcdRh9JF5BrdLbnEHNLyduFD74to4Z2OFVuu5ceyjs
Nz4q2TtX+3fqGmJeud5QPIH91+gXrt45Yvf1+kPhf7kvUW7ACOWE+eJL47Pj
UNhx7nbKbrJ4MMPRIZ6sRgzFKTx0y1rrcM3OA7PHDYfC/uzSRtMDHzTH0xja
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
uYQW2/7386eFveZu7+jSYbXmD+dzM+XG+NkXTIv3yP3e0Zt7J96FWcN5nYZw
GD//wmnhtPEEi3YLpqv2mCmc2c2fL54Wjp/7vaM7h/nfp3PBud0Mar8cphvf
GpivOPz0+LxsWtxJtFeP7Ph7+bRw9tz3LZZg8Q/sGKIdnI9/7t7T4v5y33f0
4M/t/DavLYfCd3M3aHbwL9n5Y8als942fu6V08J44w2WHXxY8EP6XTqHf1kt
nhZubu88uvHs4D+s65BeTVdt53zfae+AbF1ryPPd6sXO2maf10yL54vXl5h7
cdeQr/pep4Xr2l2Plhz+q5fSPNtZh8HmzvHowLNTrqbpoc7TdH720PExuXM8
Wm/v0nvUO52rzVX2y+GxuXM8um/YrR7qfG2u2mEoPFYNyu75Hl17XjctDife
X9FFqYN6qPO3eQrGn7tBo4vavnNUXXxl15JLj/+t108Lk7W3Hs0S3PZZnTt2
1g+cFiabO0WzU+z900dfbvzMQdPidnIXejRNz+5coQ28wvi5g6eF376icwS2
KzfMSW+aFkcQP7DoD8SOGdYZ/Qfjc8i0MNfcix6dIHzWecWZmo7ObvtbpsXl
ROuN41Hn9usa9NZpcQL236MvxRk8oWOQhtru+9umhd3mXvXoS7OXrIaYHZ2z
zTlXHf+dt08Lz88d69GLJ5b0cudu2jv78nD9+IRFn7B7x7gztznnndPCfdXK
7DHv0TXy0GnhvtGCvH78Z++eFg6bewKzt/z0zt1r2MmcFr4ab59oFm7a9Wav
zt1fjc/7poXf252/4LliRa7amz9iWhhq7mZXY2Gtaitt33XsXU6Lg8r9pGLz
lV1Przv+/P3TwlfjLZZ9+X26hpqzjp4Wfp872aM9v3b3wUO6htIC2q+Hi+aO
dvkMO5XHtHl253FPuZs9GqnXdv6al+zFw+1zL3s0gN65s7e56X/sZ04LP40O
Hb76zq7ZH5oW//qmzlv5ao6C8+ceVLmKC3hR56h6fSP7mNPCVe3bR8uaXWb1
y+xIf23PHkebe+CjOX9P13Tau5sOhd/nDvjoVuH8L+24dM6mt7NjD6vNHfDR
/cF0nRuco8149uzh8/ExEjt7dc7+zbuYFjafO+CjZb1Z1z+zq7O0GfAWQ2Hr
8RzLu1fjzXQfnxa+m7sUxTQcWDzzUbiVvjUtbNfMF70LrM6898lpYbrxRBLr
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
f1Y4NK1APAyim/hU54yaZgah+6cTuPGs97+3rD3qoonDJcgb794cAR+gGT1O
3Z0Vjh2vuuia4N16r3kCRmDeu/mscP7o3uD/s35/Yu+Ws8J4c39x9G/wYLXk
2p23x/u9Z8XFxIcu2jXv77qdj8/0u84K582dxdn39l3T2J+grs0Ko43PXHQU
J/f3bX50Hn+BWjcr7oYuIJqyy3cM0wPA/ukB4iHg+/Zd69l09rQAd5gVD0kH
eqmOUbG5qQEdCgP+/pa199zmvW9DaTRpAe48K3yXHiA65U093lCaeFqAXWaF
6f5wy9qDLrv75kpnevPVV31Xs+KEfrRl7UfnnXvXzva0mF8fn7vOCvf98Za1
F120RXBivUuvdtanyaQLgP/Gl05cwIjFhHO+me3us+IafrJl7T0Xvdvxnftq
oR7uPG82ox+AGat32f3evuvcPWfFJ8RnLrokvUqPdp43e+ERcldydElibKeu
bd/yHc0KZ849oHBo+Xmq72VW2HL8nKJduEbn56t8D7PitKKbu2bn531nhTnT
P8jL7JRfpvOR9uF+s+IeaEfj6xT9iVpzrc7DTe2ov9esOIb43YldcQtHeLW/
06xwZTqJ+NxF32NWUFtpTGklcGinb1l73EVnp57foWuome4HQ3ER8RPAU+h5
d+r6+ZBZcRC0FNFKJ07lA50/HcVDZ4VDn7Fl7V+XPXOx6qxv/vrx+DxsVnxC
/OuiLRFT5lrnfPPVI2aFQeceaHUETq1+qNM/8TvOil+Lb110djfq+qFWH+T3
nBVGTa8RPTYs2/zLR4BOA+585pa1T52cgFHLB2f/TU3pUJgzbUV862DTzv6b
etKhOLeztqy96+SA2Hf2N/fRS8Cl44GVvfJrdI16s7/frDBpetN43EVLYdaF
D5gNzxiKd4vXnTyRI87/5j2cRu5tju7m2p0j6v+v/N1mhW3Hty575c5car75
7wmzwpfpLaLdg0HfpusVrcWTZ4Urn93znVoFf1anzHa/8XvNioujS43/lnzY
uesUXepZfrdZYc+33ljr+uDTt+26Y+7bY1b8yJ977lNvcCg7dp0x89Fm4NkO
6tgW13rK02eFG9NRRKN6dscDbwH6CRzE37asfe6iixEP5lnn9U2N6FDcAS1o
fO/ynpyxzX9/Ggo/jibiruP//6xZ8dz/2LL2wpOjclMfMRv+dShMOXfBRgNz
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
TEbHYtbWi2iL6V5wiG/cuvaalCPyQz8xPx4zLWw+XpNw+xv07IiDucNkrYFS
R7frfnD9eXErB29d+0iKL7EFM6ALpm+Bh/OXiK9GtCr6kFqgL3xYns2LB4x3
ZLSfYl/eq+2PHp8bzgsnz47/X8b/+0bzwr5zt3Z2+8UBj5djxfi8sO94z0Wn
dHjHgt4Dt3yM32le3Ap9ymP7ff+z85025ebz4kNoTuI3me9eHaYjpjuBZx+6
de1HB/eGK9IQ05Xcal5YNW1J9KfwbDHFC4au5Nbzwqff3TNy9KfwbD0IBmk+
Pm58bjMvbu49W9e+deJP3MEd6Y0/Oz47zwvHpjWJZ132+c1HagO9Ma0JLNus
HV0qvFt8wh7N2LebF/dyeM/P0aS+veuo3qRGmJ1pUmDe8brITr85yfyoB91x
XjzLebs24GDMNuqCWXlzF2rr2scisaQm6D8njM+d58WX0CvHTxOnstE9gW75
xGnxIPGOEwdiAO73dH1oXrg37Um8NuUYjPz63R9ol+lP8IDHbF37bEYXqwft
2PXfHH7StDDy3DmcfX61Spx+aXzuPi+c3DyeXX5cjFn8f+eFk8enKrv8847d
Z4/PPebFkcTnAn+y6JzVP+45L26EziW62cSc+OYxQ+Nyr3nh7R/qWT16xU91
3MENzelfHZ/7zIvvMKNHY5s40d/gg2bz+85rpyueoPrLc6eFyfNziA8G3F5d
4OvwtfG537z4xXiBRqd72a4L8IPnia154ef0NdHpwtn1RX41dDUw7WO3rv3s
xD38W8zDAmm/aWLg1jQxzg/RrsECnRvoYnCNH++zQ7S74hwm6NxA7wLTpvF2
bohuF/6tF8IGnRe+My1M+yGdDzBvuaAvPXBefKMzQTS78gBG6CyA7+FBEW+L
6Kcu1vlg3tRvvidG54WLx0c0+kj4ubnLrKnnOBs8bF44eO40zt6/GOW19IPx
eeS8+Jr4YYnDHTp/XjE+/29eWDSNS3b6+WPRtjx6Xhj08VvXvlbZ1Vcf4dc0
4vQrj5kX3xdPDPEsls2B+sFj58Wr0LhEI3X5jmP6lsfPC8umb4nu8dsdE7xi
6Fpg2Sf2mSD6KJj3FTvOnQd+LibmhWk7C2SHH8/jDPDEeXEln9+69rKLPkps
6YkwRfp02hjcyZUma43UVTtPnA+eNC8uhH7dvB+9o7iBKZrz/29auPejJ2td
1A86dpyh9LHd57WfcNLWtVequqQewV6cCX41LWyZfkWPgj3rT7Qre8yLC8m9
tt79b9TPeWHJdOfxT43mxJlIP6I//+34PG1enCT/iyd1fIpLveis8Xn6vLBm
Opb4gEQjYNYxo+pF9Cvw5ninil2YtLjVh5wpnjEvvoXGJX6o0fbiZ9Rt/dm8
qh/Rs9O52FuIh55a8obxefa8uJZ4oUbXaDYyn+pFzhbwbRqY+A/Bv8UvjTsd
zHPmxZN8u88Q0UmJK5i488Of1cF5YeDxDolWZpeuBXuImXlxJvw24vER7ZR6
eZfOd74b56hD8+JF9uzYEBd624vmhYPT1cQHBFZuZtTTaGrg4PQ00VTByXfq
nKGjgYN/v88g0Q7gWJw/aGg2d9a2rr1SoynWf82d+iE9/T+nxafQ0cSzC99y
q84XWno6Grg6Hc1NJmv9FfxdTYbFO8fQ0uBRaOJvNlnrrHbuvHFG+c+0cPZN
LmZS+Ds+xrkEbk4rH2/WaAnEtF5HM7+d/bR58R7xZI12Siw6y+l1zicvnRfX
GA8THOR9u27pVy+bF5ZOa/PSjvvNe0un1YdobGDoP9+69leFtetBzgB0NrhF
2pl4q4pz8a0H0cbTz8DR440SPcIuXSNeJP7nhaHTz8dXNRoaZzZ9ylliy6y4
x/ilyge5oBc5R8DY44UavYHzvJ7yAbkyL26FziZaKvHEU4m+Bm9CO3PHfrfe
qzME/Qws/Vdb1/6o6g3sXa2BQdHLz+2+zYtT5HUS3xX58fCuOTxPFvbf5oW3
xyM1mmLY/CO6psCrnE1ePS/u5cyta69UNQVPc6+uJXApunsaHji6/IWvy9vX
zYsvoVXZf7LWP3nPzkl6Ao0KPiR3tm/ePdu5fKHxZwfMez9t69oHNe9HP3De
uPCsOH869Pigyjm5ptbTo19kVhh9/FWiX4LlP6xjwhy5nzyZFx8Rj9KvnOv7
EeOwHvP2QfPiJGhODpms9UjqyeO6ztKb4Nzjr/K8rrMHz4uTiDcpvmK3rq1m
dBg8fUl8VKIVeVLnCL8RuhK82L+3rv1Jo8fdvXMB1kNPTjcCg6cnj1epWIfX
i3OYj5n+UrPiyOJVGv3uUzre4TnmeVwZrxD1DY/21K5rl50Vt5W7zr3Pp3X8
XUEezQvLf2DHHZxfvJl33zYvDiUeJtEPPabrt/nqHWrevLB6Hh7RD/PwuKJ8
mRc+H9/RaFScI+Aip6p588Ln42MAu/fu36vWzQuTp3eJR0q0DOYD8xkvEFqX
w+aFx9Ntxz80+tNoGZ7QNdQsBS+h376qmJ8Xx0L/En+TvF95wSOE7gXHEj/R
6FRxMU/uWDQ3wVXMuofPC2OP1jS6hz263onto+aFifPdiN8I7Px1XUuuabds
Xlh4/ECjO4Wbq2kHdH34sfo2L96FziVeIriZZ3T8qw00LnDu+H1G7+CdwChO
99+eF9ZN7yLW4eBinM4FjxIfgrwrsfBRv8e8eDU6mPi24d327tinqaaFwZnQ
VccHNFo578YsAt+gr76+HbN5ccSP69gX8+ZFWDmtTDwLYOrigY8GnczH5o2R
b6w9QWHpm14a4/M/42c+Pi9snO45nqBiBY6+6fk0Lf3zTeyRzYuP5q0RX5K3
dj276aww8/iCRgdjJoeJmEE/NS9eh9YmXiXRQz2/48ycwYeDxgaXF49QMSa2
4Cbm1U/PC3e/6MbaGzQ6wM17bKc1i8BOzKx0OLgeOSwGX9S5+5l58Tu02PEG
jWb1kl2L1HUzC9zEnHqLWfEy8e+Mnk8sHta1+A8+Py9cP551cH85/yefmRem
H80qvH+/zvkT54Xl023Hdy76h5d13tJt30oczYt3efZkrWG9Qtew/TsXzaBf
nBcXSTsUXxF5ISfe3zWZbghuT+Mdz9Bo2o7uemwmve2suMt4gUaTqlcc0/XY
PAmfpy+Kf0E0EGLUXM7rg7boy/PiZuiq4/cZ3dU+nQ+wEPrqO4qzeWH28f2M
DkKswUHMhl+bF2YfP0/1Aq7/4a7t5x0/84154fU0R9H28gehNYLP0xDFszM6
H3M1/IJGm4YIR0k/FL8C8csXhG4INk8HFA9PsQnHF5ewDXMlLRBcnnY7np7w
e9iGufJ/Z8X7RLeaOHlH15tvzYubpNmO76e4Fa+wD3PnPWaF68f3M7ogszbc
wzwJ0+f1cfpkrTvbqevwod0ndrWfNi8OKB6e0Z4d0LGv7m/YQZsXNk8rFL0q
DP/wrk90Qt+fFyZPyx3PP3EOv39f1x5a7vuLt3lh8vt2bYHZqytmzR/Oi0ui
GYp+9fpdr4/oekIrhJt89WStXz2y64k59Efz4pJoiaI3F6P8SOiIfjwvHolu
/LVdH3BNb+q6YN580Kywef0pmqAPdF/66bwweVqfeIZGFyGm4B+01rQ++Bxa
n/iGRgsmbszhcAtzKr0PriYeonmnMAkzKM6Rzid+KDjJj3Su60M0PnB7OP4v
5sXp8PnQi7z7Q7sH7SYG57WrEB9R+X5S9yGzLIw/d9lHZ2EG4v3zKPE1L3w/
3oPRjN29a6K+C3e9qN20eXE/0efihN7b8X6y3jUvHoAe6MLDWoNxeNcUWqAz
58X10IHHkzD6MbH1sa4pdOCPHZ/fzos3oOmJB2r0Fkd1D6HppuvB29B0x/80
GjE18uPdI8zZT5oVjk/bE69CeL/6QbdN24PH0T8SK/rG7+fFi9L7RCv8ma4r
dD7wfDqft03WOmHY//FdV8zhtD7w/HigwPtP7d7zh3nxoXTdb5+sdcKf65ph
Nn/qrPD+d3S9wAWoFeZxOD8/kfiaRGvxoa4TetPTxN+8eKN4oEZnfJeuwyd0
vdCfLi0W58UN0JLHExV/oOfQlD9jVpxovFDxpSd2rzHn4w3ibRh9hbiCk15e
jM4L48894TgA8flsO2bzwvfN73B/s/u/54Xpx58M5i9GryQG5oXnx/8E1v/j
7ivnWRRvKW7F63kXhevTGUV/HG3EJzpm+QjRGJ1vUbj+Lj3vR7eKAzC3wWLN
+s+z97UoTom+PZ6H0YV9quMb9krf/gLvbVFcwAcma41yNBJqqd4JX3Ue2Loo
zuiufR642rliTP1xFqBlstNAfxR/E3WFJwjtEfybR0f8SsQJrFyMnNm1/SV2
tBaFfcfLNTq633Z9dwaYLYp/jH9r9M7i56yu4deyp7Uovuc+G2s/VvmJG/pC
56Za7Qzw8llh6bl7PLoJMcGn6hXjz5eLwtPjTxZ9xJc6rq4zfma1KM6Gxiea
Z+/2y90/ePTQ91xoUTyMeT+6Td853NGcf5FFYfP0PzB7up+LL4pfiQes/MHB
fK3zBiax4/hsvyjMng4oXmewfTg/XT0t0CUWhcnTA4k/eL24owW65KKweFqg
aDzh9eYh/j80QHD4h/Z5Q0zC68Wjs8brxmeHReHwzhnweeeLSy2K86TXj2+a
mKTXP2B8Lr0oXJ4eKF6I0Zk9t2ul3gjrpNenB4LRO6eIXfi9mHU+ucyi9iXi
g6s+qA36k/MJXuiRffaIthp/9M2OafimcwedEIyftv9Lk7V+FBdgLoNvOk8c
OCucf9uw1qy9oOusM6RedvlFcUUnT9Za7N27lurTcFDnCTwRv5L4pUS7Jlf0
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
u4upZfFTPLKij068fKZz8yn2yJbFP8XvQCz8UQ9YFhcQv+Rorz7btfnq47/7
h2VxteqymD2+6/HZy+IHaLjiExS9jD787a7D9Fv4Kt4F8TyOlnrnrl360Xe7
BvMweNqi8H56L7mPD5DzdF7wezqueG9Gf3VS5zofAVou+D0vgXghR9si5uAv
PAWebb9sWbwvXwGzZbTSX+w8N1fuuSis30wpv/EA8tosicOKj3L0f+LK/A63
MUuesywuK54/0f19tPvKaV3j/7YsfoC3Tvx/cAg/7dr+vEVxA/Ri8QaJPuZj
Hfe8dOjEcAN0YvFEjjbGuQ5GYzalFcPXxgs5+my962fdJ260KO6LRix+yNEP
fqLzAR7DV4BODO9w+dlaZ/PJrjv/XBbfwHMgfsnRDj6ia7BzAEzGHPyiRfFd
8U2OfvC4zi2YizkXpxBv5OhoPtt95ubj8+9lcQrxJsU5wH5vMf7sPKviEqLV
xjXIuTPGZ7tV8Qf8CuI1Gt3LCV23+BW8TKyuisPi2xUtN47rxM5BdevlYnJV
XMP7pmsddzQwavipXY/Mw1tWxVPRtsWHNHGu/vBAoG/DP9C3nb/zD0ch9/Q8
2ja8A4+EeDbjJ/Q5c/IrF8Uj80qIX7OclIv6G8+EfRbFO8SDOZo2Zwh9zRyN
q6Iliy+IeBSLzgL8f2jI8Ez8BuKp7J1733ASs/RrF8UHxEtZLcIbqEN62+3H
Z1gVHxzfIzl0WtcjvWu6Kh6Kd0H8kNUZnNU3ur7oXzwM9lsUTxAdevQw3+x4
/av/zqp4oY91bntPp3Zem7u3rYr7oefaNltrBX3/p3ePoOXC7cSzCO/znc73
K40/u/CquAN6rmjXcQz6KH8uWq6LrIr3ic9yvn+9xQyPS+BBEA9UcYp7EKMw
YB4EB4/PRVfFJZjzoxmF/5rvL7YqDpZ/V3Tu4paP15vG5+Kr4hjowaJtjz5m
09Owaw8dGJ7BGSHadlyEuIYjOx9sv6odkXhCqzlqjX5490VzUMPaEzX6xh90
7Ks3fBLoxXAVfBKO73oSDc0Pu5Y4B7xlUXzU56ZrTfxTu4af1bXE7I9r4q+z
/WytTVR7f9996e2L4pWiaxcvYkUvHcTvqngJ2q54BUWr9efOSf2JrgtXyj8h
vtDRuP+lc0/f4aNw6KI4i/hCyz+8htzTf8z7OAt+htHY8DU8bPznl1sVXxE/
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
uuPzn1VxabRv8X6KxlOemDvM5Poq3RuuTN3Fn53c9fa824obixd59NJi3fyt
5zpr2TWJF7mao9bouTdcFidCTxeNjvinpTvftuLKeHvEI1Lsi3scCm+P16mL
24p70FujZXNe1FO3bCvOgU4tPnPP6ZjgwUGnhuPipRT/p2gn1XX9f9NXbPzc
gcvisujZoo08tfOHjg13QcfmvBTd43M7jvAdzkq0bHgq3hzOQdE1fq/zyPnn
kGVxEs4+0eSIDWceXAT9Wrylokc7q2safybaNXwEf6YLztdaG3GiF79lfIZt
xQnz/4iPefwEftf1DObIB+Sty+Iu4meunuE31DG4o/MTLiwe5tFMijVnTT39
VuMz3VbcBq1YfMqjyYFp6FF8NOjF8MDxpMIP6//mav0J/0VLtpivNZOndazq
S3RkuBE+HPElj17ypV3bnSH1JOenQ5fFAccP4E9di2bbig+LH3m0lL/o2Nar
nJtwKBearzU9Yk9/Wm4r/iTeVvgV8/olx2fbtuK5aNCcYcSJGHF+oUPDp/CI
ipdVNDy/7lznFfWe8bnItuJT4gsefX80PGrvXzvn4X93U6O3FZ9F5xZfqsSQ
XOczReOGd+GxES9w/Ix+yGvjiGXxwjymduh8kSd64JHL4mPi/x3tmjOkvufs
hLfiUxEfb+/l7O4jzjpHL4sPia8VvmSje8glthWnxQMqXlV4r790nuoFxyyL
16DtkiM4D7lB14XH5AURf1M8px4i3nlBfHBZ/FR8uB/Q3+VfO5bhVQ/2PW0r
zik+3Pk7qnfODJv85HTtKeUd4lC8PzMlH6SP6BPbig+JF3e0k+ZGOJTzxWW3
FQ8SD+7o9nEm3q05EB71MP1jW+1QxBfqol1n8Vr0XvF/ip7vH/3e5Q7PJVov
HMojpmsPbfkTDc8/O3fgUc4aH18WvxUP7ej9X9M1Qg+QKzAp5wz8SnxEo7s5
T8fno/SDbcVX8iWK55L3691etmvSp5fFr8QnW4zhYC7X9cgsjluJt0m0NvLP
mebW43P1bcWN8BWKz1J0cm/v96RemrH4C31W/d9WXFQ8rKMNz3sQH+YlOM9T
9YRtxWPQe8U7Cd9hHuHjQ+eFc6Ddihd1tOK4CjXRDAJf4eVAv4WbpN+KP5J3
6N2ZO/j50G7hJJ48XXtTRyuOx/DuzCCwGDPwF5bFScSnOrpFswg8xvyLu4wP
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
xLuh52Yf+C+Neucl6n4v6QTHy16OefrhfA8re5r0z/sYJ2gRnm/UB0dvnn1M
+uZ9ff70A5c24meigeB97WccHNeoT863rrK7sLtj/8VGPEI049kX4t3s77i/
rBFPkN1I+INf+h1xFvTTK9f9XsNejgN66egYss9AjuVOOZX//VZ9dL4ZtXvd
7zHs4zNEE/By4z667jUG2Yc50+/iQJ8ltfTvGvWr0QNkh+FXfvdgjN4038ag
d+V9v9aoH412Ljsch/o939qIK8lu32F+v/T30Twf5L/TgX531KO3Nephs6NM
j8s7uID30KpnzXeNsu+X3YJf+z2Q39h3f7NR3xptcvar6HHJI+Q46kzuJ/rW
aJKzF5i9goP9vshr1Jt3NOpVoy3LfP9Qv9N7GvWp2WnnndLP8j7PNAbpNbPX
m9k+v5N76vLuOadVH5nvAWWHLfP9I4zJEW0EuGjUd0evmz02/v5H+v2SV6gR
H27Ue7ITkl1B9sXZB6HXzDcos6NLb8rdQv3HLuY/G/WZ+T4Q759+lPfO3vi/
GvWX0eLyzulDed/UhuR1estob3nP9J+8X2rAxxr1ldlxz07NjX6HxMv5xi69
ZfbQ6D1PNVYubNU35jsI2bu52fg9zRj5pFH/mL1NekvO4LruuaRVbxhtW/Zu
6CGP9VmDh6ca9fv55k72nTgfchy74/9p1Cfm25DZnbzD75bajz3Gzxv1ivke
TnZm7vT75bzZ8f6iUa8YnWx2Ze7ye+Z+oT4kr9PDRyubPZmTjQfqwz816iez
v56dj3ONVWKZHj976pwDZ3CZ45Ve8/S6n+Gfagxf0arXzHcUMp8/zZj9b6Ne
M3rXzN9Pd0z+tVFfHs1ddmh47+cZy8816kkPrfsdGnrWM40RYpW+Mt9cBM/0
n2CZvcX/Neon850FMELfeaGx/E2jPnLput+Jo9+8yFjm3qGHjD4PfNBnXmws
v9Co78+3Y7Kbc5axwc74+K36zGhiM4PnDKk3uXfoNbODnnn7uY4B8g09+bF1
v89yvs+HWKePzG5c5uQX+Ixu5L+jVR+Z7ydkn+WPfg9XGHMTteolVzXeMv++
yFjj7qGXjhbutnHexZXG2iuN+s3sg9OPgq/HG/Vq2cfOvgg93aX+nXc41ujX
siOXmffljtk7+bu26onzDYLshFzhWOSdj2rV18U/eXT3/9/SqpeLhoZej77v
DWKgVR/H+6O/473d1qp3Y18he1D0dyPam0a7CvRs+WZf9uUyz/6t456anp3F
QaveLd8xyD4IPd7VPgP2/4vWPXHd78dlZn2Nz4L6nvuP/jhasuyIXOuzoI5/
q1F/nJ3n7HH8zrH9sGOMfi7fK8keziOOoapVT5cdJno9zuIPYLNVHxeda3bl
6PuI8UcdQ2836uOy38zZ0+tx5o85jujjoqN4y2fzLu+vVR+X/Y+3fT5g4f5W
/Vu+wZe9J3o93j11/MieZaueOd8SyP7H740X9vYnb9XnbVf3e3OZX9/sWKXe
5y6mp8v+cXZA3jPW7zGOX2rU17FrAXbo+8ANexb0c/mmH/0ed/PUrXq4fM8P
HNHrjfSE3TNtq/6Nezu7ECP9YKPeLT7r9HXg6PuteradjR96upG+sBGnEu0M
OPl3o94tmtjsSX3kc3zW8f9ho148+9DZWbnDWPqTcwA9W3ZV6OXuNF4ebdVH
c49mD4n3Sp/AHUqfnP1n3uc9xuerjXoz9h2yV/KF3yd6DXYd6Mvynbrsk3zp
9wcORvYqW/Vn+9b9LJl3yL1M7xtf87xDcDFrq95tv7rfG/nK7xI8cFfTt0Uv
C/7p78A9dfSXjXq27FGDFfq6p4z71xv1avkGSvZOvnEMPu38MWerPjg7J7zP
Z/g7tu6BnS+ybzKe4+9Z54qvGvXEN9T9zsljPjPyBL0eWM7M+HFjmF6PPYPM
innf7BjQ5+WbatkFmcDvmt6QXcd5W/W8R9T9HsiTPm/uRfpAckb2C/7qXEF/
m33s98Z5X88ZX+806tvy3ZHMiZ92vC/Qqm+L9jO7E5P4fbzoOJ6gVa+a74pN
4L87e4QLt+rtst81qd8H50Vfd1/dz4X/6tigp8v+NT0fd8tH/G+26uPybQ3O
OHPgv/l82U9epFUPF01l9sYyA37ecch5UttO3Kq/zV509hNe8HviXD9t1L9G
NzmJfz/xNkmrXjD7zWP8/sEsPW12v/LbX/W7p6eLzpB3m9nuy36v1H5lq54t
34bILlXt30tOY/f2x636tegFs/dAXqN+4/6hR4tOMLtUrd8D+Yw6rm7V52cn
+Hv+/eS28Vr1b9GYZNb6mt/jFK162OwaFT7nd/z+6N2yo5gZLGfL/fTd7j/7
cuuerer3bjPjn9K/F1ySg9h/XaZV3xZtXvZ6Ml990++R3EJdNl2r3ii7q5nn
T+/zAntfGQ8j/U/V77vMaGzxrldo1f98uyPm3zBp98/faNX3RDfCO5rZ74f3
O1urHj/7L5/6vdIH5TsC2dWYxb+XHMBe6EqtetTo2rIjM5V/J1gkH1C3/aBV
z5TvR2WXi/6Ke5K6i72qn7bqmfJ9gewCzGZs8a7ZFV2lVc8ULVt2AX5gjJH7
qc3Ir/RN0bJlF2B2Y4yzoDabq1V/lJ3WzEg5A/IJuKdHAiuZjX5knLzbqj+K
l3Rmnx8bF6u16o+iQZvH+J+vVV8UPUv2BOb1+fzXOJm/VW9EjICP+YwLYoOe
JP772QtY2O+Jc2KndK1WfUk0YZlX8o6oocir9JXRfGUX4AufHzXUgq16l+y7
Zpb5pfFJrNHfRb8yr//+nP0PW/U24zX9HsCi/g0TOA7obbJrs5jf61D3/LtV
PxO/5+wJLG7s837Bw3qtepqHjIXMEf9nHJCD6WmiY8lOwI8dB7xncLBoqx4v
/vPZCeBdcn+wE7phq/4mu5+8iyX9HjgTYoo+bpKmn7PzOydxHND3ZAcn80J+
L/HadM+nrfqe+D1njr60f+9kPtfNWvVo0YxkHj6RY45zW7xVb8PMN7sL7Asz
76WXyXeAsptD70MsUs+y87Rlqz4mHtC8+xUcg+wKb9Wqf+EuyC7Oin7n1Lbc
A/Qu0YPwzldyzFHLLtGqb8n+Y+bjK/t9lsYHMUB/kl0Pehfe1/Td82WrHjEe
y7ynyXxW27bqObIrTT9C37hU93zVqufInJt+ZMhn8HXrXqPq9RmZ5fF+qE3Z
n9q+Vb8RT+XMuNfyO+Kc2Mv9eat+46W638nJLI93RRzO4juEPi/6jcy5C58n
detPWvUk2WfMLHgKY2+hVn1g9hV5l6WxRyxS+0f/lT0L+oTK+ZJYWbZV/Z8d
xMy96RNqn8lcjpc7m37mTY/Q+FwmHKs+LN7AmXm3Pht2V3dp1Stwz2SHgl6C
90GdyR1Dv5Bdw8zdpjAmFmvVLzDfzcx7S2OcfWpmu/QK+d5NZt70FVP5HNm5
2r1Vz8C9lHkavRv3ET1DfFczT5vG57pHq56Buyozb/qKaX2e3FMjvVjdz72/
73NctVV/lR3HzLyn81kt6PilX4g/e2a0szs+927VM2QWTi/Bu5+DfDJWvUI0
XJwzPcWcjsvVW/UK0/ls6SPmckw+blzRP4An+gPms5ml8W6ZzdIX5BsxmXPT
Q/Be6SfYyfpVq54r3qq8v5l9/ge06h24vzLXpreYxefP3UWPkB3JzLbpJWYz
BsDgkq36hPifZ042u+P0oFZ9Fe+HdzM0Vj1DtFSZWe/h97OAY3HtVr3U7E0/
r57LZ0Mc0lfkmyiZkfG72Ws6tFVPNEHTz5n5TfQg3CF/dfxlbjaf445+KLuU
mTHP79gFD8u16i/iEQ4m6EPAA7uKh7fqKaJbyk4LPcgiPntqxo1a9RTZi+S9
0ncsagys2KqniPYoM7MFHJcbt+ofsoeSmdlCjkvOhN4hup1Nmn6WtYjfL7XR
Nq36muwe7jbO32Nxv+c1WvUpW/h/YzG/B2r97H/TC/C7dmhV52cHgh5gSf8e
6vvsPFH/cw+s0z3tWNXz8WDOHkTmUz8yjsgV7MP9plU9H21L9h0yd/qxfx/x
T22yY6u+JXt5mV8u4d9HLli/Vd2fvbfM85Z1rHJe7zT9zkF+13J+P9T82Wk5
xr9tk+6Zaqzq9ngfZ35Mjb+0Y5Sds5Nb1e3RfmTmn1nUMj53YpLaY89WtXu+
L5F9BmoL9kxOa1Wzx+OYd0ltzztkp+z0VrV6NB2Z75Fzt3Ruo0aPpoN3Sy3P
O6Xu2KdVH5hdIt7h1q1q9uzCZfa0rGMZrH3k86ee5+ynG6taPd6VmTUt77M+
q1U9nr3uzEvPMN5W8xkf2Kp/ygyfvmpFnw1nSz8UPUZmzys5F1Cn/LpV3R6v
4MxFz/I745zYKTu3Ve0e7UVmR7y37Z3rqN2jucgc9By/O86PeuTgVvV79t2o
7zdy/FC7Z/c7s5vVfO6Htardd2j6+Sj1/ep+x2Cd2jx+lLxPavh1fe4XtarL
5/eZU7dv6bxFLZ69b94xNft6Pu8jWvWmmfuv7/OmNo9Pbuar1PC8L/Iw+2GX
tuplonnIbHUtv3/qkCNb1el7NP28kjp+bec68E6dnvl+5jHrOM5+1j2zj1WN
Hn/KzCyv8O/f1Gd4Zas6PTvcmUte6d+7mc/o6FZ9R/xh+V38JvawftuqRs6e
VWZ/v/M5buOzAJf0Hvv792xsrFE/Z3ZNbc1v2Kl75hnr/r7W+8wMZlO/y2ta
9RfZk85cbzPjmHd5bKs6O3t4x3X/9/xjVV/z3qi7eV8LjFU9HZ/8zKypvckj
1G/sUVzXuu+v+12BzFe28DtlV+/6VvX08k2/K5D5ypaOD2o98jc1dXauM/uj
9t7K757a7oRWtXN2nzJj2cZ4IBaom6NpyBx0b+P5xFb1cnaZOB/qas5lH2Oa
ejlzvTv9XjiHRceqVv7WT7HpZxvb+SzYgbu5Vb28ZtPPkKmp+a3UXuR1eofs
MWeu93OfFTXYKa1q6uwoZeaxg/FzVKuamjlbZmXsVjJjG5l91P2+KfU258bu
x+2t6mjuBupr7gRq5/jVUVtzbne0qpnX93lRU3NO3BHUy9k1pZbmXM5oVSdn
vymzxof9bjmbgx0/1MOZM1Ir82736p4lx6oPic9h5ow7O77YTbu3Va3LDCtz
CX438ytq3Hi/Zyb4hH87tTH7IA+0qnXj85b5w24+uwdb1bpbNf0M8En/ds6O
XE+vkL3Q/H7O7LxWNXB2pDgzauUDjatjWvUR2XHKbHBPx/+RjlNq5HixZjbx
S8fdI63q5cwleG/LjFWNHF1DZoLPGvcHOb7Ob1Urn9z0M0Fq6X18NsQWtXJ8
0DNj4N2xx/FYqx4hPm28t/19Lo+3qqV3afoZHrU274y6m3xPPU08UmcTh9TQ
2Z/KPO85v6/DjJWTWtW30QVkrnCQ4+iyVrX/OU0/GzvY75IYovbNbJza+Cif
AzX/nv478vcjd1PPZ3+Kv8dhPo8zW9XH2ann/WZGcLjfLTXJ1a1q5Ow3ZfZE
LX2Efw/v+OxW9fI9Tc/3H+XfSn2d/aLMYY7234Pfc0Gr2jfek5kfUysf7xhn
b+dPrWre7JJnRkyN/BvHMff+ja1q3uwM8felLj7BMX1xq5o2s9bw9cf478tv
oa7NjJ+al7vl8u5Zdazq2fguZsb2D/9diUf2W55rVctmHztz0PDzv/FZE3vc
03e1qtGzd/PKOH/nUxyHV7WqMbMDE/7+RMcBZ0Wdnrknv+kknzXvmFozvlzU
orzTF1rVl9mVzFzjLL/Lh1rVl5k3Unue7XdIXZnd58zFqD9Pdmxwhz/cqq6M
f2HmN9Sgp/p9sWfySqva8ttd5Ub1J7mce5kcQV2ZHeXMb6hBT/d75F7+Q6sa
PTsM1O5n+P3d0Kq+zD5k+O+zfAb/16q+fNTvlvrzfOOJ+jrzw7yDC3wm1IDx
9sus5jv+beQY9k7+3qoOzO5vZjTj++/O++KOfaJVLfhs089mJvD5XmacUAtm
Pvhd4/La7tlorOq/eF1ldjOh4+cKv+t/tKr/sguZOc1EPvMr/S6falX/ZhY4
ns/9Kr9LasT41oW75vey2/F+q5o3u7yZ0/A7yUvceU+3qiGz5xGe/2q/c7BH
Hfli03PblxlT1JGZoU3qd3BT92w+VjVkfLLCZV/hc/hnqxoyu5GZf4zy777G
5/BMq9ownrn/38S5h/89lnHcIWxtzA5+n/d3MzMjhwtFOYuSQ21Wjm3tqlwi
5HIIk4rk1EFKkkMYlrNI0TA0jJRC2piZTc4bOctpObV39/t1Pf3xu67t+/t9
n+e+7+d+7vf7ed/P50P/yFzEPdlXu+KEvBPLcV458fX9n9e64oJX9bV+5ODk
svmKa5k5IPciHf8hibt5ypyuzh30IB3vP3bFCblPgXZ9dfLC+WtuzL3CgfHH
sZ7bFeej59GXnHHM9lNxPd4hRb+jiz+Om+/LvNkV35vW13pfik/mIK555nvc
Q6Tf0Ytfjqu5yLyuOB93HIZnre/vildx54Bex+jkg328O3l5cNd6GWvEj1s9
ropb8c4k+hhj4odz03dJ3umKl3LPjl7GDYmXsf/RrniYdX20Xt8Fs6Zv/sV7
W+llrJX8MG9zX/f9rjgY755Bz70p8fygKw42s6/1MtZOfjieronmYdztQtO9
JXF8vCuexX0E+hjrJVbeJ64nzmVzLd7tZi7mHF5GxbXQch2/Q1X8ivu86PWu
v87ZJ7riVs5Zr82GWRPnq/ks71Iak1j7jsmHVHyLd6Si2zpO7h0vr+JcvJ8G
3faOrNUKKs7l+koPY6PEyPzNtdVclbtY6yQ+XsNnuuJe3Hmgf/Hx5Ny9yaeH
uuKr3G1YL/FzjfLeMTfjHi7arWPinF/YFT9zztOz2CRxcfyd7+aTvO/lY/HL
sRmg4mquoei29sn101yN+xBos/dmPR/piqdxV9XrtEXWyJj+Ylf8jPsN9nnL
+Oq1WtAVn1yma32A++Kv8/7kxAqd9f7EyLyNewXo4ltn3Nnx9cmuuBR9ok/l
u57TnI9ePVrz7MTY8y7qimvRP3t2yc+3VdyK9zzRlzAPcx57r7k/PlTFq7gz
SZ8JnfTBrJf3lTHw7a74Fb15NOntEyP74j32fFcci366OdgTifHpXesRoZM+
lPVxHMyFuEeI3j82djhvjUdLqzgePXD06HmJiXP45a74Eu9bsv/j4rv711Jx
Je4DmksZo7zHzY+4B+hYjE8MjFHLqvgRfdLPx+d/d8UbN49Pj2RtzJW4b4Qu
OT/x7KfiRfRK0CUXJBaOozkR7xhC694tfrgWuC89UsWJuHeHxr177HbcjEX9
VbyOfiW2O15vdcWZNuiatr1H1m1h1n5q13odu8bGRYm1+RLv5ECjfS6xXkPF
k7iD5DhMSAwc04EqnkR/Y2J8d0zNj3jXDtqh/XZ/eU0VP+L+Gzr4pPjsmmDc
WlHFgz7RNd1wYfLIPIh+gzmS98/rS35+pOJAvJMDnfC5xHxtFf/hjhF6817x
66XEfJCK/9EvwbeXE3NzO+7ATYrNrv8rq3gKfV+0wxezFs4dcxXu/KDzvRSf
h6j4iv3aPz6dquInvNMC7feArJP9co99fRVH+Z8G2DWNzvvDGO26YX7CnR+0
4AOznvbbWD1MxcPoo+ybNbXfS6k4Cj1P+3dQfPMec05M65qGe3B8WLzk55cq
bsL7JdBvD4kPzg33uTdS8RPu26DfHhobHSdjZZ+Kp1gXNX+xJmpewnvc0DzN
Y9yT2kTFSXgO//DEbVMVF1k1MTsi8XKtMQfhbsbkxKen4qj7Jh4zutbfRCc+
MjFxrnr/Op9u7Zpe5nicreIOvLsBrcxxcL95CxVH454MevA7yTVj6ggVv+Cd
Z+hl9tm9qq1U/IJn6NHK3kust1bxi7W6pud+L/6br7hGmWNw7wK97IOswWoq
fkEPFI2zX3JhsIpf0ONEL3NcvL+d7+YX3FdD83I9d76OUvGL8V3TeU9Irjmu
zlVzDJ5dR9Oyb47hp1U846Nd07Psl2uQeRP3Jo6NP47pWir+QT8VTatf1nEV
FYfYvWvaqDlG//jkvDTn4RnvE7Oe7pNvr+IYjpO5h+NjTkFfE73R/GNg5rOP
w1WcZVLX9MYVU2+cA+YW9BHR38xBBiXGtml1FY/gHRXokt4b7tt9VsUduKuE
7m6u4bXwfjAmbKjiDfQNba/5he303hij4gZo3ehNgxM7+zK3a3062zkkfnxE
xRm4D4T++cvY4Hx0Dd9cxRvovaHPnRE7+pKb66gw/Qdd04hWSSyM5/T4jff2
bRsVjqP5GueHx6dHu9bbQtPri93OmXVV+M57END0piTG3o/uaX1Bhe/clUHT
MxdQfHQt31aF8/RO0Hd68W0DFc57ndDGRmV9nuyaBouGMzx+OybGYt4JgH5j
+9yv2kOFw9w3Qb8zZo/M3nGN3k7FQeh52LbVEouNVVh9fNc0nVFZt0Vd02Zt
1+pZd8fPOI4Gud6S/1+pwm6eAUbfGZ1YTlDhNvcI0POuzHqunVjuoMJvNFz0
nTGJh2NpDOeuCfqNfXUd3lGF4fShjPEbJl+M3fT80VbWTox2UnEG9F/PuU58
dYyM3zzba9+M8/bLvbwvq7DbexV9cJPsU+M1fX/7a1y3n8ayz6nwGg3YWG7/
NlNhMTratMT4o0t+fq/CYJ69RUO7PvY4L9xD21uFwfTO0dBuyPz22ZgyTsUX
0HOxwT5/UoWN9DXQwWYkppsn971mi7umedjO61X4yPOpaB22zz2ofVX4SJ8a
ncs4ulHW0pgwXoWRvNcEPcMcwtr3/iqM5PlAtIxPJA4HqDDysK5pXXdmfbbK
HjdG0kdFy9g08dlFxR3QuzZLXIyL9EbQNjbPXnMuGRe5D2LcdC7sqsLDsxNH
4+W2yQPzBPrbjoH9NwbtrsJInhdEg9gycTxIhZNHd01/2Cq1wThJrxT9YevE
dU8VTtJTQXvYJus5VoWT53dN57ov9m6XvDFW8uwc+oFtcq/smyqMpp/ouT8d
n76kwkx6I57b2LpDYrGzCjMv7ZpmZEzdLvvbOWGM5pkhz3eECkPpXaCjzM64
O8Xm3VRYfFXG3DExNuah+RkTx8YO4x19A3SBnWLDF1VYR68eTerhrLdzy3Vv
HxXW0Q9A8zAufi52Oc8mqjDv3q6d2cfGZuMXejy6hnFuXGzxek5S4RfPgaJF
eJ9Yi/+OCrfoUdtW45vtdA07UIVZ6L3GNNv1FRUmoUtxft45ttluYysaOtrJ
+MTW6/1VFW7xHCTna9tmjfx7Ksyif4wu8nTscz67ph2iwi50W87XuyQGX1Ph
l9eCs/WuWQPjF1oVZ+vdso6OnbGKZ5yMZY7ZcSp8ot+HtjAhMTtMhU1oWMau
iYmZMYmeLudl++Had7gKf9F17cOeidXXVTg7NzZ+MfEzVtHL4ww8IXGZrMIr
9C7OwBPjm+NiLEPT8u8mZVzPZ3zhbL7Xkn//TYUnPBOE1vBG4uI1s07/YxWe
0DNDczD2fDm2uQZ/S4Ur6FecU78S276hwhQ0Xc7h+yQvHWfjCmdU2/h3FZ7w
zA9nU9tm3f2nKiyh34VmYNzZO+vg+nmUCu/QtWzX1xKXg1VYw3PXxiLrfz9X
YQzPaxiDHI/TVNji/cd5fv/sPWMKvRhjjuPyXRWmOB5LJQ7GEXRczqb7JPe9
zsYGelqcMe2La+4xKmzgmQrOj/slJmeo8GFm186O+2f/GRvoq3BuPCAxOlaF
e2/9n52OjfECfbdf1ulIFU481jW9oX/W8ZDkgnGC5xg4A9o+6/2/UmEFfRHO
ewfFxxNUWPB0187tK2bsw7OexgTug6+Ucc9T4Q89gAEZz9hxkgon0GE5Fw+K
T5Nj99EqzHDsOdcdnrgbF9BPOc9Njj3fV2ECvTrOzc4L15ifqLAADdRzD8uc
zpHjVVhguzifHRl7jAHoj5xD+/Ldo7J2J6rqNWf94fmux3WdRsfjDDoi3z0m
8f6BqlbzDAnnJO8Fa3m/VtVp+kycQ0fGR+eXa8VZqlqNfsUZ6bux82RVvXZ8
RiUuu6md5zkbHZ2Y2i9jDJreiNjs9TxFVW/p6XAmsi2uDeeqai4aFWeiY+Pz
z1S1d4ja2ef7iYXrLho/55fj4uMUVd1FD+DscnzstY+u8+hCa2U+23y6qi6j
A3AGOTHz2ibXX+5vc77yGlh//I2q7qLB27b1Y5dr0/mqmsv5f4PY8wsVFnC2
XzfznRKbXG85g/xwyc+TqjrLXWvOHrbD+uFvVTUW/Zzz3UaxxfF3LbpAVWvR
ADh7nBxfz1TVPjQmzh3Oi7MSa9c+9GrODh7fdWSqqo5z7t8449qnc1R1kTus
nBlOjQ/Xqmqj853zguu+c911ES2Xs8Jp8ekiVX3kLPfJxNe+uAYqfmwbH7wm
rn3cQ4Xb2wZrjzeoah+aKxz+jPh4iaoWc2Y7M765Ho5UO6dtl/nOTdxdE7kT
+JnMdZOqJqJrwtk9j+vnZap6iL7EeWFK/LhQVQ/XVOPr52YdXGfR1jzWFar6
iE4ET58S+y5W1TjPMTZju6ahuXBeGJe5L0jsL1XVLrQPuP/4/M3UxOxyVf3i
nq7rm3WMW1U1Cy0aLu919/76g6pecYbfJfNepapLnJ/gxxfGF9t1jJpOAT+e
mrherapN6MHwXs/r/TRdVZs4t8N5L4o/16jq005qvPbi+OnahHY4IX7coqpJ
nLkmxkb7cYLa+Rteekns/J2qHnGegmNemrlsx0lq59cv5Xte72mqusL5CQ56
efz32K4vrjf/VtUT7rnBO71G1kH+oqolaHVw8r3jn2PmPfxHVT3hjAXnvCq2
XqeqJ5zR98kaOz6nxIevxj7b79qC/gaP9FzepzNU9YXzGDzymvh2o6q+cD9q
v/hyj6q2OA9dc5yDrifoSwfEl9tUtcQ+fCO2n652xvp65rGdN6tqCPeQ4ICe
z/rM/aoagl4E17s2vsxU1RL4+cGZzz6clZjDzw9JzKYn3q4l3H85NPM9oKoj
6D/wOc/lunOnqm7Bu2+MD+cm1vC76YmzawhawxEZ4y5V/eDcDXe7JXbdrqoV
nHf9+2/ld47tHaoawVkT3ndU/mZG4vIn1b6G7x6dsf39qWpnPDjUjPj3Z9V+
RruCG3m9nc+zVPuZMxO86LbMe7dqT09W40C3x55L1M4zcJiZmfevqv0Jh4WL
3JHvetzL1M4Q8JE7E9P7VHsULgsf+VN88vhXqHFpf2e2aq9yZ8J72efKf6r2
J5oEvMn+ex88pNqb8N6TY9+9qj14jBo3+XNs8/5DR4BfeDzn+FzV/oMHwy3u
jt3/UO0ZeC784K8Z+0HVnqFvDT+wLz6DPqXaM5yH4QH3ZP55qn0Dzzozvnje
PyQG8JlZ8X+aGoc9PXY4nnNUe4k+7dmxYZFqH3HuhRt4fu+7R1T7CU51Tua3
b9MTN7jBrMTM+4nz2HkZZ4FqT8KfHoxNt6idY6bEh4dVewbeD0e4IL+fm9jM
V+0PODkYPTd2P6raH5y7vX+cQ8+o9gW89qKM95hqT3g+sPfhzDNTjXeCm/My
z+Oq/QCPuTTf8Xh3qvFJcPCRxOMJ1T6As4CD82O7x71LjT9dke8tVOXvVDX8
ezTjOXc5V4Fl9tm59rwqd+E64NhjmetpVe7CccCexzP2s6rcpW/j3Daff12V
s5wjrs18L6jy1fNcl/HvU+Ms4M0T8ek5VU7Sr7g+47+lykfOB+CM53D+vqjK
STD5xsxle2clFmDMM4nDbDVe4bn/pcpTePNNGftlVa6CwTdnXNs6Rw0vn8sY
D6lxPbDj+cTiJVVuwsnAhefjwyuqfPP3bs/fz1PjItTyF/L3r6pyCf5AzX4x
dr+myiXwi5r9Uuby9xeoYehd+d6bqnyaoVanX8l4/1Tjun/J2r+ryiFw8O6M
/YYqd8A96uarGevtrD34Rt18LTYszvqjKzo3zO2W7dXaw+Wol7bFufJe1p/a
/4/Y8nbW37bPit0L1XBqdub9T9YervNAxn0/a0/tfzBjLs76U/Pn5DOP8y+1
+uv/v5P1BrOpZ+/G7g+yvuDZvHy+VK/WFVyi9rwXu5bu1bpSP+dnLH/vZbVa
viB/v0yv1nSuWr35IOO8qlZfqQ0ex7/7UK/Wh/pKbfDvPOZyvVojzvor9mpd
wO+nsn79erUmj2WtPO6banVxYWxcvlexBy8X5fv9exV76tazGcPzL1arV16X
5TLOf9TqjNfFn63QqzXx//3vd9UwwutkOz/cqzhTQ9l//WLHgF7FlFrkePvz
gb2Kqb/Dnvtw/t7xpCY43v5spcSYWsA+GZCxBiXG7G3Hy5+v3KuYUIvfStyH
ZL3Yi47XShlnuV7bg47XoIyzfK/tPcfLnw1OnMjfwVk/9r5j47mGJh7swffz
+bDE8N3k2NDEgHwnt4bmb1eJv+T1Mvm8r1d+UQOUmC0VP1eJb+TpcvmsL76R
n8vnsy6+kQddYkZ+9s8cvdhGLgzIZ8NjFzkwMJ+PyLys6aD87YjMy1qunM9W
zdzEetXMyxqOzLjEeFg+Wy3jDs18q2U8YtiXz0ZlTHwele/j2+r5O3wakc9G
52+xcXQ+Z+418hlzrJEfvjsmP/7sv1my094=
     "]}, CompressedData["
1:eJzUvb3rfVuW7nUa8cu5FC1V0EEFFZy7ORyaExwqqUQbzk4bLgqaXDATlA4a
zFowuf+BqYIghmpmYtq/P6BN1KRvYAcmUkFTgVwKKjFY37EX8xnjM54x19qn
WneyWGvPNdecY8453l/++X/yn/+H/+mffPXVV//7//HV5+8vnv/rv/ev/rP/
7r//+HLc/0buf/e3f/njX/3it//4p6//43lcf/v7/+1//Fff/9vD/3/9jP6O
7/ybv/37v/6Hv/ub3//8Tf3/8Iz76D/axf3/9C/+5f/9X/4vP9vuT9vFlfrT
ecf34/rDP/9nf/Zf/Tf/1uf/3z8DDkd/f/jb/+H/+a//2//i//rFxXH88BoH
wWH9/m7/3z3jPsa7tv/qy7/+9/+D//n//MO/k8ZD13vjcfA9x6v9RHsdL32f
4Dyb13fP9f6rL+u+/MPf/kf/8b/+d//lv/hnn///+XPdB1990X2h89D7u3DY
m99u+29f8ND103HFdYWPW3cezz24fP+M9VrP6598/v94ru2/evW7fjfw3nU4
z9Y9w5m+U8N5Fz7f2XVd+5+vk56XtX2cD1oHPcfx/tV12Mc7Nbzurs83z7jX
fuJ+Hcf3L7wS8Frp8LeCp3ifxf3d9aR5ruu5u+931//+OVnbZfy+zifD2V3X
7/3qte7Rf79OX31ROv7TnFN3LjycCb57+2V3/R/PeH89N3+Q9fx4tY/31+/G
eD6+6DnX8Tp699794ujW+859v/553/bzyPv2p90HJz7VedRyxHxdVnjl/UDv
1fP61XO9/wr58RU/fLzgqP3rOBSOK5zyOq1wPvEAnX8Hrxpuu3zALp7L+2u6
r+r9dHe///kzntfXX734jFjfdfxff1F5Keh9wGWV88/x6vz1ns4DvafXu3iO
zpMbd9y780T91efpLv58fI5/er528eDdfXjCR/mKGi7/BvENvaf7gOA2nWc/
P9ILPZ5K96O9yu/H5ZfC53+F+qeaH9+nN25een3P+dqlF7t4d7o/eV+u6zI9
t/v8xHGdntNfiV71a6DHX7/GE+/rOq3wYXy7x1f+Mp3raT/1OXd85v3zGf3p
d9b3Yjzz8+LGuUcHFY8Q3xn7lelHf27u0r2Mvwg+Nf6a8kt3z+k3iZ+s+cvo
9/EJl/k5XfkoXdc/vJnP2cWn/tzU+5DPt+uH6Pge//1nL/xXy9Xne+s6Bj7M
fMcMP53jJflvxSOsF4n27tzR9b34L8OD4Ln2c8Kjhhftu13+hM95f7538eXj
cx56vvVc38Vv8R3V/5z7fN2337y+p3DT50f7q3zub1721NXuGeP7VTqnPV1Q
ufLddIXfr/HrT4e3ZvB9vOZP+sD1uivfvA+fT9enhguvc7++Ga9TP4TX/7j8
1S4dIHnXnYeA6128c8K31kMr3o/+M91cv0fvv4tv3qUv83Pen++M7/px5/M7
42MzXqMr4bX4bs23Zj2D0pdeDlN8fvK1Dm8EPB192pMvd/nqvH/ifu3XyZmM
J92V9tfazuvbdR2u4fu7/G/Gk/X4dvk8j98cXrtGN75/wUP1AAQv6n+9D3g5
ffs+HYnxq9+U6u2Pdj+84Kp+SPXzXyY8Pz2n9fyv8gM/T/RqbxxKv3b1PHfx
/128fl1frXCr+fVTP7i3Lvt40NFXmme/rrt6g/vyQ/RLeEbxINmpaX5/HP48
0+9+3ZR+Mz7s8UCmd/X3iA+9i+f/7Ln295Xxb/pD8jOo58n2qvV7u3j+G+Rz
ol9nT9H+j3vG7zou+r/nB5x9K8sRMz794/X+DC/v4+P63DMdmsEr06F4Tn4+
jv/Y089dl8dj3PW49LtfC9+R5c1+nRVOU/npB1zX2H8rf5PpDl3pHOu4dV2m
+s4pnnfj6/UEu3zHrjx4rrPbnzX/cVce2ZUHmY709OM+/Vd46Ps9/cv0g+SD
e/T9m2ctZ530Rv1u1Y4c86jtznP609OdWA/mo2b/B3z/QvZxfOfnz7Wd+r85
/1jlIx6vcZMcsn4vw6uHj6efUz44xqF+RXt60nfTzymfc1/fGt8n/pD+Px7v
2pfv6lc9Xavhyvo4ve7qLaf8VL8ejk94PNfnmQ9cv3Ndz7dLl+7Jt5n/0vkp
PZ3KWz2d+aeWk3f5ucx/EJyI/1D7sbZTfvwefT3XdYV7Pucr3vhI812/5+RQ
5WO83NW38/TJXWm/Tun5Oo67cuWcTvX0ifmFHh7ML+zR2/v6mamcqd+dyh3x
np6Lmu/O+oSaf8/6HdpHNZynfMW3GB+n79f88rv167t6ort+HKR3VX0Gy3X1
/GI+1/X08b9e6/kwHzK78rknOUDfV/jfs8s+ntH/zL/kKv92V6/D/EHPFzxe
79XjVTjv6gU8XXf0/Bqf9t0Lv0e/tR8Y61voezX9VzjqNceH7/Fjj9f4Qv5f
10XjG+f8SL//f/Os/dY078jPE/80xb/ET5E8qP3U59LL9zP+JcPx2v2JH9d5
ZnpK46z51qnfwK798t38Ftl5WG9Qjz/LDzW9ucs3vUufpvKi1z/ovHW+9frF
97IevZbH38/XT+Ec84l+1udZnqbx0T7r4ersWXftQqyf6PHsXf0h8fmZ76j5
/F2+iPUZPT/wT62nynJG/d7vQM5gPqGnZ8zH6ndJjnB2D8cPr9+7y1/9/LXf
9Krj1SvBQ+FCcKjhsctPef8xsi/WfCTj0xquAUfmL+jq5K5pf47/iv5nfgh6
f1fvlPVxs/ev8i/Et2Q+lOBZ86HM9zh+Z8a/KB1g/pL66fnLrMcl/4o6nui+
HZvOf63HOO0Qzj9H5z87rycf3cdBn/HPJJe578/k/6z3pvdofWf8kueTdNw1
/H6DefvW58yPrON4vOA5s/syv0nXnt/8s6eeH/o+4Ye79knVx+zyXf01x6vc
1Uev/e7qkx/yPuuppvI50Z+Yt8NbtRx2V5+3q39mfq7n4+7KDb9OfOD6vZ+e
73X9rO0ez7VdwOHUs6/vZb6y5ifvyhUPWYeIl9U4WdULZP6J4Li+f65bn+93
zlf2/OTXTx3flC+ka2/Pc/6yXq8341O/Tvt/av+p5aLsH9PbaxQOeb3cPOt7
1sNqvwpnkrfdd2u5iuQQstem/K3PdT73+eG7ct7sPeb3lJ+m9+v1PPG90ley
a5E9uIaT7keWC/vxEh9y109jzv/1fIiei6k/D9sn9vBizP+P5V/g5UwHh7if
ypk0jlrOvGqv3rWLe/3ljL97t957P95Y5ViCVy3Her5uxs9l+YnG4fQr7vs6
/39afftUDs5yCMGH5BDdLzX9yH5z8T7BkZ6/V99+7lM99zTvqR18ym8qPFZ4
Mf2p14P1ovp8/e7j9d5Mz+H5bVqHa/w28WOZ357mUxD/BuRr3Tw+4fEl+nFw
cftiVz9c461dP/Z36cM9H9zzvyzv9OtB8s53KZ93vKf2l4B39HdNHnif/W7K
b9Xr6vIjZLmJrr3cNLX7EL/9S4xbUvjW/2c7ocMv77GrXbW7/PAa716dop/a
/4nXv6YHu/bLvL+neox4TuvW82Hv9pdhvWvd/tRr63t/HDmS5Sh3nclRzl52
1V/l66RHiP+nfgjv9TP/pbzv/HXzfr0mB9+1v7Ec0csPd+Xlu3LXrn3CywGO
/78mp4Y/3KlH1/jedV535a13+d1+I/sin4tr8uTJd/T17O76b+zLHzO54+fP
Gv5T+7niobn/rPa7p2dTPD/nD+p99vMk1yu8tT/aTzG/Xn7V+Xo7w0wu4X1S
v+f1Y0oXYpx7cTNn/EydB+pqnA/LL73cQvIzy921nmzqR/xuOY/1/tTPcXmk
eZOd4rg4v0JvD1O+pP6e8z9XfVGGD9HX98qB77Lfkr536q/i9CZTueaBfHqM
w/m5R7tez+/9tPr99dPpbQhecZ3qbervMj6d2hvWcX6Hfne1/xjLof28ia9/
POP5TG8a7ad5pO76N3o70FT+uWePvG+nr/VAdJ5VT5Ttyu6cTe1IvRzDdqBe
nvn/mv0z663q97U+Mss7Pf/J8r9+rz4XOV+ywlnlOsITCp+Z/iHL//fkzHf5
E536gBhPbx/Q/ZfXRb/T86+6LlO58iHr4eJfr+pnf/1UeOzKiToPWo/eznxd
Lzmb91w+cvMh+Kzfcfy4tzNP5XKC74zeZ/v0VM/Xw+Fd9sBsH6Z+3iN3kby1
6w/C+oT6u2THdfbeqbzq5bip/Eb8k8Kx/t/LX8QPkd6B+nF6Bx3vVM++vk9x
KSd/W8e13PeHr/1QaF10P2U/LR13DaepnsHFA75L3/Xds9c/n+Na/b4zHZh+
f3ZOsp9N/77uz125jfiC6If2E/NPZN/S9j2/6v1sa7hwPuyp/Ebw+2n1KawX
oGuvF/g66ct6Okb/v8vfd9cemvl4Gl+9n7JdLNpP5Ue61nLjff3gXf+MXm4l
efW+XkjXSe97fcGv0vnu+Xedx+O5/p/xG9FPncdMP7Afj07yrJNj7+lxfnhq
/70/zbv1CFf9K1mfMBsH+RNQne2vgC+M72W5W/Ot67lT/LeO76p+6OSLVvuw
3mf47ekdMh8wld97uf1devy5vNzLyV+hfmbKx+l86/1P+yvLGev/d/M+PF7w
nunb5/bfPTk87x9aN1p30k9M1yXGofh8z26s/AHL1b08nfUkbn2cvmgKz/oc
vFvfcDUO5MSLbj5Or0Bwqb9PeqtMZ0leUzqs93qufyp9xB6ef78+lN7fXc/4
zjW8/mcJPzh4KJ3S/U18UX0OFM9wXAHtJ51v9O/spTM6wf4ZCl8Hf6dvJbhP
9a01HJzcS/jM22FX+Cic3Drweqk+lc7bjB/6qeIg2G7dy+nv08u6dVrvCQ9+
hfJS/F/rVZ1fDeOx+hzk/T+D51X/d7Z/z+Tad/ul7OoV7vodZH0urZvqc53c
O5N3Wd9G4+i/+3iu944eeLl5Ji+f+K6X51gv7PAD7aefxp8l65f0fZ1nXSfu
lAPq/qiOXN4XM/0lyX1X9QeP5/p/9gsgfX0NJ7IjUBxhnue6L05+Ur93TR5n
PaOOm+Bf1wPK66bjIf8mbTezf3i7OMGD7BrRvpc7vR5I29fXtI+t3oX6I/n+
mj/k/Xw2vVzI/Hcvh9332zjunV806xHo6vj2XT1azGPGv3M89/p/trNP6xg5
fqSX29gP0p3T3j6x67cy1y+s/e7na5idM9a70Xqs7ytf++0LrhTH1tevuavv
eZ+f5lRei3vy0yT4r/dnHQ6Nd6+/+3gqPJz+QdtTO/1/qg+kq/Lh9fy9n4j+
X+vTKQ9gog9xtfpqek74Qc/TTF9wVZ9Beoz35c2o772ew/Xj7ICkn1m/P1+v
+tzvx/OR/oquvf5q6qf7dWo3tY8Qnuz5j4znFU/r/u75758qPor9BeK9Wp9y
P85vHfdU/8l6NXet37vrL5j1QFf9SmZyXsZv2g/1S/iA+EynD6nfezzXe9bn
3PMH0nwGHLdZ7/uret27/ous73F6nhWOu/rf08+j1qu8W7/Hejbqr6cb3wid
yXXNlR/c82Pyeqf1u1f1sVo34Bev/bHmQ76r1/P6Jupvin8cX07y8rqumo+a
8A/Z36f2Q/YbmvJdMs5tPQ/BS/slPemUT+vhdzfP8v28AjM7rrbj9ZvJl3N9
X7+O2e+L+P7pOpF/+3FhvqyWT6g+3dQvOechmPH17L/m4FLzi3y+tL/Zvfdf
0/Gu/Sgevur/+W2yH0z3S+3X/a48aqw36vVFTk/Mclw9rt28C/froiicpnaL
9+r95n7n+tzZQZz9l/Di9Ps13Fx8sLO7cd42keuTHaCe79dpn2p/tI/qfcr5
eer2d/V+2e/L4Q3ls9b/P17jquPd3uWHTP4HXl+h6xPjmuqPern9xP80P+Jr
j9vvnwo31T8r3Ptz6OOQ6v0491ec8rvO722Pjt+Ni93X99TtM77W+fTzU3zt
/XmiP9U71PSc9Q5rf6z/qeFAfB7rQ3v4kj7lblzhrxLfSXHD9fzvxg17/zC9
/nH8M+/62131O3+81nPVXxB+Pe1BTp9HcIx1cHqont874VavM/Edqp/3+iui
/+t42D8srv//8B9lfZSTZ3s/BsZX9Xu/EnrygXl8aj3818B/zf3/yA6k86P5
rOO5qkd8PON/Y3d6Krx3+ci4J/s8+SPUeu4Yzz5f4vDe0T7vN+Lj+nWd68tq
PLSbV9fFNTL/TXJCL3dx/OKUfgtcrN5Sx13Pi/WW0Z74lF4fqfJT9icnvwNa
H4Wn46OmfLWOX+S1sVzt4Ez0hsbj+lP7w64eW9ut8Pb6unrd7uYrfFe+kZOP
0/Nf4wPdv2o3ZD1O/f+7/Riv2mGyn7LbD06Om63HvvzW0z/W09fjyPiF+HS1
P9Z8wbv1rl5fR+vj+Pdrcn/2G75mj468/KffZC9fT/2rvR5P5f7+u4xfSe+v
cHT8az2urO/V78/kVvV7/DnK7ysfezc/CsWvsN8a8QWzfevyNWb6RfRMx1Pz
J++yCzwETlkOq/HbXTveVT/xzOe47zs6QvY/nV99zf7GUzveen5d/rddvRzJ
E18l+hDtp3bC3v4xjc91cbn349njvVrecvX+rvq7e/8157em/OYf1/7B+nC6
9vLTrr++92OkfaV6bIXT1A5ct7sb53/XnzTzdT1/w/A+LtkPblffSNe6/XX7
Jsnf9fx0/zn9Juk179pjMr5e4eP1WCscXL3Gu3rtk245fkv1x04PVj/P/M41
v9mpnz/rU6N9rUfdtXP8+rVvwm8zxvGXP/7VL377j3/62e7d+m/vx6jP417l
NHp/Kg/U+4f1626+9XrquU76sJT3kc6Lvl/jk+zn4+a/x9dm+BCddHTgs/22
3pX4PJ33jM7k+db4kPW3/X22X+yuR1xr+catF/MnyocqPp7CX/WmZL+Ywh/2
yZd1nDkutu+X2l3NB3w3n/7deH/Na0bxS691GuvHnFw1Pb/1+6yHIz0D4ZEa
Xo+nwlO/c1zeFc904nflz2by6VkXWdtN+6nn6/WrM70q2Z3y+ajpUs7XRvu8
Pu9X6xVlfFbDj/fj1K9d+9f5xDjILqPf1XH1cGK/yr6fnO/V4TOla/3+YTpX
90/2IYeHM11Qu/363hl3tY735+l9wt81f8B5Hns91E+nV5/yZbr+x/377Lv0
fv886ztr/HLdnqvfI/gQXar7cXrXx+s9Xff6PAVcf+p6vpQvU/UabPclPryG
A9t3HL/k+K363ud52JUPp3p9nS/ta21H+2/qF6zXmo6TXM7nvt6H2S5F8+n5
t918DKyvAzne2hUIftquxue7439X/Sf2bye4r/tF6Rf5bZIc9e78Od4PucfP
74qTuG8nn31X7WzZHl1/P9c/2uUjanzL8UazfZXlCNL7Kl6q+appno67daS9
33K9jj91vMb9uAvSP9NVz6PTA+s+qNuzvUvnQ3z3ul5ZXx7v1frwu3YArx+m
8+Ds2zN65PwQ2b+H9h35WezaE3r56Ox3Vi8623l0HPG8zhux72fR05VcR6CW
R75+7cN1PJynnuhY3T7rw6L9eiU9EfsBO3ox1T9TfzBP3KfTdXJ4a6qn0P7r
fUx5s/M6Kj0g/cXsXLL+0sBX3p/mk3ZyCH3P++nW38vx0qSvnMmLXi/dX0nO
9PYN6rffp5lPcv2TncrJpWTPoO/Rd4971lsTXON+Zk8hPTPHn/T8B+eldfpN
t5/rfoj/VXrBdQGPC+uz+6uPZ5vi25k9n/XivT48xxe4cdV8e7b3EXx6efau
3eNunRmvX5/JwXnfTfnK4/HdeIfHa117PcBcD17LQfP89Hv4je17Oq4antm+
R3B3z5U/VjlH6eU63hjHXTvL++Jo3X6s14PjaEkeonyWJKcpPHq5LOIzzu/0
/mk5Ly/5OSgciP+p4cT5DHReMz27y4921Q75eK7zyHIMyQsEhxk/5v0YXH+E
RwgP036b8RE5Xrn//svOeVHf7fTcX4O91fsr1Pj9/fn8Z3L29TqRn3B4tSf+
ZKWf74pTYz/tXh/+7nx/d/PtXbWjsr2Krs5e1e8fJw9nfm96Hmq4ZH+EetxJ
P/mlhpfLL+PzyuzBg/btbpxFxpu9vVnfZ7/tdT1UXtjN4/cuOyzbj9x15Yfv
xhWyveFuPAFd1/m+z65bw53lp/p9it+f6uk/PttzfYcpniB9sM63v8/23rVd
luf0XOp+7+WqXJ+Z6HlPd6/GL1+Nd3w847tqD6ntIFfttr95xv8RfxFx9IqP
4/332M98fAD9T3wU8YUxbqA/1h5G85u9p/W3VD53/rvT+J3Hc/2uk/dPvRed
p891f41zfX7VTubtLtRPP39eR6Lz0/bHZW7PITni+N/FMZP/Odn7nF+v0/f4
+Ca3DtSO7DOuP/pfx7lrDzH7J64vOO7ak0jedHbUmr56vSTxSbEfen2ao1tK
t9+X55rG0/sNqH4q7zPSM6nejPjcuh4G71unP3R4Kto7u5n2T3Kb0yPRfb2/
vk325un+r+MX5vgk/lc6v64z+dMTHxDtKa5xGsfG9pkeX+c83DSO+pz5uBLa
L9M4ObdOBN8VPu+2h70rbpftIPp+r3/+qeuhMd2q27Fdpcf/zm7NfsD63nH7
ePUX8kUvj0zzgGd/UKcX6ulYjNPViX2Xn8tPZ8eb8rXRnvYx0R8al/OXcfLX
rv2D5t2vh8tnyv5nM/8Y1kPW8H9X3ZwsFxzPyZ8j57lXeJG9o+dTfB0VkqOd
/U6/V8Ptbl0kjsvak2uyvLa2j3Wg/JvePrK237d36/doH+752ezaOTJfQPOk
+Sk/NeVHdd1ndITxntJfhXNvJ/DxjtG+xicBt3meN4dflF7R+kz5y5neze1H
H0dD9C/gSuMlfOXk77UfZwfJdF/HT/NRuk/6v16fkf10dLx1vh9vz9Brz3dk
etzvB6e3cnZKhovuD5LDZnzlu+pl6/7mOIUabnfzgPp4ofq8/dRxnLt2uPfH
jU3PXb0/vb1E92eNz+/WMWF7vsKV1nd9ftd+N7e37PGVJ113+rX6uY+/7PHt
P3X85eOp8KvnyXabuKf6J2p/1nHRuf6cx7Oe/zzebG2X6xpTPRPNV0H6ATeO
KR1a/+d6Jvq/zov6cfznzM7j9bL6fr0Oj+fabu5H6b7vnks/PxKecHzwXnv2
yyC6U4/r40usX4+HnF17bufp9WLnfpjqh/t20zxxTr+2W+fa5Qmc6rN9HI7C
0dllZvSa5RvtT+FH15r/9XZO6k/H5fgWd/5qfjbbuWs+0dkXSY9N9kXN18Lx
ReQfKeM3/kK7fvJ34/QyP+ngrPwfyQna767dia49fWU7peuvjt+e2/2p/fF4
bgfT/9fvzPUQe34A0ziJtE825XjS+2d5rZZTOP/eOi62o/Xy3uO17jN9XTyn
eOxTr6L00PmrTOnscSE/onf5AeX50ThJXpjZu9TOdfof0XenfJ3Siak8X8Od
/Q/qeakeONr/8JpfPKe6Revzd9trvX2M6Mnab8abDo/0/OzVOnxZrq3xPOuL
pv6sOo7j8u1Tv+vqJtVyXF7HGT9zNY6e67HP7G3unuPHYp/P+KWrdUbZvqzr
O6OHxIfP5dZ6X9+vL6DwrOWME8/26+3sMpkv6M/11J42rdPl6nPdrRvI+b9W
/vddfhS7dU/f5w821T/0+yHHV9X3WQ5w457hsWyHp6viXeXTFZ711cd30/jp
WuvVyD886/N2+XLgE570v+Ov3XuxPvG85w+pHs0032PGH06/o+1ndJHpAe1z
558RcKrxN43jan4EH0/1CS8Z79386u/yK2E7O12V/1B493Cgc5/tRcDHWPu6
ww/1e5n+an/Uf0+HdV/68Slfquu3578Z+8LZHWld7uY5vhvPmuW2nk/K9HP9
P8eDTe2QdF3PzdV8D85uqfbKq/4pmc5F+2t8y18I3vx4jS/aa34VnVeMqz5P
H9J+amdne6k+7+kC28VpXP1+zP4q2o++p3xNvU8o7+fV+Nmfzm5N/K2z88R6
OL8Cen7V3knz7duTH3WmBwTHer/l/TiFp/5/3OZ6Auv65XoHx+Nsd9X59Hat
HGev57pef5/3kuTImT5m6v/s42Wn+3K6b6br7OSSqb1Sv1ev526dJ+Kz9uu8
6XsBt3r9pnGbub8evlO7KNf71nHAvkA76O6+I/2e40vX73p/YoXf7L39eEqC
x9r+9PMhPff0nK74Mde5cnx5LXee/OC0Lp76ZTl9d1z79aS8BswHruOkeLqp
f//d/MFUT4r8k71+ze2Lfjwe/+r7dN+/f9fOfTeu974f3RS+df+P59ru4wX/
up7xu/IdMf6c6vv6595uCfQ+ydF1/z4/rrO36Ps1/or1yetRn4NYP29npOcy
z6c+38XXjh7peOie4vu1veOvlZ9d4XnVvv6uOhk+PnA238x/1eN33/F2R7cO
SieiX8Ij2k/PJzxe/RHerOdJ/n65fqKeK+LvST/Wnwdfx9Ct49rPbvwCx2fT
eFz/vd8g06l6nrnOJNGput/3+Q3270/9Vu7WeeE8Aw6/KN6r4blrd7yaB9nL
JTUc2J7R73cnbzFfpvijt7fcrTOb7dm93j37RxJdntk9XHxBPoe6H6ZyjOML
9T3HXzp6uGv/1/Gu792tM3A1f/PVejxze6XK1cdz4pP8eVc+yelXe/7Bw7/X
z8X72R9S4RDrvvpDsr2T4FjzOd7fgfqdvXc3T/XVeqbOH8HxZRkPE/2ma7yv
eqy6/bzup/JtpO9wer9dv4T+XPzU+S7uxrtnP8Gav85wJXys46/3EeedmdIN
0gOQnVXlCf1ewCOeEx6u8W/8v5unW+VJ9oN0/EP05+RsR8+OWx+3rOv/0+S5
uOoPcDdO39uJ6bzHOtD8dq9EN+J7e/7pse+/e41P6/IovIn/VHisV1+XQNsT
XEEP+BoH8SF7/B77I+r69+se3/kh4aNebs9504nu1XC7m/+U35++p+3NvfVT
0O+65zUf+hX6FVztd72/Xt+w5xOcn32c47lduLf/vMsvHv2HZTy5vqHDY/R8
1+5L/fb7iONrFb7CZ9zOb+3kANpnhP90fADHMX/n9hXtn56vIb8Csudk/j/G
49aN9rviuVpeJvsv+6frdx2fNt3ftM4z/S7rYdw+rfFOrqdB+9LR957vZfmb
9Krxfy8/8n6v5Tf2g7kqvzj49+fO282vxoX351LlZZe/fSqPXM135+3Y9Xo7
e9vdupXnejt6W69/9lMk+q/P1/usr6z1DO/Og5DjUj+/g/6T6/tsp6ars0/r
uN26Hvesj5/R94/P8VDdP17HXfqk/Ti9r7vqfNbvsf8XwT3gseKl3zzrukNn
XaLj/t1+IFl/MNPH+Ph3hVvfH+v3nHwb9/U5JvsS83c1nLJ+ptbHZL99gkM8
Jz9HXUcdt9q36Tv6vbW/Mw997Wfl6xVNr45e9evr/cNXuGX9v1uHejyP13rM
8KS3r8e9yzM44z9UX5LzAhIfvOIfb8cmOOp41vt8Dnf5xvU732NckqO7pJ9y
/ow07p6/v+sHy/l5dVzuPf1+/b13+XvleIL1f8dvsr+Lvkf7cmonp/nIuJ41
nPf1dU7+X+fh8n/O+cJp/pcpn1vfP571c6JjV+3Orv1XiT/q6bqPk1n/J305
83lOvpveH+9P88s7ver9eh76/syvmeXnXs/CegBdH+WfaR+7uhH9PmE8s97n
ODjlx49276o39q46W3f98dhPh651+/t5rRwf1eM5n1fA6TeO9ifecPxVTzdz
/bV6P6V5iFy5Ww/c5dk/x/nT1mO5m6ciy8/x3V7OJX6U47NjHiufPa37dddP
7mpeLPZDuJqPoD+Hd/3gmI/QcdC4en7i9B+gPAh0zq/51byrLrT6rzq/APb3
1/d1ngrvuK/Hxf5vCqfop7dfXM/XoeN25/+4OHs24V211/l9qO1UbtBxXPOP
mcfB07hresVxOgTnng57/waad0/XvH8N9Uvt13l9k/gH1VvHvlX/I5LPVC/f
89lObnP2GV8P3e3vfr04/se97/CX4okaD2S8Ed+fyvv0P+CRZ9w7uEzhR3Cb
+jnM2s/tyTP8TvHKtN9037LfRA+vu3ExPp/9TL/HfmE9HKd+Y+TnMOcranjw
uXR66ri/uq/68X+85jvFG/050rjVbD/bW4fYxxyn38Pv22c8V3pB46jpCvsr
6LWnz+x3RP05vyOnt66/k8dB4yF/3H7dnX+jW/fHeHzH9cyjTX4tvZ85n3d3
Ph29ovXpz+s0b4o7D0zXajh4fd36//28Keu82W6r+74eX14Pku+u8elsf6F5
T/mtGq7M7/Tr7v0dHJ4OODt9ZP9/rjvd68e17jT7IZBctPbn81Xo+kzzJ9Xr
6fQmH1/W9c3zo3n1eOCq/8y78gp6vwTth/Dh2p7zD8R9/V3Oa+3OY43Ps73R
yeM6HoWb49N6vPl41uMleuT8AZl/WdvFd8/9FPpOwT8pjk3n0ftHurogrMep
96fKQ1x/u3/OeWviPdpn6/gDjhzH4+SnXt6Y+4fTPHbPTcBnymf0cM/+4XTe
pvyXGwfhN8W70e80D8h6//El+tml48SH93w2+33reOO6m6+D4KfjrO9jnVjP
PpUXiX+J9xz+I/wi47V0WvWR8Z6r4yZ8kKVfdF6n/kkEN5IXZ+2cP7/Xc9MV
+MUXfHf5GHe+dX10HWs43M3X6faLi9uJcc79COp2mb+k+ej6Kn957Tyzvp3k
zJqvyny2k5vX90//coWb2lMVDi7+Q8fVyzHZL9Lxn2QXoavyq7o+U36xXk+u
p6Dv7+bxoqvCaX3fy0+1vHTXT/3dde98vhDdl65eqL6v91P/IZrHTE70+Rkc
3zfVr1J/RBf69SL7YdYTxXM3z6lfJek3SS+jcJnKA8ft3To+3s+C4NnrY3Ne
DYIzwVXl7B4/kbx2vS5fPKf1rM/Bu/N8Xc+vVa/T9bw9NP66PZ1n9tsjPHlc
vL8I8N0veDi83sOD7bfxnZquKry03VkPKOLkov3f//U//N3f/D7qq7zb72ju
N9LTC++/3u8r7xev/Jfugxm84z6fp/r8ZL25wqW/P/OtxnOXJ4b4ZcdXKfyd
PtfBv+cH2I+JxkvjIPpJ4+qf87mU8Sc6oP5C0Q/pHfr3M9/uxt3rjTW/svIx
jp/jOK64r/Hm3D6n8+zxuJ4n4s+If3N5lf3+q9fV1TViuifPf4znBD83PkcP
Ve6I504PWn/nQ+B9tX435aPweVzqdX486+dk75/7c/TyXrYfT+NqZvE9u/Vu
WM5e///z53pPV8o76PVa9fwdvlV4czyZzpPu6fzGvYuXo3Yxnvif9FJ79PVq
fmLvL0LXfr96vzDqt953Wt9z6l/5IfPweWgc/AJuV/HuOi+Kt815T9Z5eD+U
Gr7OH5nl+rjO+CTK8+XPrdpfnR8pzZvsGnt41O/zHl/mdez5HdYzxv2uvwpd
a/qc6/n246X9wvEfBGeF23Gd+73Ed7RemDuf/bllf1KCa+9P6vJysBys+ib9
Xh9fd9ev611147O+SM+j49uUjtL7BM/oh+RCx5esV/ZHVbhM4+HelTdK4TLj
Bx6vceg81/W46sep/dO6/nTxAzX8pviA6bjT6/d8t9oJ5nqJepzv8v+a1xdZ
7z9ecFE6sMf3Z73qVG6s7zPeVPjV/uTeb0XhSnRS+Uid9zQ+keiCPif6sMKF
8/32ep3s70t87HHPdc4c31mfu6t5ILneRn9O31UnN+vbdD8qHV7b3/eTXeHr
8UwNj2/SPOIK/OIz/nf7nPBMTc/m+SfouZP3CC6On52e+xl9xucX/VGcHmMu
x5P8s36P6y6680h+bnTO3X5Yx+nqQ9E6er8ZWr+1n1wnJNpP84QQHarbP6Af
4tvvxlW8K/8l5zVReCk/VMNzjh/W5x9fol8a70xPfdU/l/31+qvPZ0jzd3xx
9L+u976+tx7PN7hf63O367+j8g7Vc9/PC1KPK+srevqreg+yY7J+LOZF+iyy
B9Rwf3d9y938VbkO6yyeg+Z7tz4dy1szOWw3D6rP57Lihcer/V5d6rt+xVfz
rLI/Uu1HMc9v5Pi+9f6+P7B+n8bT82G7eciu1u9hP709OGZ/jhoO+/i0nv/U
b2laf9jRVcpbdb3ep54fgu86rox3ejxL9JL9nURusXrT+j1nV/7u1Y/mDyN8
XY9L19v5xXk/Jn0+owc+Lw99z8kX0/UFeFu/OYLfTB7K/rPaX/3dx2ueYjeJ
dfqy5tlj/zf6ns7nuOd9NNtf74oP5X1I+2Oqf4hx7upFYB1/pHn143D+hex/
X8/H78+A62w9nPzh4g3n8aG0j2Z6AsYDijd6vR3pBzJfG88dH6v4WZ/TudJ5
Hfc5fonep3PkzsX0vNXrw3mbnd0qxun4stm5mufpc/3NzuXVPOwu/sSfP12H
2A89PXZ6Sc4zNeNrNe+Ky/vnzu/Ha1zRvrf3ZDs26Z9qOP3wVHmqpwdnfSCa
h66zXmd+N94fydkr6vVhfsfFX8e61Pz4tL4i+TFmORrwna2L6c456Xfjf/Jz
6f1fPN6ZypX1Os3zWul8e/8trxfu7z8EDjn+mOCg85vpybLdpoZnPp8Ep36/
sN+SXnv87+vbOfym60Z6qV5f9YD5OD3i3fqVau/9OuG1Wv7O/k1k3yK/rxiH
0y/2z8/x6P8ET7cfiI7X/XNcRMDzuL7LX+9uPrb3xcNM14nW5bjkeJh1XTn/
RKzX1G7Xy2Ps56T99Xw805upPlG/T/zqHl/5u9e525OXcn2qen94fmFtf9ZR
iDjPVf/4i892d/0XH0+Fp8JF6Z3C18XZwr5C/+sp/XR6ZYUD8R/rd1gv29N3
f/6n+rr1/3zupvJXDZfTLkLxrOt3PjAuleqP9PxNhgfhm7if2mOm8TrxHulh
ddwzftbHO/byH/tbUn+1PML6t9k+ZH/J/vvOb4r5qJqPYP7J8VHqb+T8iOjc
TONdDb3D7+q6ExxreLq4OMYL9fpz3fPon/h+Wi+3X/rzQHZB5Wunfvf343Po
PXq+jtPlJXB6NI6r0XFovy7PVz9+4vcyv+76qf2Y2d9I3+/hc/KVs3M5t9Mc
j888HE5vT3IRrc8nHL6sz6nOKefHqceR9Sl0vmv85OubEV1d2//yqf3P5NoP
GB/l08/4qv5/XveUruTnqPOjflc4Kr54d71wX3/xXr1BX2ewfu7xH+DDF5wd
v076jeM211Hesyt4/yG90v4hfLLCy+vztJ3zF+nppuIltgcRHlU4k79tf67m
+Zl6fbX3Z3LwJP5H4TKN26rH7c9rf34pb7GX59Z5vKtuu893Vp+/d+c5nfoF
vjv/3y/TesQ8HFx0HYh+0PyPi89XROtA+q1POCX/mv5/zvvnxlGfO/bLJrgE
nPvzsus/OK17etIt7Zf4OiO/je2kjh7eoz9Eb+L/q3n9nJ8Y8a9X45zPuGPt
9+q1Hm+mQzN6NPXfuurP5/23aB8dF/aH2p2Xi79QejWjd258zKet7X5t7XtH
u+vxuStcOT9gvR6ct73Wuzp5n/YTraevM6bfJflT27v7evyc16qnp5Rvguis
9Wv4UeFG+GLveVqHH+l/h6ccXq7pReYvqP/6nMzrbLj9O+NPT3u4wwc1Pkp8
zrZf1dSfqpbH/DiVL4txEtxc/G0Nx2m9TJb3j1vGL/q+40ejXW9P4fxUhA+c
Hml6nut7nx+nhtvcT0q/e/X86/h0/HQ+CU46ThdXu47zQ9rNz0vdH/t19vvb
zY/9xOj72q/Ob4//zHxIwIfsEj0eYn3JTH+n+oA5/l3b5/qSq/xG+mD9f1pX
lPwGPD7Q9ZzxI8yfX8ujyP4pug/qfbj7fe+HNuVTVjg8XuPQ9XB0X+c506eS
vYbzG0X7KT08LpwvdcZPBZzn/nRX897N6H72Uyf4rufS8VNMT2d86PvqlvT0
gPUWtJ9negryD8p+WXRf46dpXKjOJ/vFEP7Tfmp5gP3aens826X1/fo83K9D
p3iFzq2s45eAP/APxl/m8az7dXm/0A8L7cj6HdqvxDdqe5KTnN05xjnlX/f4
Jc536fjnGi7v8gvNetRebsv6/1oecn5lpPef8sEfMd9n347hqPhbv2/s/Ul/
R/hf/b6IT3Hy48xPNe8Lwjvr8zMfYrSLOOvVDvEz3Ifx/lSfcjzPelidf4yn
9u+46l//rrzdHGe3tv/u1U7zGug8Y3xX/Uh6foP88rKc5daJ8hRSHdkYhzvf
156zHy3BT+cd/apcucJvX4+6juOR4Bjt1N6ncOv5LKaTsB8QD03ljX6/7MpF
5LeW402c327Mb0oH6ns673fjv3z8W+8XS/HAFE8/r9+n/dK8aZ4kT8T9Pb/7
U47o9bq0vl4f2PNfc3867a/HLznfF+U5c3q1Kd/6uS6f7z8SXHu9gq/36f4/
Ll6u0us0H7ObP9FJ4tepHc2vXneSw9jOtz6/6r9HfhSZXl6Vs508Ud9/9+z5
ysyHHrfs91vPP/OVxD86fDzFb+7cU1xRz7+wP2kNX+8/OKPzWW/Wy4XeDkn0
LNoTH0189V4cxt089pyfTZ9re+WDSC8T7ylfvcLJ+ZFdzW/P+tV6HNn/kerC
9vLJ1P92nl+R9qvbR9qfwu947ukxjWddZ5WPWC86pV8qtxEedt/R9+v19/kP
CR+6c6nfoX2zwv9qnlHWmzg9UO1X5uOOdul8vT5sP1nH9W3C46SHoH2k8L7m
F+vz283Oz77/Yz0+5790yt/63Smf1Nt1/HrTuGs+wflpZvtvDY+P9P14v/br
P+tBrvkE9P7n+D2iB8eF8sNdjcv3+5DgeHUfEh7e00PO87rROPT9WBeaJ+E/
Q89/dOeghuPcjh/j7vlgf45qftb3O+sny+8EZ4UH+f86/nj9rvdPVPj0eprs
R6zvE3xi/ITHAg/UfFLy37P+yI4O1HDy9Wod33rcZr8Ugvssvt3nL3Xnn947
Hms9DeX3Mp9X42G/r808vwT8HL7R5wQPPde0v9w4yY8v2tH3e72y5mfPeVBm
fKTGJVA9WT4nDj4Kl7j2/sGUP4vyKnO+OO2H4D6jE3n8Di+uz9nfsO832zXo
OzN7Avv/x3szvmLuJ+j6pf4+rxaP9XTsut9vP84P6Z/zqOg4+3EQ/ke6gP40
Q/4wwem45DjJfn86ew3nxevX0/vh6XVGB/x51Gs9f/ZLIbll7feR4ELz0HHX
7zGf4PwraZ/G+/15j3mc54Pgq/Gos/2V99k6nrN+5Z5e7l3xcXxutd16P89n
WfMbKu/erUfk6XmPt4m+X/XDfXf+V19HVMcz4ze9vQTWzfoP0vNaziI7lssj
5eMGHP3W96PfKf9N8O7bU77/vC8Ib5M/pJ5LkgucH3eNr1zcSKZnKl8dl7v+
xnP/QsLT9fveXqz7hvCurpejf8o/uO9N+Rudl8JlT1/j/BjJ3viueizev67v
h867z8MX972+jOswDuWGLzoenZfTUzp5gebVjyvv5+Ne62M5/ePHZ3+kf5r6
QXL9N9WL935gme+YnnftR7+v+LfH26ffas//Uv5gn0dX5z/bj5pHm/MpKJyO
y7viA7M85fSf8PypcKD5u/Nb9zPN80X8tbNTkV3qd+n7e/k3o/9HGr+zCx+X
uZ9ADxcvD/RwdPVGnF4jxn3mJar9led+fdP8nQSvfv7X69ETfXT7tX7vBzzn
ei/tfqTz25/vuf3MyVG6r/t50D7zdFnHoe9p+x5unPc3/u/9fz9gftkP3eFZ
wtcET1qnGn7ebqDz0Hbrd12dJdZD1fP1ec3p2vMzvj5pT79zXnPHD+v8Y37a
zo2/xlPqrzGNC2G/OgdnWqfoz8Wx1fPIep3oj+T5PXx0rrNee7q2K7eyfnLd
xzkOhPAc6X0JrnT+ZJ7Pev7sl1HDOfvfBhxJj6njoH1Gen1HB9b+uY5y9LOb
Z73/Xvb3rb+b49ziveB7enmK8qyRP4H3C6bzt/JhzJ8R/uj5NM7T7PbfOm9a
55NPdHSgX1fFC6yv6/Vz8b7PP7m+N/fzU/jHe05fOdVb1v6q7Nep+21dpxzH
QfNwcRzavr6ndo/XelDeVJ3nZ/vXe+u49/M3k56c9oXTV/bvz/2E6/0T88jy
SVzr5+e+p/hfOqc6TsefrN9/PBX+ca9w7/UXvL7U7vP+R2337uvRP+fzdfCq
9+G7/HvnfpY0Lhd/dlXfufbLeSOjH7I3Q3xhomMrfmR/ZoUv0aP1+Q/PGo4/
e42rrs/r/DJJPsl1caK902cSXqL/e3zM52GvPflrcb1eghPNR9+b6Ykynazp
4mnH03UkuUrHP+O3vH92P5+p/lzXz/FLvL7kVz1dhx7f53O8wj+fn14fNvej
7P0nMz2j9a7v2c+Z4NTbZWg/fJPwOcHPydH9+WJ7Z78/2Y7n7BQ6D+2n1svN
47VoXDHP3XOq467bT+NgPwQO8/M8Pde0L2hf6/6o8cJcP6rXdVwu3/tcn0l4
sW/n/M3Yr3P6POalcNb1pf6I79zTp079q8mPRv+f+4O6ePwa38/tEev18YLz
SvdJv/7z+P/13oy+T/kGV+/D8Y8Oz5BeONNDooOKt0hPWn//anwg26vpfm3v
8zfW7wVcuG6w46NVzprul35c+3EhCu91XTPecvPt14PrefT0SPG792td9Vzz
vLJunjP+cWoH/3i1X+E9jxvT9sdtrm8X45vpt73/qMKb2uk5n/LBPf/Afk96
X/e/b/es9RGsp+/9P4l/nePxgAOdd9ovFB/Xn2OXh/b0t6L1d/q/6If2vf5f
wyP7iVL/8ZzOtb5P9IieKx9J5+kaX8p8l8M7a/tvE7xiH9P+Jbp9z596aucn
/pT1iU5OVryi52kPj2f6NjvHHJ/j6GrPH7BdXeE6a5fjfbQfsgPqvMnOv87n
+9e6Rn6K6P/v//of/u5vfh98N8t7zq+pXo9vUv7Fev+8K64l+6nW4/L+qdpu
pqe5Wl/kzF/l8tR83v9I47r2fZrn1bqDme9x8NTnDm/X/e762XL9JZ23+/+4
fbzGtZ5fpfM+36KOG/Dfj46+Ex137RXvEJ9I/db4wtvBCB/X32N5j/BvvS8p
zwjl55jyS6yv7vklxjd7+nH2L9X3e33P1XofXLe63wfOP5PoQsZfut4zO/77
44D6cfJ+iX4Az6b1Ir1ULy/f9yet2+u8vZxP/fX8IvvRK1x7ODn5LdvT1/fZ
v0SvGrczxeMOz9TtduMDXL02nyc91oXwscNjNf6m+Kqpni/jQ6XPs/2s+kDi
Hxn/1/uL7Tg1nFw71oM5ea4eP8cN9/tgjhfd+Yt5ER3q7avOHu/tINFvb/eI
cea65tM8oD3f9vHZ7sxD2F/v1q/hPKPxnVVvp/Tq67Tvazx+N54qxzXR/Nx1
3TfTejfZr7eW4xnfA59v5ZEpve/3v/K3jyS/xxX0m8/1fYqT5f9Vzuv5CdJn
eXsJwb/Go+w/0OuVPj7vOY4n3uv5kliXq3mu1V4w18M6e0h9nukc+fjsXu6b
+5e7c+38Mx3fP5M3s56v98u46l9+N++1r3dPcBD4P7Vdj2+m7XLd+PUcuXqq
7PfuxtHzwVn/4vj3Go5TO+XUv5n8mjm+Z31+/l/H9+z60c/rENT8ifc7Jjq2
y//r/Nf+0v559TfjI/x+O/5XfT3Fn3u/WX0+w9Pz/Kv0XaBjVj/u9IKGf7H+
euv6MR5f23m9JfXb0zPOp9rj3VyXQ++Jj5rxU7xPddxr+69f50nPY33O2N93
ikfrcfC57PexmzefN8fHz/CDzwNM567Hu4TvCb+zf8X0/B+XfX94+k49z2nd
ZG/HUX55HYf3p1X6RfmJa3jl8388/zbF6Uz5qFV+Zjv4tL+r/rQKp15vlPnQ
mR2I/feIb3D8guJPZ4eoz0+Op1E4TPmDz/8TnOv96PMarf/zPtP3a71Mrqfg
9OfaL/HVbj4zfLJfT2GKd+vzwf32fCbxz14fX8/v8aTvqJ5+up/o/8/r63tT
+ufob8yfxkHfIb21rtceXvxlwqN0refB9i+99vLdXE+t115v7f1Kez2Sr8et
79H5ofPf41vvl+/0uOt7WX9f6/Gd379fV91ntI67eO+4nHp1xeOKb/T5Lr50
+G223py3mejoCs+cF5v0lD382b7Wv0/v3c23zvlg99aB69j38Hb+vEz3a7p0
xgUJvk7z1nlO7QqA31FfSvN39CbgQ3So3y/kD+LjwhTuqq8nOtHvl0wXdL1V
b6j6h/X9vN40/k84pvf6ebI/lu4Xoju9fDO3D/R+v7lOBvldOT1Jv3+m/Jra
6/j80Hlb+7+az/x9cdE6Loen6/dJ7/HxWqfeDni3Lqb3n9X+ZnjHx/nV3/Py
jMNv8Xxql3R86DqfbNdd2+XxaJ3OXXmF1m+9v+rnn+soH8+/Tvu0x4NOv+v9
evvzz3qlXbv/Oq6cd6nHR2e9DdqPs/iibF92/C75TSl86Htuvx3Nsh53mq/m
s/0LnoQnnd6ufp/xFJ2Lqfx+vPab17wjPrWOU1U/Ece3O36e8+c4/ntdrzne
Xv/3eV/re46njvZTufy4n8fl0rxILovv7tGtvM+jH4InyV/EX9Tnz/v1yv8/
1v3M+RSCj55rws+O/9FxTfWOx/Mcx6rj7uHNeXePvyluge15ug+iHxf/4fSq
x2Xul9v/z/p7s84JvqTfdH68Pbwcf+jtaDqeerysB6z79fVWZ3DjugB0Xup9
7vXJ/f7m+G4nZ6zz4ry07twTHe/52V17us9bq+sQ8N07H4zXSB9C8bL9Ofph
009w19+I+HTVh57y8ozvPs9lDZdpXdgc36H/T+WHFU6PNK5+HM7+QXolkovY
D5/gtZ7T7H95zc8tw0HH6/xhiV+c4cvYZ5qn/+fIR6/6PNZvz+w1MW6OA9Bx
T/N1O36h/v9qPRPGpzp/wm9TvLr2y/NZx6f6BbaPkLzf6zmzPFC3z/jD6Zm0
ncIl+lN8O9v3AUf2w473dvN7u/+jn/X5B7Rz+qwTr+n5onVe4TDPy9zvl7l/
9PodL/8o3Iieab+9XtHrs4ie1fDK+GPqH63jrunF+/Li13jA+ZWynyWtI7Un
vgnwK8CT6125fUj/X9XPKd7Q/13dDG3v9p/D07RP3X4/bjkPiD7X9ZvFj+V9
QnyO9qt4Uuf1CQ/pJ9r9+gWnyIMT/f7lj3/1i9/+459+tp/6Tzu8z3zi+h7Z
MbJ/ZFw35YkXHGd8Ic3net6a6fen1yndmdEfT3dkf6F9rIef89/mvJqwrurX
av1+dZ/QeHbPd89/5nhuog8zPpP9D7VdT/9pnVQe4nOrejmdL/Hb9P31/4eF
+1Tuh3Njzofz82U/Imc36sfh+cLjccbTNb6exmHN44mmz6d+wgQH0O+O7QBu
fAov9e90+LJeF+9frtf439UfcevS47Gr9WU5n2//nn4/51WI9hrfHfNXeNM6
TuX4KX1wdIH44d3zR+vs/Jt7v2b1W8x6VTffGr/nfa3jimsdN5Hl7Pq7DPcp
XqV1VrjU+5ji7Z39lfCV95d2+szoR8ex9kN2JuKjOJ+wo0cEJ4d39Z786XVe
hOdWeHl7h5M3P7/7gvNVvHHc7+c36tvnOlYE71kdK6+nruc1z2tG+3qFM+VJ
ZfxA+F37c/ITzYvO69TuEP3N4M1wP64uzoTiLThfj47X5YHReTr8qPPXddH2
jj9X/d36/9V6AI9XPzoP1VNpO8EXaV+AHgrlPkfHej7rlAP1/74fd845b+u1
55n/dOdznY/PX67vqzzX81lMp8j+dFw43mgmBzxecN6LF7hfp3aKl+Ke/OWc
P0jP33m/Zp2Py3s+40Oy/3Lv507+qFnf3tv/8zj6fch+1eRPrXSL+Hn9HuWh
6/fx++LY9f+e7jn+K9t91++RvEb5kX+qOLNsT6F7Ge8z/r/GV9D/J93v82WQ
3SfrzXbtWaTfJnjsXut9wfUgevya8eKUr9bn9f+M36Zy6uc92nWcPqfHq5x/
orfH8b6e4lF4H/OnE9wIPzn8E/0S3z37TvYj1X56eY/yKvm8H/pdXRfHb9E5
ina93Kb7k+MadF3i/d7+djXO7l31tH6J+7iHw3ev71MeRf2OrtsuPlzfd/7M
nL+L6Nr6vQ/MS0/8DM1P4b/eez3eFE+v+yjbx/r+fB4M2le1vsH7TRFfNOWj
Z/w06ft8nipavxo/Zv/MaF/LSzlOcIUT+73Geu3ZSZwdkenOVJ6u99tVf2vS
GzPf5+SXlQ/M9TOUjsH5ea79uXM5bfd49RvtnD74Ez6oV3TybY8PXd539v+O
5+Tv+Tnu1A/Re9KDzMaV5R0np63tz3Wp833quT3bz+j43bhCxvMKD2fHoO/V
4+O817X97fFc+81+rwrnz3G94LnL96/9vi9eUOGzK8eRPDdrT/gj07MaDlnu
cv6vs3OW45Cn67Qn73FebVqf4575kfrK/ts9f8J2svW9rBft9Y+ML2Zyy9ev
93s+z+WRD7h5/+6eDk7rN7BdcFdfs7Yjezf7zfTn8vFaT8V/9boEHH946rg1
nr7WX7Gdwp13hzecP0nf/qy7Sn4YFD8U89JxT9cj1lXhOaWrPX9yt15F9p+n
9erxovPD9/V1Ptsl+rZL52Z6h5zHRdd1xreTfJzraNF8aj7X6YlJv0zyXqYj
WhfCwbce7+6+Jv/67DcS7Vw8Qz3O79L6kt/5Oh6ft9udUzg/uK/d/t7jT/b9
isjvysmH0/Mh+9HSzZ5fyPJd3Pd+fVnfUMtvu/KPyidUfzGfv5p/znkw4vtG
3k7jWOH/s9e51PGv+IXjRpxfpcD9WcOL98mM/r0vvxF9h/D63fNNeHR6vnfP
uYPnup6Zb56eS5Wv9vC00+OqXjPnDSQ7CsmHdP4dXdP33TrW52Xu3x7Pp/n5
ezg6//aT/s7iJN1+yvqueO74ZZID3LzdPB2/qv3O+iE9l/MTYDzf05foz/uT
1/4ojP+cvcLAy9q9ps91X874K5Kz9+N23HvuXOm4r8bZxHg0vraGg4sHIf56
l69jP3OFR72fXb2Nufyp/bnxU380LzqfK9wo3zH5zTP/uv5PclLGczV/SPl1
if/LeIn8pXs6l/2XCD7arl4nhq++3//P9QqcvnCdF60T+ZHvx4/o+OC71j98
ir/qdTzl59ATkL5sxT8e7/XzInv2PM9+PT9tz/Szx38+PkTnof/3eOhd9TU5
X/cUzx732Z7W86+5rvKufcXxF8R3Evyn/OBUDu3Xm/OaT/Uhzh5Ics1xcfX2
iO4qnnq81lH9RGr94nmeFG56X+vfMn6enhuRO9APkPQa8b2pfKTt9/w1NG4h
4yeVf9y8Z/7hOc6l59fn/KBbr/7cvKvuBMc7u3XX87j26+2HU3lI4efwTA1/
yi/j/bQc3tP50Hu9/MN6Y+2PzvVx9X4DTm6q8QPpTzzfpXRxWufR+QnSfq/H
r/N8VxyK6lUT/kj9KX6kc0rjd37hOo4ZXnXtsr854b163hyvMtObnXKE09/2
6579DWl9Vv5c7W3Md+/x8R7fTeW+KT+scJvJGWedgMjbFX4NK/6c+tN7P3p9
3ssvrn7s3Tq73q+b1iWeO3+9+vvkj531DfodOidOPqRxEHxcnb6Z/PJd4oN1
3DEfFwfZ4yX264X5Wb0O7aPod2onVjzY2wWy3KL7ifRves5o//Rw8vVO9H+C
j+rf4rms81CvqOfc5/+j7+t8Zuef6945O0GPz7neidOTDve55RPJ7rmnV9R1
mseTRP/EFzq49PAn/yHdZ3lfqlzm4Fnvp++eit+cvw3tI4Wj3js49P26+Gef
f8Str/KdxO9TfxDvOPZbc/3X4wz4ZP/PXs8wjXsm+fv0P9FxOXmingfHZU79
GVS+oe+59Sc5Scej44j/6/1A5yP7HWq/dE6i3V5eaY7LcefvuLCflYHjZzvP
X/fngNq5+tasHyI/8XXc3j5Tw4X9fXu9i64r1yuA/Yb4lPDRbD9kvKjjp37q
9krPtb4s16U9ruy/TnAivEP6Yfo/vu/wu9NfBFwdHB18Yz4Kt/qcol5I4J/r
Nfb7P9ZnN26X8Njj9X2dV69fznlhdD2Az0I5UuHvzouuC9EdHV+Mx8g3dt+t
35nz7Xvnl/Via/85Tqm+p7p0Hr+s48jxIzpuVycynpN/DODHL+u8uS50nBfC
f7re9Tjnec8cPnf6zR5/nXzlrlxQzzf7M1DdluN6NY5iN39N/p/khnofz/W1
K/zmfvP6/bo96zscPFZ8meUOhVf9PO8TypOh86L3dbw1/uD4KSdnED/u7Gf1
8zyOuKd9R9/vv8v6xf5/PgcGH3zl+OR3X4+vcv5yh8fILkLncXY+aF/O4wB0
XxI/0dPf+37k6/i9fBvrUcPx4wv19zke9Xd8arueH7/q9036tKt5pnLdpfiO
i39Zx8f+1P0+nvoT/vlz/R5dOZ953S/prznf0t65mvqZ+7yEyndEO+U3lB9Z
xznVdzu66O2nUzipfaHn35hufN5bP1GCL81jGifk9HvOju/G1+MzH1fU41uK
q3F29Kkfv8VPxk7p6Pncj1/hou/38VOsR9F+la/Vca39ev/83i+f9VNuntL+
Sd+P506OB/hY+kDyBq2vwtPpn3ReV/3xnf7juD4SHHv+e78Ojz5f56N8BPtd
OXvS7NyTPd/nhaf/Ay7ER7nnx/s5ziPGSfR8Gl+p66DXWXzlXF9fw530qFM/
RD3nnF+e1nv3vDu/PYLL8dznq6/nzfb4GX7MfsVK53r6xn5W6/3duKWs76zX
O/vV65Xyuji50PGX5Dfr/C/dvtY4o2t1WXh9dT59POL3Ur/5XD+Sh5x8dNzn
esoxPnperxvx9/P8Czo+4v9nfDbTCXpe89l3660z3trlL6b8qMN7vRzk+RWC
e8/HzPOuR790/rT9rE4441XHr/R4IuMTZyd1+CjeUzg4vrZeV/b/r+HHcUn6
3rRd9Kvz3eMHc/u1Px9f0McVZLuLrnNth8n1LHQdiL9zfIjjk47LNH8X6fUc
P8j+++v7apc68xPW8Ca5cN+uR/i27t/r96d6t3iP6J3zg9L+d/n4GZ/K9Xvc
VfEv8TkuznaXn5vpE+dyZfQzlc+VjhK9rOHt44HW/zMf6+KBXP+9nJ7tCjTP
Hp9zHeipPZH0TdEf0UvSj8z86NkPT9cl3uvjXN4Vz5n96LV9Dbf7+Rkc/aB1
W997ABx0XN8mfED+1zM86e0ye3wm15/r+bdc95js+qTHmfkLM52cxhn18M37
Xsep79N46v45/p76n/Kp9b50eieiL+rfoHhA4Ul+wp6Pq89z9meu12XfP64e
h7O3+XjXqTxbt9/1y1d/fK7n09PfXM9H4Tzdn/W+oHxynD9tj5/1cTf1ume/
8ei3x3M5rpLg3fMDJ7805afd/yrvuP1Xryvnh6Z1i37rc7VbvzPr40iPQevo
+BDST6z9TuNivwH6le2Xzo7j6MuK93L++7X/rC+Nq6Mj6/i9nwHto6nc4+Ks
dJxTfUwvz+Xz5/DIjH6RH3r2r+nxU6Yzu+uh60Dw3pM73b71/vy9HcXbdfrz
7uWcab2NWu5hPa6ztzu8M9uHH19oHRRO1B/Zg3t+eurv7/UJa3v2a1b9OdFT
N+7jSv4cZN/L9V6dntZd1/mc/tPxParbsT7n+IaeL/b+/k4vX5+zeV2BGo+q
HfDUY0/rf6xXr6+lca3rvusfyXENM3qpfK6TL/z/U7mI4OHaB7x7voHtRPF+
/X1fH2V97uJAch0Nop+9fj3HwfZ4P9VHgvmy3DnTK5z+qwqnvq7q1fonrP90
enz5/8cp/ryKd4/2lCdI5VbWd+r8e72iP08k5071NK7dtF9H1/p2Pq5oHQ/b
y4//mb+K92t54Wo8ku4Lv/5E31Y4ZPgpPOp96uMniG887r38bvThr3G6fmu4
en+N+N/ZR3r7yxxvXNWXf7bH80P40bVb4f4Xz5XexTqr3/7P0H+n5od8PIE+
7+nefr1j/d66nix30Hdon6zzYf1ztHPy9tTfn/bRNO5yb//EvuBx0nhce12P
2X6g75A/HsU7Z7o64ztZb3Rc7+Ypc3Ez5M9H/n1MB+N/R4d3+aYpHurx3359
+d34pl08Kny+8S9z8Qn5HNTt5/FF/fmndc91QQhP7eHhrO8nuNXj4zi64574
FWeXZHjP9j/jrxm9YLxNfGWsU7RTfc1x9Xlt9FrHDfl8d/X7fxC4UlwK+7eQ
3q2Wjzkudv2+97Pv58txn32/Uzz3eMFrhj/mcUZ1v4QvWP9F+7fm/9ifqJ9X
aof4xsGV4OD8g53fGckThK+dnL4bn0Tzc/VGHD+q/ffzY/2s09c5eNTPs5/v
lH4oX7U+/0jzmcYj6HszfoH5Jqdnm/JPCmc3LpKz3LmLcTg+mM5XT1ezHVPH
S/Or90uOo9Cr0pV1XFQnleAZdNT7W9X2QG9vcuvh1rOXG/fjB2q4unYuPovX
pz6f3q+X2sV44vk1vxPOB97vV9bHKTzj+z3+yHE16/sZf8/oBedLJTzs5Aji
o+p+Hd57JHiF3UXmIXCYyodMd2K9dL7X7Gdq12I/xBrv7ucR7vGBj0vu6e6+
P6MbVw3P63FE9B2yr9VwnccfUH8q/+i5nu6nz/G85jfj/5m/0fnN+Eny48nx
vNGurkvq8obN7ZYkXzh5YVcOcXAnONXrOo2bcHjhkeDY8+M+v1B/7hWf5zwW
hNeIL3V6NMJLzv+Rxq/jOm5zXZ+pfrqGC+sPavj7Onr6XNonOWQqf0zlkc/n
z3U8Pt/MXrs/E76c4uW9PKl4cObnfDf/A8cv9faSud+8zrPHHzQeto86vNrD
z+NpPT+0/1x+uxl+nsdD1uvE9SBo3PW+Znyn77vvkN3T8TNEr3t4qh8g87F7
+SDYPujk4RpuOS8j0SEHP13H2bo7//QcJ17PI+cNnPphGv8G1AvEutZwZv9y
aY/2kqkcVrdXuyfLWY5/0fV1cVOzeKUPgWOun3Pccv4hJ4+TnaXHq1nP4Pbz
0Szr+Wd8zDT+yPnvcXy6Pndyzp48xHWzCH5r+/34AIcfiV47+lPDneOSdH41
38X+Q/15U38i1oPS+Ot1nNeFmPEXOa8L0R9X15X4qVlc0jRfDsWB+fgEeh7r
M6NTxE/5uABap3ofzOsnfH7/C70fz6fxHkQX+ngBhUvA99dpXev9wHWVdB7r
leOidN7rexy3Oj2fn88T3q+/m/Ey8QfrfM5zXvOHfC6d3NPLA+SneurtSU9f
w2Maz5TtJOt3czzTUD8G+4rhpeMlOkR6jXh/Wj9lvV6tG0R1e7LfoMgJr/E6
+jHVr0S/U353l4+u5+v0eoqPvT6ypwekp5jXU4BzjX4PBBeCL5zfJ7WP+5m+
eF4HVuFX81uqd2C8QnhpnRfHM9R4J/upKXxrvzWOf9D3+/2V8W5Pz9hvYv2u
rw+zXl38hbfz9nhyPw5B5+Pka+CTQI/D9Tim8pbO46oe2sk3Og865z29ILzA
eIv4xtgv7vu0f457739G/6/jzHwd4S3yr9bxKf+9ts9+8fW435UvbepPT/es
79qrt+398vrzzvGvPV4iOST76caV6CTAEeVah5f6/31+lXo/fpvwVV9nOsvV
u3jSXd0+IP2vruN6f+p/V7/9XDeG5K9r9gmfJzTgWK+Tl+/1OcmjcU/61+l+
U36qxmOsr6F1VX6sXk/K++PjJHr6RPp6trvvjWNer8vxa/X6cv2V+vvz+Ic6
7oHrTTk/Hlkf5MvWcczrr8zwYx6P+z/mTfuo16sSXqL8MpR37UPez3jfnQPV
9zp82t/7Oga072O86m8y4yPZnkDrFP+7+6t844yP5PoM8d7Kfzye8T7lCVu/
//Elxk37QOfdrxfRJU/ne/6R894RHqjhle2CQ30d8mE9ffDxBHV/OW6whjfn
daVx0nkkPNTTm5Pf7b8ztQsq3LJfyvR81+0fr/UnPrzeh9kuVfO7HOel34lr
LT9kuXdKN6b4dnbuFN/mvDJxreHt6hyzPrt/z8c3KJ/o+KS1f1/Hpj73HA9J
52KFQ/afm8FvX39B/KHAw8qf03OudGLaz4wv/s0z9J/K9/zlj3/1i9/+459+
3nNc81Qeq9eJ5Y2Z3HLijcAH5L+9a2em9ajbc5yFvl/zb/t1Gcg/ooY753lY
12G33pvze8r5bns87P2lFJ4El3q82T9N36/pE8dx1PEbHCc1s4tcjUu9Wlc1
+1NCXpanjoP4C6c3d/Kpzm9XL0R0dW8fk97L59WZyUWcj1bhPPMD4zpRe/LD
iVe1vavz4uhgv47eThX99uvm/abrdfXxxm68Nb9/0tk6TwbHVa3tiP8P+kn+
T6TXIDtyxrszvQP7O6ge+Gj2rrwcHL/Z04Up33Xawx3fv/5P+f7/WHGtHJ+g
4+7n7/IeMf6MK8U7xXt9nQfNC8R42NCZxPfV42O8u7538gWUX1Tmkfg8gvv0
2vvJTvO3+bwae/otjguj+cbz3bou7jzq96Jfmoeek/58EVzy/qZ6MSTfEb1y
/NE67yzvq92ifi/Ls/o9RxcB7uO44ik/9Qm3z2u2v+k4anx/rkesg37X2fkd
XaL+ZvEQLh8h553a44NZb098MOEzp1+lOKZo5/zHtb913bw/kH5H12dt5/If
ZDpIebl1HL2cd7dOLvmRUpzE96/vKT3T89qfi+w3RvS/x4cZniscp/USWB+t
33X0ZybHOLvVvM5b3479sdd5T/U5vp4X7Ttqr+slfO5rver8GBTX9PF6r497
yXGVNZymfmNz/a2OfyrnHlfWm9X7fTcvqfNb8vmW9RrrQnnfXDxRrxfkOju0
vhQfpXDRflxeBYrjOf73+cIV/r0divYrxf1y3Eu//9jfch2Hy0vA8Vc6D1g/
5H913O7q9FquXsx69XmBiI73dNLXZ6nndcaJKHz0uz1eyPiO5tPzHYxn9buy
33+c7pP++y6+JMfFxHu9vWAq53DdkPp+t+6w4ytzvVmCE8WzOr6/308c70Hz
OC4a55H5957+kXyT9TJkFyQ5S8c7g4furyk//a66PxzPu3uuqV99z9Evw/eg
3ZLoG8FjXS86X3rOfJ4EN079/lReWN+b5yVyfGTP52U9i1l3gWvO41qP633x
VwRX+j/6UXju1rFZr/N4khk/yP6ovT5A7Tjvyn+X4zuJThI/c/ecD8cp6+Pi
TTjOZI+/cfzRPH6B1qtvP/dL0v5JXlQ4kb6hx+fX62X3cP94jXNPfnfx6BwP
oeM57ikOwvtD1fN9V563E7+teJjryqxXly8p82v1vud4LTcPWb8fp+cv+nN4
p+4n172L/ly+tnocHo84vDbFI1O8AvebfJb3866/7/NPzehvriO+7ucTr4sf
hOXT6DntE+J3aD/06+7ih7JfVjyf5VNjO67CvdcL7OtNp/tdx1H7y8zzZbnz
39t3uC5Bvd7z+kq0Dms7ltd6fZzDcy5/GsU9Zf05rTvpAQC/23w89b3K48RP
e778uM7jDHb5xil+Xt/3cV0E/3i+jp/9oQleNR6d12uJ/np8k/0RaH/X8Nuv
8+fwzfo+061eHsvxYPodmm9/DnJ8bN0u86XT75N81vPrc74r4AHrKfD39dJp
nLt64nperq6X8yfj/U1wqv/39TV6PWvWe03jaZT/mckRlI8v+9fpOtP+p/mQ
Hx7RGYFfgivhmx4Pk79L9ut39voaP/o6M/W+8XZ7eq77j/Z7T9/4HOm4XL9H
s0zHFC49/X5XPfardZZ8HQeHV+r39+PIA546DvLj1+8HPKfyKOFd4qPje7t2
hOP6eO2TOB9UX8flV5zyYT0/P6/f6fj948L5NKnf9X1v96Z+ans426nie73e
b7eeG+Pr6I/mT/6VFM+geNDhc6IDAaf6PFM+ZdLLevm3nv9UD0N1yzLedPZX
p8+jdSK+eMZf/grxUi+3ZHtmfH/XznFcz/geXb/1efZjojiZep9wvlvHb9Xv
e7zr5NV+fZw+hvKgsZ+frtdxYf8LpWM0b4Un7ae1HdehiPvabzXLPaRv+7wi
X6bjn8mrr/H9SO87uj6j81mPo/uA+qvxPeWl/PicH9lrMh9HfN3RnuKmvL2E
8FS07+3QH9JfjkNweoS6HceTEV0hOcPxLf15d/Bxdls9lyqXsn5O4dWfI86f
6eiDyg/6fZefcf2ex7dO3656vXrdM5xoHxCfOtvPtP+9v860Pg/h+/h+rwdx
eNT7V834Ho6foPV284nns/3962f0H3k+ov3f//U//N3f/D788v15n8FvP56M
9sPsvR9e81O+zOGN2FdO30H07xNuX9b1mvpPe/wNclXSP/XjpPxXzh/W2eW8
/btex4eF03r1ddLiOfHtFF8Q72ne8xofnnCOfmZ8PMVLZLsr4T3HlxP+Jjw/
jc9SuNbj5HxOul79/75euV5d/Jabx0y/kvWtBP9ZnADLsfV74Rdwwr23W/n6
GDTfuv03ANfs5+DgNtWT1fvE19dY8b3COddjUbx6XE9/Vh1Pz0ed/nA0rx6O
LPcT3o73NC6H8LXz8xM8jHqTXj9yPz6D4N9/9/sX/tB1XvGEz8ND+9P5l0zP
ST1/F5eV7UR1O19PaPo8+lu/z3pxwmf1vmO/xvX7lC858xO9/sbZ5eb+Bp//
4/nYg/P8fEzXrT8n8/o5+v1anmO/7H6/q9y/Xx+D2h2XHM+5/j/Nz3a1jvS0
fY77j6vTP6i8P5ULaroX4+V4jlrO4joi63zmcRsKx5ovjWuO/9J2VO9JxzXj
B3Mco5NDpnIK4Zeb9Fbg4ePu9L2pP6b2X4/P17mp3zv9Y6N92H/rvIzs/z7j
w0jPmPXBOv6aPnIckH63b/e+/G2EjxWfK77X79bw8/X7dFw9v+D9gI/7q3I1
x1frd2g+ND6iD/17HL/Q38/jFrQfaufkSzf/epynn4Lib2dn+7z+OB3H1es6
7nkeMacn7dtzXJXCo3/+8aVef45Xn+ml2X9S5yt4zMoldO3l7qv51045gPhA
7fdzHgIP5w/H9dAUPjpOJ5futae62j5eZYWjz3fu9CX1/s1yua5Lz7d6/knX
c2rfWO/ZX96dix6/cPyDzrOPe+C6CDP6xPYqgs+1eALOb0pwof1F+0nhpfCk
89THDfD+qdfL11s18obgcx+v1sN1nv+z16OwXUn7r/eNr8NF+7XHc2w/c3KX
6+d4zvUzanizXZX4pPp59sdUfVlf793X/aNx6vh0/eK5o3u6zvV3XL1Mx/+S
nEXw/5D3d/PGu3g5jtOq+6d2nu8mfZHCf4Wbzzfgzvf6nOpJO7mQ46vqcfM5
rM8Xx3PQvKI/XQedj7PXgL1pTNdm9qd5fCnh1YB7vz7M99Xz5PiOWVzHFG9M
8ZCvA1PjSa7/sqef8/EING/tN8YTz52fZX2Ocxya4k/iw9f+VO/C+iHih/p1
pf6yP8Q0rqOGK8dP6JXqx8Q92anrfe/5oRl/9N1rHXo/6kxn6br2fzVeNec5
re9/ujwj2l7H0evt2b+K+HXnx1jDiescEF6T52O7vZv/+j7jreG4ZD1P/xJ9
r5dXT398/U4f53a+F+PYqwvFedmd3kDPp36/3w9e79jLj1y3oOeHs1/c+v68
LqbjU3WeOn7n/7HXPtv9Pudj9IW+bsHaD/Nl0b++T3JB/X7Wlyl89/i+aVyT
+g9kv+x63BQPd7XebLY7u34UbjN8dj2OYe1P7ZJX43t/QH5HvxvzndojCG/M
4O70Fy4PvrdDOb/VaV0h8gfT96b2cP1OzLdu7+WoGd/O9sqpXPR5fVK7KR2v
v5fzFEf7Oh+vjz9Q+PVy3ry+gWt3PGZ9hNpLSG9F+Gimv0A7x2f/ocfIcb06
L4ID8ZFEvx39qvEK10/t5baML6f0juwbJNcGPGv4U54SroNT74dd/QbhVfK/
p/yQui/+/Lk+1+s0v3LG43281t34ZspbR3jpbt3dh8Ah839ah0LXkfh9gjed
h3qfXY1TduvPccl1/9vyyWu+8b7jA6nd2s/U7uLrvq33Z7zZ+j2yp7Hc0PPj
itcfLziJ3ui1TmtdHeITsn9EDUeOi+7lRMcvO/trtucQHiT+d733+cF7uYXw
HOWTzHSE9L/O/qr39Xus/3X+wyu8c72sHr/N6xnT/1O5LNq7+KHoh9ZR7Tq6
TjouR6+I/tf/Z3upwmXGv7A+rob7lJ/PcbQEZ7WHTPn23l/jeh34GX/6ncQH
nX6tdT0yrp9A8lW9n5x9g+za2d6v7Wo45nzK+h34H/XGej/Vl3ze/0jzIDpI
9L6Xi1z9Lq9HJ7jX+MLVfdz1p3H1DTJ/rfV99H/y3+rPia8bcrRT/zsXz3WO
v/+f4zlqeLMfseIP0s8d916+p31f78erdZp8fY4ZX5vnR+3783s1foTz+tXw
OuM3Iy/FKjf94kt8n/DU1O4LfP5T2zv9k8MrKn/u6YW8nul4nPlbGqf+v145
31LvV6R4wMe59P+/Ky8ex2kRXGk9zLo8Xf+OD+/PBeu9Zs/n9SBmcpDuI8oH
pHKTk7vm8RU0335dfZ7EfvyZ/+/pKPFZX2M/u/ztCi+uy0B8kc73uL+ad43j
Ker2FEfBebTcOq3/k19GthfW//u4snr87O9F+835tQD/lebn9pWzL3++h/aw
PX48+4tTP64eD/Q/xmtTOr7+v+t3Mddb1ngpy9cEl9rPm/OG6DrO4lOncb/z
+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
v6n3GdejmPHned2n/a3z5fwQ+t2+nfdfdPqu+tywf7nO96pfud4P7Y8/0jyo
Hycf9HjL1/F0/F69r7heQU0nzvqkLs96v17zPOef85f3vf/52p78bDI9oXlM
7QY0zpqv4zxL0/5oH7l9TPtL+9fxzPpjfOnwgbaP8U3XJ9o5flnHu9fenRPK
I6LngfBW7MvHk9Z1bZfPFe2z/nxl/Yt+tz9f5LdNcYiM53V+tN/r95z8zfo2
dy70PacfhHml+RJ+d/rq9TvZLkV2XB1fjMvtcxrXTO7yeDb66+1W7jv+PDu4
1nGHis84777qU3q9JflpZ/mwl+OUTp54c4rfpvg14Bz3JP8TX9LrFTguVfdn
rbfM/iy1nK3w2vfnrd8jO8xuHWWKO5/n76/xBPkjZv1Qj1fZT0r/p/Uhe9Ns
Pt5/mNZ3xYO8X+I77jwQnov3p/xOPe55XaRoP83rP8WbTq9Srxv7L/ZyyzTu
OvMpCi/tfxoPUbe3dSPTupCdgp6v46Lz6uu1rO97/9p+XHm/9fYDhRPj0XXe
rj60X3+iq/U+y/5vLk6I4HrcE94n+vN4fX9GP+N5zu9H+9fFR+j4Z/SN5bup
HWdtx3rsnv/IcVoKT/e/zsetp+MDCD5rf/N6Aev4/Tly9C/gHfcEZ1oP7Ufh
NcMrAS/yO97VF/i4xfp/lwfb2bNPO0j8r/pmWb/P56e9JfB5fLf2J8r2r117
h8q1CqfpOtRw8XWYFH4Uh0T8iONDZnJqtvuRfKL2ax2f0wf2/sjz/NFT/2OV
A0luVHtcvW4ub5vPtzD1K+v5Zq/H7vFTxlPEXzh+JODl5LZ6X+3Gh7Nfvs7P
5XF3+LPHqzpO9hPW9rW+zeeP7ulshmsPR/1OhmvcU178ur3zI2Z55PPe6Ien
dqF5/IST6+J5ja9UbxF6AtUPvCuOmvwmp/rzrJcm/ljxXf09d54yv97vn2kd
ZvLzIf/Sef779cp1K2b0LOOJuFd9qKMbq141yyvX7Gccl9DzC1P+x/vbzeRm
7y+897/P49z72ZG/wbmfXH59pZ/1d5wf6+X44DTuep1ZT6fPSQ4mvkLh2fvJ
ZTvM1O7h+GCVdx2fPuPPXX1byldNehvOS79e2f+K4OrkFqen6OVAzltA61Gf
V64/NPP79vmX6f/jOfvpGn4G4P946nx7fuTjS8CB1kXhQPqxGLezg9J5pv5J
PuvXw9Obmq9j/8q1P9UTeX1B9Nfri1gv1+tVvR/+2v58b9WfkN8w1ydZ2+U4
tz0+3+d9pmu9rio/Ypzw53i+S9+f5q3v1531fsf/7A9c48mr+erJHvrxJeCg
+Jr4hKk9dL3nunX6fcXnet60H6fPqc/N4xnv93waxb9N/eHID475Ruf3RvLQ
cXF6AyfHcTyl05999v9cv0vys+f/iQ8kejC9Dzgp/0Nyznqevkvr1cfzsh+9
o/P9/Zw/6/mHHH+03nt+l+pJ0Dj69Z3nkZ5+p5eLyM+I/IucHD/PM7+uh8+H
E9cefjk/du1ftVt3if3d6vdJj+riQJ18+hA4fSQ+Sed33LJfazx3fjD1fmM9
oM7H/S9wMePdz9Ou/NZU3tiTS3J+SZIH1vPG9aHW/jP9jHsnRzs5fB0H86E6
jvX54/V+tAs49Hw5+9Gu7Sj+yMX9cF4a0hvUz4nOzP36evw197elexkn6n+n
9KVv7+s/uH6n3w140vnU9ZnpN3wdTV3vHn+d/LLbb7RP13n4vLy0vrX8NM0b
x35VTq/Y8/PR7sxvEvF/Icet+IvtFwGvml57f7m1vc9DXr/3vjwlBD8dn7ZT
ukb/Ex12+4r4SMPHpnGuz13+XGcvdvozzkdet/d+rvp+357z7s74r6tyls87
VcMl+7c5Pd76vsdTJIft+vs7PrDH31frHLP9pdd7ZHtCjxdyvo/jSnEKbD9w
eGH33E/9Y4mPI77UzVPpZw1ntf9kP339rn5/hbvPnzjFzwp/XS/td+bHOuUr
fR5yx1/143B1pXwe3lofm/HAOp553nHSn9L+nvq1Eh8y40/yeSF7x5QOOv0S
8dtuXgr/Xo/u66DO/ud8uu55zEPH7eAyPV8KF9q/xA/0fBOds1z3kPR1xKet
/bNevB5/tg/WVz7/azufh3v9Xvan1XGu478b18P70+lD9TvEjzj57bOdwO+q
/lzfP/UJ0zzMNF/iJ6Z6tejPwY30uj3dzefO8T/rc+8f2+uDz32r60f8/fE3
6yV6epD9e7Tdrp9P9Ev7QOfl5OhZu29k/j8D/Pau+NucT57O7Ux/nfUt9ToR
Hvg2vTetJ+X4iXr+V+NaOL+Qvr9e2b4e196uruNjP1B6b6Wfv3lO8+zS+Kb4
/vM+wS3uHb9G59TpM9Z7n2+7fj/XG3Pj0/+VHyc85+Sh9T7LGeRHVK9Pljdm
4+f5U3+1XtTXfTyuJz2Kq8unvV59/lPDj8h6cN2Xnr/kui+0/lN6T/x6LZ+x
/qrmQ0lPf+L7aKf0quff2W8gvjezX3E+36m+gvBI70+e/Sqc/WXGf7Gfuvar
+7Q+D7vxUb7ueM/3U7u7dageaV3i/3pddvMQury1746XOv369vh7kktJTtqX
W+p18PpUF49Rj9fjZzffPX9Y9YOlPI26jx2fQHUVOK/1es3xj5/wQb1ez0/O
5ZJ1/I5uObp3tR47x01P/atVnqJ+yE5Cej5dD9KbxXUW30H6XJ+/tuebPN8+
k+dcXhLOdz3jT7w8cTz+IeGHHj96f9SpnFGfR/YXIvmC8KnOi76r36n5+at5
prl+RR9Xmv2najjHe67eFfvLuvXS52s/D+xXx3tc+Tyv7V0+He038yO9Xzbn
ISY+ad1/03zbXv6Le7dPj2Y5PkLhSPzG2p7yXfr8Lmt79mNd4Uf5G33cUo+f
z/XXcSgdrPNpcx5yogOah1rh5PCikxcd3qJ1+nw+Ho/Ce4Yffb0+/c4wrgPx
5K5euV63eb2L9f+8r/S7tVw4z2dbwy3HW0W7Xh/N9Nnxeb2cyHktSR/m5Eaq
h6rn93jOfm2EF8w+SXBy/IA7H+t72f/JjXPFm1kvF+0oDpDwCo3b6QtrvJHz
uvb7mfX6vV6d8tRmv25ax3oejK8dP0V8fP2c9d/6/U94pXHpvZMrnJzh5lXz
ofv26KF/1I/9Oni8vkcX2C4Q/Tn9Sr3vvF1Rnx/vZT1TfQ7If4rhsetPqftD
x+HstE7OdFfnV6n0ZdcuouOieU37q+kunb8HwD30ZlQX3OWnYP+34/5ungqH
J7Pdedae83/G+1O/SadnreHk/bx7OXNe34H2H9Ff4rdn8+I4TrWv0fhc3uX1
++y/VeMxyosxzXfs5Gmf73i9Kj+Z8y/pOtXwcHjC7dNsb4znjr7VcFb+6Gvg
z2MezNcrPEhfejRzfpqUzzjbawIvUR6G9TnlYb2aZ579NAmuhJedPEByWD1+
57fs/bbX75EeifNvrt8nfsL7E9btfV1M4stWeLyrLhjrOfrz7f0i477Xl7Fd
cYb32T+I8JvTi+/6Re7Bjf0sdN1In3L8/11a/1le9G+TX6XjW6d5dh1crvpB
0vfq83HqsdQPdx3X49Vuj77/xXNdj4/P9u+Pt4T/N+vBs/7X5QVc339/fUmi
t71dkv0vCT/X8OB4yj19tK9v7/R16//e/1C/1593zntJ41jbf/9c9ZTn/xo3
QPLN1fzHTj5Z7xkvuXXcxUszfSe1z35Zuo6EJ9ZrjvOp9SLz87P+z35a8f24
d/iT7GTx/WhP9drreYY8f9bHnOUz4zqj1+wGnC+b6JX+L/qSp/4f9z0/kPmH
Xr72dtqej/H5NKMfyqOp49B9R/07v0DiI2Hd0zim+leC29o/+6XJOGy8R6wj
vUf4kvCB7ju33z7nk/p3dF7f6/UMJN/nfRL99fYL57dKfpb5Pd1/dB50nLRv
qI614xtm+h/vj6f91nK+r9NJ8z2asz+e0xPU7R6v+US/Pb3LcWjTupvrPNSP
xOs7VX/q6M6Mn/d6OMenKPyOK8db1c/POCuFZw9HX2ee9n0NF5f/Lu+79Xm2
P7v8s7oexG/Sde3vO/n+eb56P7fd/K9Z/+nsPCscXf4/Fyf+8eqnHoera8ly
1tQvlfisaNfr7TiPJvCFGHfy+b98f9++2MtHDm/7eJ56X8/z1RIdoH2jeLA/
9zluTeGt61HPN/NnOi/HD079Ddd+1X5w5onV78/wgfd7n/kXZvlU6Ulv3/B+
pwTXlT95PKmdjmt97vJP/FR+gC7+Le83t68cvGo46zw5L+3a/hs4B9k+pnZW
wtuE54/3Hs9+Xpk+O711LTey3y7JF7X/7rROiccXa7+ZDsR7dG57/bffZ7vP
jwv7M9Z+jFwXfSbnxrlifzpdj1rfw3kb63ufT6Mer6sD9UjzmOV3zfURZn52
rEeO7/fvZzxO8NN+Pudh7CHbeZN/pP/pGv0Sfu/f8/XNXB4AgLv1z5vqm+p1
cHleHf+S+YAev3E8kMw76R+Ib1vfY/l9Vv/Z50OkfVrvz+wPtI4719HRcdTf
zfZBN5+e33Dx9j7fKenB3XsxTsdfOT1Fvb+5zjqtY8BnWmeb6PV6z/kb1vHS
//P81s5+eDznOts1vdXzcOoT9H9nv+n5BqI3px8LyRM9v+DP9Z7cMM3frvP3
9bVrvOb8eL1eguiVkz9ruTPTbXcu6TzTOan5NBfPTnpTrz+t4eTjYZwdkN4/
nnP+YjpP673X0+l+U3hEP/Vz3p9qz9Dv9Hq6j+g/yZEOnrt+d46fIT0dwbWG
c5b/nV7KyYXHJft/ruOk+lxs3yS8sSvX9PJOpn9Oj7KOK9dJC/mnlh/Z7+hz
Pq92/fng/Gyz/Mou7lX1W+yPs76X8xtqv+v/lDeevqv0Ntf30fldo8O+DqTT
j0Q/hOdJ3qrhxvkIia+ndaV5kpzn5MPj+v46aUSvZ3DP9rnpuOj50U/2w1T9
YF3nJ+er7fXEV/lPV38p81+m3VPfc/7GRDfqc5P10DUeIHmPzyvR9Rpu5Oeg
cpqL27xaTyDnv6jPLeM1koeOq89Dt8Ln9D9TuK79sv3/mv6Y7aH1OJxfKsfl
OnzpvhPjncmxPo/O0cz7LdJz5dcVjmTv6uWD/ToRPb7ydX1p3AFv/T/e0/1Z
j0P34ZnnVfmlqEMU36V9/gkntCM7flXpzUw/cdIToj9re9ZbX9P/sz+nwqWX
x9gfKf538ur6//ev92t/NvbPrJ87v7a7fvq7dpy7dQxc3iPWS8dzl+eP8Et9
zn+NcjXxb/rdPb6X/WKdnNvbJ8ju6fMhzeSJ7PdS141kOW/93+dvXK9X47I4
r+knvBLeXeEa43f+me4a/U/rCWW9Eq2v3ju/R13XGm6+bpzCeUbP53y488ft
/bRc/gPyW/J+WvX8yT+L9LQch1Xfe/9Op6939NPxVeTfcVyz32TPP7B/2JRv
VX+ZGn4+7+M678dT3+vtBB+f/V6vh+PG3Y937r/Z8wnsl0/wqL/v4/x6/vzx
6o/wotYlWdt7P6uaX9dzG+NwdRyzXaCm/5kPrc8RyyfxPaLfx9/kJ8l6rbUd
56vb9QNb21H+Rs4D3K+nz4vZ4z/SL831TNRu7Yf9xfR7PZ328/78nsCJ8yeu
71/PU6j7mvB57Yfm8006fsbRcYIznS9tt77P8VMKd8ADON9ebvLtj3bev0rh
0ev7fN4zGncNlyzfxdXFNff8ZqYT/TmK/efyqpDecTcvHskDZAchuf98r16v
d+VJvFqvx/tVxXcV3j2/6P0LFM/s+lXpd4n/n/H93i+R6JbeU/vjwn5b9Xyy
vxbJbT1dewi8yJ+G5ZhefpvmVeM60dpvr2ec1z/Vdvo+8V/0PNbByWE6DyfP
Hfe78cGPNI/P/l/9UB7sGf7n/HPHJefDpP2/7mPO40V8pKHjCZ49ffZ2YN0v
1H62f3N85TT+dr1mv7SpHmDt50VXrfzi9OkBn7jv5S/yw6Q8eB9GflI7r6+L
pPNa1/luHCznNXP78bhke0Qtx7P/lPObIjgrPKd8sH435uPsocof9viI8++t
/XNd7d7eonrlfM5m88t6zRreU7pN9Nfbzev9dT+Opv6f6ISeD66/EP1M827V
cEG/efmul3+c/WZ9zv69pM+s8TzXMZzqNQif6XvOHrP2w3WIFV/Feml/NI96
X+/Wd/F5qoDft/WDaz/xk59Zx/94jYPwg9MTKdw+52f4QMYXJG9Hv+s92y+I
bpGdgfA74VWSN2k/93kNz+/X68T1Mmf6SK7TpPc13Kb5rVgP2fOnHE9RP89x
L7Hfa37C6dc+Ejzq88vn1slX9b6heCSO/17bcz7ZmJeLszrup3V7iW849fVO
v+boSD2+XT0txX07PMr6dsUP9D/ph9b2Ln/lVA/k81fFe/U+eMj7HxjfTP67
ClcD9zTeqd6K/qf+9f1pf708efrTrd/53d+uz6ku/c/kfPM5jGutVyE6qHqW
abz6++Mt9H59n+0Cur97ukB+PT7/0WycPv+84sl+PfP5cPLA+t2pHp/tAYTH
aJ79feZ7ST/k+Kvj+bxueX2+nN6H+UadX0+3OT7/uHX5zZz/jMuT5OzObDfv
9XVcv9HRO523zlef1/vtjHcK/+Ro9/d//Q9/9ze/D7zF57rnPz++6DyJzvb0
2NULj+/kuE0HJ8J3x9XZEbh+juO/nb6I5IH6/V27jYvr2c+rRnw7vTeVE2P+
+j7xf/X4/P6p8WLeR7retC+O9lfzfU/1vK5uNOchq/la7/+97qfTTrDCl+W1
fh94+5mjn7FfFC4y3i/xv+4DJ8/38qzzv7ibp+vxXOfB8aMy3zT+6Xkm/u2z
3XO993LA7J7xVLR3577X7/386da9n7/uI87j0+8Xz2fVcsi+v0jdf66nud4T
X+Hopo/7qMd/NR7R7+/4f2p3Inqm7d25cXbqz+fWr4T439k+9XVOp/GAihfp
HJGdLsbj+KF6vTnPWo//8v5y36v3ybvydTk/Fxen9q64P2dX8HF3jl9z9NrF
CwTcCW/Rvl/xHulbSE71+lq9Ejzq8XG9xHhv6h9C9+vV5ctx8Yan/p/2Ww23
nOcnrkS3az04+9GT/KzrNqX36zi9/4jCq8d/74qfe1ceK87vFvNX/CVweupz
oG/j/FPEd2t/Lp5tvbLfs5NH9bs13Byc9H+OI+jhxPTsGj3l/JV7cNmNF2O/
Fcfn1PDI+JT4mbXdbj0Hb/fu8ejcL0Tfr/WInIfGPT/ev5pvyuV78nYMhQPh
VZKva/jmOmzqd1Lzoz6ubB3H1boBri4unzt9X68zuuHOn/Pj93pE2ndTP5D6
OdkpyO+F66Xq/Oh+/Q77lSh86//Zj0Gfz+gT1+vVddL9u7Z3dYSzXr7Gb4xH
FZ4KV90PM3/Dq3lIc74tHVdtV8v5tlzeMh2f0wcA/GCeV/Vs3i4RVzr3a3v2
hya7JPHpOr97epXdOuzsr6rzjHYzPX7Gk7ROe/jqu0Qvez/0mE/2p1jvc76x
oP/TelU6z8/5G/yh+h3yw6L4tvf7r+u9s9c5ukbnN8Y106/kdZ/5Y2S/4l5+
Vb9knxe2l9t2/R+n+J35ajrv9fd+8/penIfa7yj7X8T/Lp+TrsPUX9nJrTO/
C/bTInlrr52LUyW5XOU2F5eW8bDCf49/YHmil0N8/s+e7+W8W8dt5ncFTgkO
hD+i/+i3hgfXvyZ9BMnR8R7pZ5T/0HXqv+P90B1e7v9/POt2tC/ZLjCzR2g7
lqf25BXvX0RwcPKB41t6/+xch5ro5oo3pniU8CrnY1W9ac/nsJ6pPncu/9Tu
uub8Kr3c5eMIov3MTunxluKhep7TPH27+WtO/U/4r6180i8+25/4X+fj1uO4
eP1X///cf4Lobk+Pc//afujXb/wosv5wFo/F+T4cn3xcXd5J3v9EZ2s4sZ20
hruLT2G6pf05vx5nX5rhB9dumkfD5zmI/oifdXJ5PX7v16Dr1fsz5H05m1/s
y0wf6vX38tHU7uPmNYPLu+KRMj5z+ISek1zk9s/MLu3xw258kNLpnu9VPuOR
1nPK/07xg8Mzx2POs0D4cx3Prp7gXfE3d/O1uDxbPp6m3q/sd6L8qn73c95P
fU788lQf5eQvN78af/jzOeOrFB+yHyHpl2s4Zn8rhZv7/3jM9KuHv87v8ZrX
jF7M827pfa0fuhqvwnVsdNz1ON+Vx4X8p4h+TusIfqTvTc+N4pce3zA/VMOX
86Ws92pHYTrl6N3x2tW8y48XfGb7NcuXU7/utV/KF5/pt7NjzezobM/f1Vs5
+ZzwOfUX89T3+/X29vOpPLrevyv/Cds/nB2E1p/2y9HO1z3p6Yiz0zMejHWg
79PVnSsaTz+OrE8kuk7+R8ff2Y9Cx9XT+bv5Wn2dkZ5vcfrALM85PKNw6POI
uTwGTk69mscjx9+R3q73P+d6KTM97sm/6HPyL3B0ux8H+ZGQ/YjiUnn9FC/p
e7K/E/ygnc3fUb+X/W0VHzv8/TkPtHdfk//Zjq3zqMc1rYfm6w3P+LDfpfM2
84v1dlpHf+n/gCPxcy7+Z50fy9s9v0v57HX95/mL433yN63fYzqyJ+c/ntqu
phfRX97H0/gh8mPV9qSv6895jtvv4/x9vZG4khzay+der6F2xXiP6Fi9r5wf
b9Z7ED+h8yX8Ru2PW6470Z/z6C/npVO4qV9jPJ/WGabx0ziv2f2ynXj9rq6n
z+90PKe8Tt5OpOvY02mWQ6M/h5dJj+DG7fZZzx9y3dNoP/uf/ekUjlO9v77f
y13ODpfrPLvzQXoykm+IPyX+vsbP5N/m8o96eyXJLfVzH4dPcKzHedqNox/C
P3pOaByz+AtP9+r+dP/kepkEz9Vf6PGs4Uz6vXfVbeD8HA4fw7xgXNfzPqz9
ZDusjrt+77TDUvsVvrwv9vI3nP4Iq5+J3vs8VXEleur66eVWb5+9tl7evh/t
SH6q4eHzCOm8p/8rHAnuui5re45vnvHn7/Kb5/wUBI8ZfKb66rkfu9IB/V6P
z5zfFcnhHHdI8K/np+18PYF+fD5PSg+PbP+fnud6X1AcptNzsH3S8S01v3rV
n/zd8f5ZX6vrtFs3qZYrvf6vlzt5vv382G6v8J/ZGSjuJPu9rN/jOrQkh83k
PZdng/JtXM2XyfmLFI41/Ni+rvi6nte74vlVT+f9vR2f7vgUXff6ec7LV/Nj
rB+jfev4qxrvUFw+6dG9v7n2Q/i413e6PBUur170l+Ooop8e37BejPSTU7nT
+QH0evYct+Pkn719OY1P5zjkWj+Q6zDt+m8T36n9ruN19fC4HjbJ0+u6n3YS
4gfW717103g847tODiT5aSZv+zjSPflkar/kPG007hgv8afX5MB3xYNzvifn
F6/8rMJxj6+96ifn81yTvaOGN9vt9Dv1OWN65vJT6/dqfKJ8JftZkD5cv+/2
veqfya6o46LzdU0+VnnUnUN3LnfzEWU9aq+3vFsXc9ffJdvl6F7nr/Ou76dx
25x/gegqtT9us9w/jRdYr1zvNfpxfnDxfCaPPp7r85yvM8bX503yeipHFwnu
tA7KnxNfWvOjOY5Q7Wl1vDn7v5J83eMHzs8d/dD75B/R4z3Gw7t8yHHNdSV7
Oy3b7Rx/Ube7Wv/itCfr/Gs4cDx7bYed22lmfGSmAyQ31ueb8HGWD+O54i/y
6/tc1y/UT8+nkL84122Z0mWiOw6/Kz0l/4caT+R47Po7c33vDD4eTsRnfv6f
xhHvkV157znXWXP+3oS3ox+KL1Z+2el/j3axj891d3DUOtUOjnFPdtX1PZ+P
ec/OMK3jfTc+kv2OFQ9rf0RH3H7S+16uezzjeZ2/g/J9vMtfmO2uCvc9/Q6f
Z+rX6YXr99nO5PZnTT9YT634ivTT+v4qB5J96G58q9Zl+cVr/dd6Sb4e8qzO
W56vkyfr/sne5O2pjl9x+Iv0NLU+OOtRiI45/nXtx/nTXK3nluNKnX2F7K0E
73o+d+uGP17vz+xK744/Jf9IstP4+scKb103hR99T/nV9T3eRzUecnXByL6Z
6Vo9vsfmupBez/tRkn1Pv9fznWzP2T1HCj89JzO59t1xk1n/HVfn/7leOd6K
xrP2l/V0RB/onNX8oNPzsP6X7H9kD1z7e1f84n1/ox4+rh3HVxE9UjgQfZvJ
BXfjD7Mdcmoninuyz8T/Mz+fq3mn5vap9erq9RB+8vq3T7givXL8leIj0kuu
92z/uyePvCt+kOOkZvwpx8HEtf7f5Tv08X+KTx3+6+UkxYeu7gjtI/ZzJL1i
Tb/v1q3O60r6A+2Xvu/kcUfv3fqsV28P03Gs/7M9WcdT233u1se+Gifnvuv8
gZxfYNbrOPyteNv5E+h3iE7W89zN+5zji5yfreovZnzqPF+W7luFx6xu/d06
zrnuCPGTxH+u9xwvGe3rccR8znz4U/uV3jv6uMLzap5knwerz391tQ7x46nz
7vEj11ec+Z9mPFHD38mZXi9PdrFde4Y+r+kny8sUt6Z0w9GLnn5w/J6TM2t4
ZHz6+R30f6jpQq7XtOpXA88+AP67+n7VkwR+u+pX6ONuiK+jdjLPJ/VLcKD7
+v2MV6b+eionz+z3JL+fdlT6Tu3/cNWvjfWJTg9Yr9N+fe29/ZDXifiR+n2X
r87VV+b6bDH++j0fD1LTeW039fPK8XiE3+K99X6aJ+Zu3cV3x0vlOhpkZ1/x
od9Xs/3l62M7/y5dx57+kJzLduuZfELn3OePW8dzNw4o6+f39GysL53tp10/
1LvxOmdekLCjxrj+8se/+sVv//FPE1z1Wsv/rh7iu+pC+HrmPV6Y12fv+QWu
G6TjIH7c9efe7893zj83wwesd3b4soa/2vH/BPQ1V/0M3penoj8/Pq5G4VyP
d5q33uXhYn+B+j3WZ6/zmdYjfXf9xXfH23BcS4zH6Y3W/nwebaULup+cH9d6
5XymMW9nB9Hxxfv1/Cnvwd16f++KJ8n6bJ2fwpPyEsZ7vT3yblxtxnuq59Rx
kJwR49F9U/NFrH+m++Pq66RPn9N6qb2xnifnAdirA8p+3bU/t89X+wknPC+0
f+L9vTqbd+veXY/DiHvSLyvfqetO8gTR01ouZfsF0YV1HjmvHcFZ10m/6+iY
6h97PsTlOfT5HHQea7vH6/1a/0b1Hu/WfXN1ouZ10PW+bu/yI358tqM4/Kt5
ALP/usJtlV+meRgf2/BRuNbnyMcr9Hxi5hsIL9V4Mdfz7uk054GPceg613TI
15lROPXyns/LRHqEuj3rg+N5v8+4fnM/vsAbV/1zWJ9b6yM+EnzX91nvTnKl
84+Z8XHeT6bXOzg7nT5/vNZL17XWS37Ie9P6NXf9/alOcLZf6/do3Zy/ipNT
SY5a4U16cdan9/Kj12/q9+vx6b6/7hey/r/rh75bp1v9xn+W+MCj3deCV/7f
5q4lS24YBO5mnxvk+RxZzNHnaFl4GD0KSgXCnc5Kz93+yJKMoCiA2Z+n9cae
zhc8rb88jytk48/26Xx8nuZ3x/zUzC+p9pFe/o44nvi8Wh5fjveo+b4Pu/WG
z/N85Nf143eVXKzJST7+NVxxWld8WmdmyvNe/k7zf/i4yI/v82OcgNLr0d+J
71HjUVfrSHD54Nvzukb7eVL63tN86gvGM17vx4fjW93ju+H5IvY4ZjfOVeEc
T/GNOW+N8VCw/7X3YeuH54XGecB1drfTOh1TvnC9XmVtn+fyIl8HMZ8Cw3lw
nNlx/r108wad+iGrcX8MB1N1alUdnGmdiyuMc433y3EyhTfk6/y0jh/ncdt7
4z6r/F9Kzvv7x/Vfq5vSrSPB60pa/3p+DvyOFd6m+J1q/E7z1yx5gc/HdfLd
n9DPLj8B+836l78H98f675HvG/dh1U+v8gpw/CCXz5q3qOxA1mJ/1f5b259V
PucYX18bfzZvr6sbnNuF3O9csy+4H9i3XP7686rx7ipvYNfvq/w2sV97HJHj
kmq82Tzdp3FcyfezX8eBPV/xKNl+1fO3TuuxxfxLNg7772aar3XKe4x4Exs/
7C/2qxbH/HTeuG7dsVN/yzTu6mme4m+QZ5FPkeNgp3niGA+K68eMx4Vyu8YP
7Ncz9e1pPvZpfuyn+X4xHyXzW/jfeTzr3v/A4tMWrrHHM7gfqWfH6fnF62u8
usgLYHgE9qeGy15k3PR3zfQbtd/hd+Lv/+fTf2cfNm4UN8HxVHxk/97op0Q7
+zm/BY5/j6emefF7PjzPs5bLV8x7NM03POW58ThWpWfa85n8YH5nvD7/nfPM
FM7h76PyBHA/Ui0/dTd/7vXzvByHYvwwxgvUcQo4Tqi/2HmMb3j/HXFEez/m
R7/bGPdaxTWqflT/+2n8d72OS02P4PKphlfoPIj++eo8zsPZ62WR78R4oyif
/Hd/mt/2dfXEmD6i/GD591ytc2rnV/lEjAcS8Xg/T1HfVv4oht9gi/Nbywv7
dD6aqb+oW9+B1wfZz7utGxWXrOKs/pe8KN16BBHH9P2MfLz75ypOPOWpP80L
UnUuIv7r1+c0/wnPB5b/PuXDsHhhxuO2+03znpznN7S2x5OJ9jfex+s/Ot9E
1c7N11s1P+XTPJRYz43hrH6dcf+8Wq/MzkQ5VfO3n+OWOB+5fFHyRvPt9nic
rnuZH3NcS+3nyt7s8URWHir838e/T/MWd+tFncf3WVvjVei6ivkx219UPrUp
D2Nap3UaR6dx+z2Of8pj4HEwTD9g68k/vyov5vW+sN81u7obL8XyK2Oc8DQv
2Ovy97P9B8dnrwd26+Po/NN2zOxT9Z1YW8vvNY237uLR0Z5SeI8fF57PR+E9
+/2syyf/3+KWu3lau/me8bjLk5z6vaP/E9epn693xfNW865M/cs8TzL7frxc
jvYiw4nO7HMdB1rTO1/l511yhNlnzH67r5vWnYo8DKWHWXuKH2F/zvyx16e/
zwfFj7z85zyEfJzWc2p4aRcXWPfP74vyZ9kv9rvyt+/1fJRzU7+orh9hz8+/
227ejqn/c+WPNvvP7u/rTK15qtkd03gEnd8f8T1//tSvOOW/8zjXXE6c+vd0
/e8qj/4+7PLHp3kouB7ZzTfK7MEc/452FM6X//1n/w7Ps/+reB6uc6aHo9xi
77vfx9W+zu2War2SfDzeFQel8k7FvK1s/nJ5dcrje3c8zzy+1x/runH5+lW8
EJvPc9yI7bs4Tvk+POUNzP0qdozyNvfTRX79Pm7c+qH5jOx9Tu3zfNy6/hSV
Vy3a537epvkwpv6M6+d68M982X3yurE6T+c+Hvo8vvXMzxHzjzG99j6/y7+s
5lVkcchTP8DiVZme7PedX1/2nC4u5c/ncRU57jHF66d5P7t8vHq+dXyuwml8
v+r52Zh+rHANf121nvXHl/Uf34vZE9bu9bJ/zZ/mdRlqPIgp7+LdPOJuPEwf
t8X1vn/e1P7ldUFVe19/as/qfB/7/S7iQ3f7nJ2D46rsnKoeo+wc/383rrLq
V5zinDwviPWH/W7vheO7/y5UHMn1c78afqnqqUVeA7NLmD2F16N8yvs1xRVj
fgwcD69PTHkqa9zz+0deI45Prt8zvG/t717/wuMuf6OL403jKab5FHSezrvh
eifOI8NLcFxU/2v+vvfzs5TfQPkP8fz8mOMVSt9UeEW3XiWupxqfee23dr+9
/n6uv+L41nCY69P/r/JjdXHvKS7C84zv9U0dF8r0O4a7Y/9rPNk5HsHwKcSx
cH7sPvt1EHFapn/W9AXGb53iEPa8iPvk+FDXP9jFDxA///WFOAfe1/q739d0
PJXSK5icV/s5nncfv9oP3uUBPec3rtnbU31L12lmchfHv6ZXdXGl5+y9Hh+L
5w/DcdmPU3e/7NpNKi5Ux0/s9wnuv6npzV37iNf1zO3NLh5e1XMueA9l9/B6
irYu/PXV+nVTv/oUT1N+2Kn+MN13dZ0WFmd7N9199dzuxPfD3+/2+szP4/wc
f32Mm8T9Rs2f2j/U++39kFN91caHxTtiXKTClbr715qfml7J88/b/DB5hvFf
ud1dzfs8tcfP+cm+re4DXVx0zYv9vpfXXf1b523c5wus5vFj+fvivuX705Uz
yo/WlYt9PYH5V3K8gufryvcxzovI5RPL69O1L56Sb1X50tV/+vF8+Xvy75jZ
W3bd/rvs7ic8Lj7fH1ScNcpnHqebx+fGuEyvz83tgf131c/HpdbnDFdRckvp
lzyuIt+3Vv9yvRt59JE37fGR7nrsyovu/HKeWG6/rvFAHCrnJ0U+jPe79Peh
/Xip9cr9dLn/K/qPTvuP+02OM0acza8f9bxoB3p5EfU7L5/WvvUXtdBTAg==

    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.959959191928862*^9, 3.959959213554824*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"58204bca-39a5-4c6f-b75a-2e6f1fcc4193"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1435.5, 755.25},
WindowMargins->{{-2.25, Automatic}, {Automatic, -22.5}},
InputAliases-><|"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> 
  RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "rintt" -> 
  RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[SelectionPlaceholder]", "\[Element]", "\[Placeholder]"}]], 
     "\[Placeholder]"}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[SelectionPlaceholder]"], 
     "\[Placeholder]"}], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "kd" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "KroneckerDeltaSeq"], "algs" -> 
  TemplateBox[{}, "Algebraics"], "bools" -> TemplateBox[{}, "Booleans"], 
  "comps" -> TemplateBox[{}, "Complexes"], "ints" -> 
  TemplateBox[{}, "Integers"], "pris" -> TemplateBox[{}, "Primes"], "rats" -> 
  TemplateBox[{}, "Rationals"], "reals" -> TemplateBox[{}, "Reals"], "pints" -> 
  TemplateBox[{}, "PositiveIntegers"], "npints" -> 
  TemplateBox[{}, "NonPositiveIntegers"], "nnints" -> 
  TemplateBox[{}, "NonNegativeIntegers"], "nints" -> 
  TemplateBox[{}, "NegativeIntegers"], "prats" -> 
  TemplateBox[{}, "PositiveRationals"], "nprats" -> 
  TemplateBox[{}, "NonPositiveRationals"], "nnrats" -> 
  TemplateBox[{}, "NonNegativeRationals"], "nrats" -> 
  TemplateBox[{}, "NegativeRationals"], "preals" -> 
  TemplateBox[{}, "PositiveReals"], "npreals" -> 
  TemplateBox[{}, "NonPositiveReals"], "nnreals" -> 
  TemplateBox[{}, "NonNegativeReals"], "nreals" -> 
  TemplateBox[{}, "NegativeReals"], "dlim" -> RowBox[{
     UnderscriptBox["\[Limit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dMlim" -> RowBox[{
     UnderscriptBox["\[MaxLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dmlim" -> RowBox[{
     UnderscriptBox["\[MinLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "tue" -> OverscriptBox["\[UndirectedEdge]", "\[Placeholder]"], "tde" -> 
  OverscriptBox["\[DirectedEdge]", "\[Placeholder]"], "cB" -> 
  TemplateBox[{}, "CombinatorB"], "cC" -> TemplateBox[{}, "CombinatorC"], 
  "cI" -> TemplateBox[{}, "CombinatorI"], "cK" -> 
  TemplateBox[{}, "CombinatorK"], "cS" -> TemplateBox[{}, "CombinatorS"], 
  "cW" -> TemplateBox[{}, "CombinatorW"], "cY" -> 
  TemplateBox[{}, "CombinatorY"], "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "cf" -> 
  SubscriptBox["&", "\[Placeholder]"]|>,
FrontEndVersion->"14.1 for Linux x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1f6974fc-22c9-40c5-a150-8ef94f08b2aa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 174, 3, 65, "Section",ExpressionUUID->"61811e2f-8f88-48b3-827f-bc37ccfe3b87"],
Cell[753, 27, 518, 13, 64, "Input",ExpressionUUID->"7fed30bc-fa40-4ceb-ad43-1c7ce2b0ceb2",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1308, 45, 168, 3, 51, "Section",ExpressionUUID->"688bcaf6-9ec4-4d81-8887-da0c6fba9cff"],
Cell[1479, 50, 396, 12, 25, "Text",ExpressionUUID->"62f97d22-943c-42aa-8f28-57cabdf1ff71"],
Cell[CellGroupData[{
Cell[1900, 66, 487, 12, 52, "Input",ExpressionUUID->"3cb04c4c-0e40-49cf-afaa-f4bf02583117"],
Cell[2390, 80, 2948, 66, 149, "Output",ExpressionUUID->"7736ef1d-8930-46c4-a082-832b918e5c19"]
}, Open  ]],
Cell[5353, 149, 236, 6, 25, "Text",ExpressionUUID->"3b65b3d4-a6d7-4b80-8a31-0ba03435a844"],
Cell[CellGroupData[{
Cell[5614, 159, 592, 12, 22, "Input",ExpressionUUID->"a8751f11-4ac9-4f3d-a9ea-7ed91161589f"],
Cell[6209, 173, 2812, 72, 86, "Output",ExpressionUUID->"e71e5b77-2523-4a50-ae8b-3a7984529bd0"]
}, Open  ]],
Cell[9036, 248, 197, 3, 25, "Text",ExpressionUUID->"76368416-6c93-46bd-9850-17df9412398e"],
Cell[CellGroupData[{
Cell[9258, 255, 212, 3, 22, "Input",ExpressionUUID->"7ca2f5a5-b298-4a93-a641-5ef782f004bc"],
Cell[9473, 260, 24850, 543, 166, "Output",ExpressionUUID->"19280415-8097-412b-bf99-895ea1363799"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[34372, 809, 224, 4, 51, "Section",ExpressionUUID->"d48b9be8-1bb0-4306-8efa-e242635be8a5"],
Cell[CellGroupData[{
Cell[34621, 817, 695, 17, 52, "Input",ExpressionUUID->"bc69cdcd-509f-4c69-8542-7ce9a03d6031"],
Cell[35319, 836, 4112, 94, 70, "Output",ExpressionUUID->"cfecf1da-169d-453a-ae78-f65969c2d1c8"]
}, Open  ]],
Cell[39446, 933, 1173, 31, 37, "Input",ExpressionUUID->"3b9c2598-367d-426f-8b7a-15188f04d1de"],
Cell[CellGroupData[{
Cell[40644, 968, 381, 8, 37, "Input",ExpressionUUID->"8aed08fe-ef2d-4717-9238-d88ea4ac5328"],
Cell[41028, 978, 272, 4, 25, "Output",ExpressionUUID->"5ab8f007-519b-4db0-812e-b9ef83d18fc2"]
}, Open  ]],
Cell[41315, 985, 504, 15, 25, "Text",ExpressionUUID->"a8585cbc-b513-4a49-b96c-8f4f4ff2a0d2"],
Cell[CellGroupData[{
Cell[41844, 1004, 2035, 52, 67, "Input",ExpressionUUID->"cbd3b98c-6309-4728-841b-8bb91ce7031d"],
Cell[43882, 1058, 27586, 477, 459, "Output",ExpressionUUID->"abbcf4f1-8a35-4753-b3f0-e200cb7dbdc0"],
Cell[71471, 1537, 10016, 189, 480, "Output",ExpressionUUID->"9fcdb901-70dc-4774-883e-3585f3cc4382"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81524, 1731, 433, 11, 22, "Input",ExpressionUUID->"6684df9c-5741-47ec-a3e3-69ab9dbb3bc1"],
Cell[81960, 1744, 1522, 30, 40, "Output",ExpressionUUID->"44981c81-7907-41ce-900c-370380000d2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83519, 1779, 670, 15, 22, "Input",ExpressionUUID->"614b908b-e9e3-4257-91bd-bd63f568e395"],
Cell[84192, 1796, 1520, 30, 40, "Output",ExpressionUUID->"d3c36456-c14c-4e4a-87bf-ea072ddda907"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[85761, 1832, 150, 3, 51, "Section",ExpressionUUID->"c95357f3-31c0-4a97-b88b-6bb122a0c28d"],
Cell[CellGroupData[{
Cell[85936, 1839, 264, 4, 29, "Input",ExpressionUUID->"c4223bd9-afac-4158-af69-bc7621596316"],
Cell[86203, 1845, 199970, 3323, 65, "Output",ExpressionUUID->"58204bca-39a5-4c6f-b75a-2e6f1fcc4193"]
}, Open  ]]
}, Open  ]]
}
]
*)

